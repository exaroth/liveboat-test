{"id":"KZgg6v3y1EHngSu15w9ddbD2SchD7Q","title":"Dev News - Last 2 days","displayTitle":"Dev News - Last 2 days","url":"","feedLink":"","items":[{"title":"What to Expect in a Kubernetes Interview for an Operator Developer?","url":"https://www.reddit.com/r/kubernetes/comments/1hneskm/what_to_expect_in_a_kubernetes_interview_for_an/","date":1735305873,"author":"/u/Acrobatic-Poetry3130","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>I am currently developing a Kubernetes Operator for a product, but prior to this, I had no hands-on experience with Kubernetes, nor have I managed a production-grade Kubernetes cluster. Despite this, I am eager to transition into roles focused on Kubernetes. Considering my background, what might an interview process look like for someone like me?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Acrobatic-Poetry3130\"> /u/Acrobatic-Poetry3130 </a> <br/> <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hneskm/what_to_expect_in_a_kubernetes_interview_for_an/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hneskm/what_to_expect_in_a_kubernetes_interview_for_an/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Missiles Are Now the Biggest Killer of Airline Passengers","url":"https://www.wsj.com/world/flight-deaths-shot-from-sky-rising-798fd31e","date":1735302113,"author":"JumpCrisscross","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://www.wsj.com/world/flight-deaths-shot-from-sky-rising-798fd31e\">https://www.wsj.com/world/flight-deaths-shot-from-sky-rising-798fd31e</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42521598\">https://news.ycombinator.com/item?id=42521598</a></p>\n<p>Points: 105</p>\n<p># Comments: 52</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Thank you, r/linux !","url":"https://www.reddit.com/r/linux/comments/1hndhqn/thank_you_rlinux/","date":1735301104,"author":"/u/oodoodoo","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>For the past few months, i was thinking about switching to Linux. At first i was sceptical, i wasnt sure if i could do the same stuff i used to do on Windows, i wasnt sure if i could play the games i played on Windows. Then the Steam Deck arrived and it opened my eyes. I quickly chose a Distro that looked nice to me, and had a decent amount of users. The switch was painless and i had absolutely no problems, thanks to THIS sub! All the people here have been super nice and helpful, even when tackled with super beginner noob questions.</p> <p>Thats it! Thank you!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/oodoodoo\"> /u/oodoodoo </a> <br/> <span><a href=\"https://www.reddit.com/r/linux/comments/1hndhqn/thank_you_rlinux/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1hndhqn/thank_you_rlinux/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Cilium connectivity test timing out on Talos","url":"https://www.reddit.com/r/kubernetes/comments/1hnd3ki/cilium_connectivity_test_timing_out_on_talos/","date":1735299471,"author":"/u/BrocoLeeOnReddit","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Hey everybody, I&#39;m trying to get into k8s+Cilium in my homelab and I have installed Talos Linux (1 Control Plane, 1 Worker) in Proxmox.</p> <p>I have applied the patch file that disabled the default CLI and kube-proxy in Talos (as described in the <a href=\"https://www.talos.dev/v1.9/kubernetes-guides/network/deploying-cilium/\">Talos docs</a>) and then deployed the Cilium Helm chart with the following values:</p> <pre><code>ipam: mode: kubernetes k8sServiceHost: localhost k8sServicePort: 7445 kubeProxyReplacement: true securityContext: capabilities: ciliumAgent: - CHOWN - KILL - NET_ADMIN - NET_RAW - IPC_LOCK - SYS_ADMIN - SYS_RESOURCE - DAC_OVERRIDE - FOWNER - SETGID - SETUID cleanCiliumState: - NET_ADMIN - SYS_ADMIN - SYS_RESOURCE cgroup: autoMount: enabled: false hostRoot: /sys/fs/cgroup bgpControlPlane: enabled: true hubble: enabled: true metrics: enabled: - dns - drop - tcp - flow - port-distribution - icmp - httpV2:exemplars=true;labelsContext=source_ip,source_namespace,source_workload,destination_ip,destination_namespace,destination_workload,traffic_direction enableOpenMetrics: true relay: enabled: true ui: enabled: true operator: prometheus: enabled: true prometheus: enabled: true </code></pre> <p>The Problem is that if I run <code>cilium connectivity test</code>, a timeout occurs.</p> <p>Apparently, the client deployment in ns cilium-test-1 fails to come online:</p> <pre><code># k describe deployment/client -n cilium-test-1 Name: client Namespace: cilium-test-1 CreationTimestamp: Fri, 27 Dec 2024 11:26:46 +0100 Labels: kind=client name=client Annotations: 1 Selector: kind=client,name=client Replicas: 1 desired | 0 updated | 0 total | 0 available | 1 unavailable StrategyType: RollingUpdate MinReadySeconds: 0 RollingUpdateStrategy: 25% max unavailable, 25% max surge Pod Template: Labels: kind=client name=client Service Account: client Containers: client: Image: Port: &lt;none&gt; Host Port: &lt;none&gt; Command: /usr/bin/pause Environment: &lt;none&gt; Mounts: &lt;none&gt; Volumes: &lt;none&gt; Node-Selectors: &lt;none&gt; Tolerations: &lt;none&gt; Conditions: Type Status Reason ---- ------ ------ Available False MinimumReplicasUnavailable ReplicaFailure True FailedCreate Progressing False ProgressDeadlineExceeded OldReplicaSets: &lt;none&gt; NewReplicaSet: client-645b68dcf7 (0/1 replicas created) Events: &lt;none&gt;deployment.kubernetes.io/revision:quay.io/cilium/alpine-curl:v1.10.0@sha256:913e8c9f3d960dde03882defa0edd3a919d529c2eb167caa7f54194528bde364 </code></pre> <p>Any Idea how I can troubleshoot this?</p> <p>I can deploy other resources and they are reachable and <code>cilium status</code> also says everything is up and running but I&#39;m wondering why the connectivity-test is failing; but I don&#39;t know what I could have misconfigured since this is basically a fresh cluster.</p> <p>EDIT: This is quite embarrassing, shortly after posting this, I found this issue:</p> <p>And the <a href=\"https://www.talos.dev/v1.9/kubernetes-guides/network/deploying-cilium/#known-issues\">Talos docs</a> also mention this problem, though I was confused because I didn&#39;t have the same error they described so I dismissed it.</p> <p>The problem comes from the enforcement of pod security in Talos. To be able to run the test, I had to run:</p> <pre><code>kubectl label namespace cilium-test-1 pod-security.kubernetes.io/enforce=privileged </code></pre> <p>After that <code>cilium connectivity test</code> runs just fine.</p> <p>I&#39;ll leave this open in case anybody else struggles with this.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/BrocoLeeOnReddit\"> /u/BrocoLeeOnReddit </a> <br/> <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hnd3ki/cilium_connectivity_test_timing_out_on_talos/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hnd3ki/cilium_connectivity_test_timing_out_on_talos/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Weekly: Share your victories thread","url":"https://www.reddit.com/r/kubernetes/comments/1hnck9x/weekly_share_your_victories_thread/","date":1735297211,"author":"/u/gctaylor","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Got something working? Figure something out? Make progress that you are excited about? Share here!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/gctaylor\"> /u/gctaylor </a> <br/> <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hnck9x/weekly_share_your_victories_thread/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hnck9x/weekly_share_your_victories_thread/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Building AI Products–Part I: Back-End Architecture","url":"https://philcalcado.com/2024/12/14/building-ai-products-part-i.html","date":1735296123,"author":"rafaelferreira","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://philcalcado.com/2024/12/14/building-ai-products-part-i.html\">https://philcalcado.com/2024/12/14/building-ai-products-part-i.html</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42521241\">https://news.ycombinator.com/item?id=42521241</a></p>\n<p>Points: 87</p>\n<p># Comments: 7</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Naked returns \"considered harmful\"?","url":"https://www.reddit.com/r/golang/comments/1hnbcd4/naked_returns_considered_harmful/","date":1735291824,"author":"/u/AlexandraLinnea","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>In <a href=\"https://bitfieldconsulting.com/posts/defer\">Demystifying defer</a> it says:</p> <blockquote> <p>The Go specification actually allows us to omit the names from the return statement in this case, and this would implicitly return whatever the values of latitude and longitude happen to be at this point. But even though that’s legal syntax, it’s not good practice.</p> <p>It’s always clearer to specify the exact values or variables you’re returning, and there’s no benefit to omitting them. So you should avoid writing these so-called naked returns, even though you’ll sometimes see them in other people’s code.</p> <p>In particular, you should be aware that just because a function has named result parameters, that doesn’t mean you must write a naked return. You can, and should, make your return values explicit.</p> </blockquote> <p>Is it actually harmful to write naked returns? If so, why does anyone do it?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/AlexandraLinnea\"> /u/AlexandraLinnea </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hnbcd4/naked_returns_considered_harmful/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hnbcd4/naked_returns_considered_harmful/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"The Inevitable Future of Kubernetes: Why the Orchestrator Should Follow the Path of the Linux Kernel","url":"https://www.reddit.com/r/kubernetes/comments/1hnb6fr/the_inevitable_future_of_kubernetes_why_the/","date":1735291063,"author":"/u/kvaps","unread":true,"desc":"","content":"<table> <tr><td> <a href=\"https://www.reddit.com/r/kubernetes/comments/1hnb6fr/the_inevitable_future_of_kubernetes_why_the/\"> <img src=\"https://external-preview.redd.it/3dnZsJnPtTG-FrSyuoRRVQKDb_D0JqxFXcXY49LRfJQ.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=9bd93ad77dd004b1278b2483244c0e6207a4c0d6\" alt=\"The Inevitable Future of Kubernetes: Why the Orchestrator Should Follow the Path of the Linux Kernel\" title=\"The Inevitable Future of Kubernetes: Why the Orchestrator Should Follow the Path of the Linux Kernel\" /> </a> </td><td> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/kvaps\"> /u/kvaps </a> <br/> <span><a href=\"https://blog.aenix.io/the-inevitable-future-of-kubernetes-why-the-orchestrator-should-follow-the-path-of-the-linux-367f49916712\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hnb6fr/the_inevitable_future_of_kubernetes_why_the/\">[comments]</a></span> </td></tr></table>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Why Go For System Programming","url":"https://www.reddit.com/r/golang/comments/1hn97pr/why_go_for_system_programming/","date":1735282410,"author":"/u/Best-Gas-2203","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>A beginner&#39;s question here as I dive deeper into the language. But upon reading the specification of the language, it mentions being a good tools for system programming. How should I understanding this statement, as in, the language is wellsuited for writing applications within the service/business logic layer, and not interacting with the UI layer? Or is it something else like operating system? </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Best-Gas-2203\"> /u/Best-Gas-2203 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hn97pr/why_go_for_system_programming/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hn97pr/why_go_for_system_programming/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Valhalla - Java's Epic Refactor","url":"https://www.reddit.com/r/programming/comments/1hn8dqx/valhalla_javas_epic_refactor/","date":1735279085,"author":"/u/daviddel","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/daviddel\"> /u/daviddel </a> <br/> <span><a href=\"https://inside.java/2024/12/16/devoxxbelgium-valhalla/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1hn8dqx/valhalla_javas_epic_refactor/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Error Handling in Rust: Choosing Between thiserror and anyhow","url":"https://www.reddit.com/r/rust/comments/1hn8cqc/error_handling_in_rust_choosing_between_thiserror/","date":1735278977,"author":"/u/CuriousActive2322","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/CuriousActive2322\"> /u/CuriousActive2322 </a> <br/> <span><a href=\"https://medium.com/@evadawnley/error-handling-in-rust-choosing-between-thiserror-and-anyhow-6da5ce825d34\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hn8cqc/error_handling_in_rust_choosing_between_thiserror/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"This Week in Rust #579","url":"https://www.reddit.com/r/rust/comments/1hn7y8z/this_week_in_rust_579/","date":1735277521,"author":"/u/seino_chan","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/seino_chan\"> /u/seino_chan </a> <br/> <span><a href=\"https://this-week-in-rust.org/blog/2024/12/25/this-week-in-rust-579/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hn7y8z/this_week_in_rust_579/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Quiver: A Modern Commutative Diagram Editor","url":"https://github.com/varkor/quiver","date":1735277261,"author":"peterkos","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://github.com/varkor/quiver\">https://github.com/varkor/quiver</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42520151\">https://news.ycombinator.com/item?id=42520151</a></p>\n<p>Points: 222</p>\n<p># Comments: 24</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"What are the meaningful differences between modern terminal emulators?","url":"https://www.reddit.com/r/linux/comments/1hn700x/what_are_the_meaningful_differences_between/","date":1735274181,"author":"/u/jsonathan","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>For example, Ghostty just came out and I don&#39;t understand what differentiates it from other emulators. I understand that it&#39;s cross-platform and GPU-accelerated. But what I mean is –– in the real world, what is the typical developer gaining by switching to this terminal from, say, Alacritty? What&#39;s the value proposition? Are there things Ghostty can do that other terminals can&#39;t? Do those things matter? Do any of these Rust/Zig/Go &quot;high-performance&quot; terminal emulators actually matter for the regular-brained developer?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/jsonathan\"> /u/jsonathan </a> <br/> <span><a href=\"https://www.reddit.com/r/linux/comments/1hn700x/what_are_the_meaningful_differences_between/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1hn700x/what_are_the_meaningful_differences_between/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Made a Self hosted ebook2audiobook converter, supports voice cloning and 1107+ languages :)","url":"https://www.reddit.com/r/programming/comments/1hn5p3n/made_a_self_hosted_ebook2audiobook_converter/","date":1735269759,"author":"/u/Impossible_Belt_7757","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>A cool accessibility side project I&#39;ve been working on</p> <p>Fully free offline</p> <p>Demos audio files are located in the readme :)</p> <p>And has a self-contained docker image if you want it like that</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Impossible_Belt_7757\"> /u/Impossible_Belt_7757 </a> <br/> <span><a href=\"https://github.com/DrewThomasson/ebook2audiobook\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1hn5p3n/made_a_self_hosted_ebook2audiobook_converter/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Map with an LLM","url":"https://godview.ai/","date":1735267856,"author":"ata_aman","unread":true,"desc":"","content":"\n<p>Christmas project from a personal need to find ideal locations.</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42519562\">https://news.ycombinator.com/item?id=42519562</a></p>\n<p>Points: 69</p>\n<p># Comments: 47</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"How to know what I should be donating to be Linux?","url":"https://www.reddit.com/r/linux/comments/1hn43zm/how_to_know_what_i_should_be_donating_to_be_linux/","date":1735264656,"author":"/u/NoCSForYou","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Ive always been confused by this. For instance I use Firefox, zotero and freecad. But it doesn&#39;t make sense to only donate to those. I use wifi, I use a terminal, I use zsh, I use ... Obviously those programs need funding too.</p> <p>It shouldn&#39;t just be the front end packages that get all the funding, the end stuff needs finding too. </p> <p>I can have about 1000 packages on my system and it&#39;s going to be logistically difficult to donate 1/1000 of 200$. I can donate to the front end packages but do they distribute the funding to their dev/make/runtime dependency packages? </p> <p>Perhaps bash is a dependency for about half my programs. Does that mean bash should get more money than all other programs? </p> <p>I don&#39;t know what to do. </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/NoCSForYou\"> /u/NoCSForYou </a> <br/> <span><a href=\"https://www.reddit.com/r/linux/comments/1hn43zm/how_to_know_what_i_should_be_donating_to_be_linux/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1hn43zm/how_to_know_what_i_should_be_donating_to_be_linux/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Tuifoop, a terminal game in Bash","url":"https://www.reddit.com/r/linux/comments/1hn2krz/tuifoop_a_terminal_game_in_bash/","date":1735259958,"author":"/u/christos_71","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/christos_71\"> /u/christos_71 </a> <br/> <span><a href=\"https://i.redd.it/ngcbmsapea9e1.png\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1hn2krz/tuifoop_a_terminal_game_in_bash/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"How to pass a vector to a function without altering the original vector","url":"https://www.reddit.com/r/rust/comments/1hn29xj/how_to_pass_a_vector_to_a_function_without/","date":1735259073,"author":"/u/__Macaroon__","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>This is my code:</p> <pre><code>fn main() { let mut v = vec![1, 3, 2, 4, 1, 2, 3, 3, 4, 4, 4, 4, 1]; println!(&quot;{}&quot;, median(v.as_mut_slice())); println!(&quot;{v:?}&quot;); } fn median(list: &amp;mut [i32]) -&gt; i32 { list.sort(); list[list.len() / 2] } </code></pre> <p>This works for finding the median value, but it feels unsatisfying that I can&#39;t seem to figure out how to find the median value of a vector without changing it. Many thanks!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/__Macaroon__\"> /u/__Macaroon__ </a> <br/> <span><a href=\"https://www.reddit.com/r/rust/comments/1hn29xj/how_to_pass_a_vector_to_a_function_without/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hn29xj/how_to_pass_a_vector_to_a_function_without/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Bill requiring US agencies to share source code with each other becomes law","url":"https://fedscoop.com/agencies-must-share-custom-source-code-under-new-share-it-act/","date":1735257472,"author":"speckx","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://fedscoop.com/agencies-must-share-custom-source-code-under-new-share-it-act/\">https://fedscoop.com/agencies-must-share-custom-source-code-under-new-share-it-act/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42518833\">https://news.ycombinator.com/item?id=42518833</a></p>\n<p>Points: 335</p>\n<p># Comments: 107</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"What’s your favorite program that you’ve ever written in go?","url":"https://www.reddit.com/r/golang/comments/1hn0zl1/whats_your_favorite_program_that_youve_ever/","date":1735255359,"author":"/u/_K8s","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Do you have any cool programs that you have written or enjoyed writing over the years?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/_K8s\"> /u/_K8s </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hn0zl1/whats_your_favorite_program_that_youve_ever/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hn0zl1/whats_your_favorite_program_that_youve_ever/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"The CAP theorem of Clustering: Why Every Algorithm Must Sacrifice Something","url":"https://blog.codingconfessions.com/p/the-cap-theorem-of-clustering","date":1735254257,"author":"fagnerbrack","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://blog.codingconfessions.com/p/the-cap-theorem-of-clustering\">https://blog.codingconfessions.com/p/the-cap-theorem-of-clustering</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42518562\">https://news.ycombinator.com/item?id=42518562</a></p>\n<p>Points: 157</p>\n<p># Comments: 19</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Reverse Engineering the Stream Deck+","url":"https://den.dev/blog/reverse-engineer-stream-deck-plus/","date":1735253166,"author":"dend","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://den.dev/blog/reverse-engineer-stream-deck-plus/\">https://den.dev/blog/reverse-engineer-stream-deck-plus/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42518444\">https://news.ycombinator.com/item?id=42518444</a></p>\n<p>Points: 122</p>\n<p># Comments: 23</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"The Performance Benefits Of Linux 6.12 LTS Over Linux 6.6 LTS","url":"https://www.reddit.com/r/linux/comments/1hmzql2/the_performance_benefits_of_linux_612_lts_over/","date":1735251808,"author":"/u/BinkReddit","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/BinkReddit\"> /u/BinkReddit </a> <br/> <span><a href=\"https://www.phoronix.com/review/linux-66-612-lts\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1hmzql2/the_performance_benefits_of_linux_612_lts_over/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"What K8s feature request is at the top of your Christmas wishlist?","url":"https://www.reddit.com/r/kubernetes/comments/1hmyn9e/what_k8s_feature_request_is_at_the_top_of_your/","date":1735248831,"author":"/u/_K8s","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/_K8s\"> /u/_K8s </a> <br/> <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hmyn9e/what_k8s_feature_request_is_at_the_top_of_your/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hmyn9e/what_k8s_feature_request_is_at_the_top_of_your/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Ghostty 1.0","url":"https://www.reddit.com/r/programming/comments/1hmy8ti/ghostty_10/","date":1735247747,"author":"/u/dayanruben","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/dayanruben\"> /u/dayanruben </a> <br/> <span><a href=\"https://ghostty.org/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1hmy8ti/ghostty_10/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Ghostty terminal is out!","url":"https://www.reddit.com/r/linux/comments/1hmxpg1/ghostty_terminal_is_out/","date":1735246304,"author":"/u/TheTwelveYearOld","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/TheTwelveYearOld\"> /u/TheTwelveYearOld </a> <br/> <span><a href=\"https://ghostty.org/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1hmxpg1/ghostty_terminal_is_out/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Sub-pixel distance transform (2023)","url":"https://acko.net/blog/subpixel-distance-transform/","date":1735246081,"author":"ChadNauseam","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://acko.net/blog/subpixel-distance-transform/\">https://acko.net/blog/subpixel-distance-transform/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42517685\">https://news.ycombinator.com/item?id=42517685</a></p>\n<p>Points: 164</p>\n<p># Comments: 19</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Ghostty 1.0","url":"https://ghostty.org/","date":1735244097,"author":"matrixhelix","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://ghostty.org/\">https://ghostty.org/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42517447\">https://news.ycombinator.com/item?id=42517447</a></p>\n<p>Points: 1704</p>\n<p># Comments: 484</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Jiff (datetime library for Rust) now supports a \"friendly\" duration format as an alternative to the `humantime` crate","url":"https://www.reddit.com/r/rust/comments/1hmwsmt/jiff_datetime_library_for_rust_now_supports_a/","date":1735243784,"author":"/u/burntsushi","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/burntsushi\"> /u/burntsushi </a> <br/> <span><a href=\"https://docs.rs/jiff/latest/jiff/fmt/friendly/index.html\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hmwsmt/jiff_datetime_library_for_rust_now_supports_a/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"How to Make Go Structs More Efficient","url":"https://www.reddit.com/r/golang/comments/1hmwmeq/how_to_make_go_structs_more_efficient/","date":1735243322,"author":"/u/GolangProject","unread":true,"desc":"","content":"<table> <tr><td> <a href=\"https://www.reddit.com/r/golang/comments/1hmwmeq/how_to_make_go_structs_more_efficient/\"> <img src=\"https://external-preview.redd.it/iNQ-UqFqCarQzIUyZbEs4N8eRP3qJR_0el4tyeZTk_Y.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=6b1e8640f3dbb03796dcfaa61e9f27c909301ea5\" alt=\"How to Make Go Structs More Efficient\" title=\"How to Make Go Structs More Efficient\" /> </a> </td><td> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/GolangProject\"> /u/GolangProject </a> <br/> <span><a href=\"https://golangprojectstructure.com/how-to-make-go-structs-more-efficient/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hmwmeq/how_to_make_go_structs_more_efficient/\">[comments]</a></span> </td></tr></table>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Write a Shell in C (2015)","url":"https://brennan.io/2015/01/16/write-a-shell-in-c/","date":1735242819,"author":"sebg","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://brennan.io/2015/01/16/write-a-shell-in-c/\">https://brennan.io/2015/01/16/write-a-shell-in-c/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42517303\">https://news.ycombinator.com/item?id=42517303</a></p>\n<p>Points: 158</p>\n<p># Comments: 9</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Write Your Own Virtual Machine (2022)","url":"https://www.jmeiners.com/lc3-vm/","date":1735241418,"author":"sebg","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://www.jmeiners.com/lc3-vm/\">https://www.jmeiners.com/lc3-vm/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42517164\">https://news.ycombinator.com/item?id=42517164</a></p>\n<p>Points: 261</p>\n<p># Comments: 57</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Dividing unsigned 8-bit numbers","url":"https://www.reddit.com/r/programming/comments/1hmvum4/dividing_unsigned_8bit_numbers/","date":1735241245,"author":"/u/ketralnis","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ketralnis\"> /u/ketralnis </a> <br/> <span><a href=\"http://0x80.pl/notesen/2024-12-21-uint8-division.html\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1hmvum4/dividing_unsigned_8bit_numbers/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"How I debugged a 2 year old \"fake debugged\" multithreading bug","url":"https://www.reddit.com/r/programming/comments/1hmvt53/how_i_debugged_a_2_year_old_fake_debugged/","date":1735241134,"author":"/u/ketralnis","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ketralnis\"> /u/ketralnis </a> <br/> <span><a href=\"https://ankush.dev/p/race-condition-strikes-back\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1hmvt53/how_i_debugged_a_2_year_old_fake_debugged/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"A Tour of WebAuthn","url":"https://www.imperialviolet.org/tourofwebauthn/tourofwebauthn.html","date":1735237669,"author":"caust1c","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://www.imperialviolet.org/tourofwebauthn/tourofwebauthn.html\">https://www.imperialviolet.org/tourofwebauthn/tourofwebauthn.html</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42516800\">https://news.ycombinator.com/item?id=42516800</a></p>\n<p>Points: 245</p>\n<p># Comments: 97</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Trying to make the fastest card drawer possible, why is my second implementation slower?","url":"https://www.reddit.com/r/rust/comments/1hmu6ax/trying_to_make_the_fastest_card_drawer_possible/","date":1735236713,"author":"/u/CrimzonGryphon","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Disclaimer: I&#39;m new to rust.</p> <p>Hey I&#39;ve been looking at making a poker evaluator. Part of this involves generating random hands. I&#39;ve discovered that my random hand generator is a performance consideration. I used naive assumptions like &#39;stack allocations and accesses are going to be super fast&#39; and &#39;the less branching the better&#39; but have found some strange behaviours.</p> <p>I would say the behaviour the confuses me most is that moving the <code>existing_cards.push(X)</code> logic into a separate loop over <code>taken</code> is actually slower (seemingly about 1.2x the time, could potentially be chance).</p> <p>Can I get some suggestions on how to improve performance further, and justifications of why my slower implementations are slower.</p> <p>This is how I&#39;ve been benchmarking: </p> <pre><code>#[test] fn test_new_random_cards_performance() { let start = Instant::now(); for _ in 0..100_000 { _ = Card::new_random_cards(5); } let duration = start.elapsed(); println!(&quot;Time taken to generate 5 random cards 100k times: {:?}&quot;, duration); assert!(duration.as_millis() &lt; 500, &quot;Performance test failed: took too long to generate cards&quot;); } </code></pre> <p>Fastest I&#39;ve achieved (about 1.5-2x faster than the non-branching implementation, 1.2x the 2-loop implementation):</p> <pre><code>pub fn new_random_cards(num_cards: usize) -&gt; Vec&lt;Card&gt; { let mut taken = [false; 52]; let mut existing_cards = Vec::with_capacity(num_cards); let rng = &amp;mut SmallRng::from_entropy(); while existing_cards.len() &lt; num_cards { let card_int = rng.gen::&lt;usize&gt;() % 52; if taken[card_int] { continue; } taken[card_int] = true; existing_cards.push(Card::from_int(card_int as u8)); } existing_cards } </code></pre> <p>Slower implementation which is effectively the same but I thought the CPU would optimise: </p> <pre><code>pub fn new_random_cards2(mut num_cards: usize) -&gt; Vec&lt;Card&gt; { let mut taken = [false; 52]; let rng = &amp;mut SmallRng::from_entropy(); while num_cards &gt; 0 { let card_int = rng.gen::&lt;usize&gt;() % 52; if taken[card_int] { continue; } taken[card_int] = true; num_cards -= 1 } let mut existing_cards = Vec::with_capacity(num_cards); for card_int in 0..52 { if existing_cards.len() &gt;= num_cards { break; } if !taken[card_int] { existing_cards.push(Card::from_int(card_int as u8)); } } existing_cards } </code></pre> <p>Even slower non-branching implementation:</p> <pre><code>pub fn new_random_cards(mut num_cards: u8) -&gt; Vec&lt;Card&gt; { let mut taken = [0u8; 52]; let rng = &amp;mut SmallRng::from_entropy(); while num_cards &gt; 0 { let card_int = rng.gen::&lt;usize&gt;() % 52; let change = 1 - taken[card_int]; num_cards -= change; taken[card_int] += change; } let mut res = Vec::with_capacity(num_cards as usize); for i in 0..52 { if taken[i] == 1 { res.push(Card::from_int(i as u8)); } } res } </code></pre> <p>In terms of implementation, the Card is just an struct with a Suit and Rank enum. Various helper methods convert ints into cards, suits, ranks.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/CrimzonGryphon\"> /u/CrimzonGryphon </a> <br/> <span><a href=\"https://www.reddit.com/r/rust/comments/1hmu6ax/trying_to_make_the_fastest_card_drawer_possible/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hmu6ax/trying_to_make_the_fastest_card_drawer_possible/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"A Simple ELF","url":"https://4zm.org/2024/12/25/a-simple-elf.html","date":1735236623,"author":"signa11","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://4zm.org/2024/12/25/a-simple-elf.html\">https://4zm.org/2024/12/25/a-simple-elf.html</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42516697\">https://news.ycombinator.com/item?id=42516697</a></p>\n<p>Points: 231</p>\n<p># Comments: 52</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Kubernetes Security Implementation Guide","url":"https://www.reddit.com/r/kubernetes/comments/1hmu1qz/kubernetes_security_implementation_guide/","date":1735236376,"author":"/u/rasvi786","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p><a href=\"https://medium.com/@rasvihostings/kubernetes-security-implementation-guide-d853bc6a86f2\">Comprehensive guide covering Kubernetes security implementations</a></p> <h1>Best Practices</h1> <ul> <li>Use minimal base images</li> <li>Enable runtime security features (seccomp, AppArmor)</li> <li>Regular security audits using tools like kubesec</li> <li>Implement least privilege principle</li> <li>Monitor pod and container logs</li> <li>Use mTLS for service-to-service communication</li> </ul> <p>This quick guide will help you implement and secure your application in Kubernetes.<br/> <a href=\"https://medium.com/@rasvihostings/kubernetes-security-implementation-guide-d853bc6a86f2\">https://medium.com/@rasvihostings/kubernetes-security-implementation-guide-d853bc6a86f2</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/rasvi786\"> /u/rasvi786 </a> <br/> <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hmu1qz/kubernetes_security_implementation_guide/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hmu1qz/kubernetes_security_implementation_guide/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"How would you handle authentication and sessions within CLIs?","url":"https://www.reddit.com/r/golang/comments/1hmtmx6/how_would_you_handle_authentication_and_sessions/","date":1735235271,"author":"/u/soupgasm","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Hey guys, so I&#39;m currently building a CLI and for the API to work the user has to generate a personal access token. I&#39;m currently just getting the token before each API call and passing it to the HTTP client. This needs to be done. But I want a simple way to check that the user is logged in. Would I then wrap the whole CLI in the authentication wrapper and check the session? How would you do this? </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/soupgasm\"> /u/soupgasm </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hmtmx6/how_would_you_handle_authentication_and_sessions/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hmtmx6/how_would_you_handle_authentication_and_sessions/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Single method interface pattern discussion","url":"https://www.reddit.com/r/golang/comments/1hmtiuf/single_method_interface_pattern_discussion/","date":1735234961,"author":"/u/TryRestartingItAgain","unread":true,"desc":"","content":"<!-- SC_OFF --><div class=\"md\"><p>Hey. As has been discussed many times the Golang standard library has many single method interfaces, e.g.</p> <pre><code>package io type Reader interface { Read(p []byte) (int, error) } </code></pre> <p>These interfaces are easy to implement and create mocks/fakes for.</p> <p>_But_ in web development we often have services, handlers, and store constructs that usually have multiple methods such as <code>SaveUser</code>, <code>GetUser</code>. A very simple User service spec:</p> <pre><code>type userStore interface { GetByID(context.Context, string) (User, error) Save(context.Context, user User) error } type UserService struct { store userStore } func (s UserService) GetUser(ctx context.Context, ID string) (User, error) { ... user, err := s.store.GetByID(ctx, ID) ... } </code></pre> <p>The problem I see with this is that we have a single interface for all of <code>userStore</code> functionality, so I generally create an interface on the producing side that the consumer can use and stub which goes against &quot;define interfaces on consumer side&quot;. The biggest issue I have with this approach is that any fakes must implement the full interface.</p> <p>I was playing around with something like this instead:</p> <pre><code>type userGetter interface { GetByID(context.Context, string) (User, error) } func (s UserService) GetUser(ctx context.Context, ID string) (User, error) { ... user, err := s.userGetter.GetByID(ctx, ID) ... } </code></pre> <p>The original <code>userStore</code> can still be used to implement the interface. It makes the coupling between store and service very relaxed, it&#39;s easy to move functionality and refactor.<br/> And it&#39;s very easy to fake in tests:</p> <pre><code>type UserGetterFn func(context.Context, string) (User, error) func (f UserGetterFn) GetByID(ctx context.Context, ID string) (User, error) { return f(ctx, ID) } svc := UserService{UserGetter: func(ctx context.Context, string) (User, error) { return User{}, fmt.Errorf(&quot;not found&quot;) }) </code></pre> <p>The downside is that it&#39;s a bit tedious to write these, but it&#39;s mostly in the test code so I think it&#39;s fine for it to be more verbose.</p> <p>I can&#39;t quite tell if I like it or not, currently just playing around with it so get a feeling.</p> <p>I&#39;ve never seen anyone use this, so I wonder if anyone has tried this more extreme style?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/TryRestartingItAgain\"> /u/TryRestartingItAgain </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hmtiuf/single_method_interface_pattern_discussion/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hmtiuf/single_method_interface_pattern_discussion/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: I've made a Monte-Carlo raytracer for glTF scenes in WebGPU","url":"https://github.com/lisyarus/webgpu-raytracer","date":1735233868,"author":"lisyarus","unread":true,"desc":"","content":"\n<p>This is a GPU \"software\" raytracer (i.e. using manual ray-scene intersections and not RTX) written using the WebGPU API that renders glTF scenes. It supports many materials, textures, material & normal mapping, and heavily relies on multiple importance sampling to speed up convergence.</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42516433\">https://news.ycombinator.com/item?id=42516433</a></p>\n<p>Points: 115</p>\n<p># Comments: 35</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"150 papers for Software Engineers","url":"https://www.reddit.com/r/programming/comments/1hmrmnh/150_papers_for_software_engineers/","date":1735229815,"author":"/u/facundoolano","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/facundoolano\"> /u/facundoolano </a> <br/> <span><a href=\"https://github.com/facundoolano/software-papers\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1hmrmnh/150_papers_for_software_engineers/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Tackler accounting tool goes from Scala to Rust","url":"https://www.reddit.com/r/rust/comments/1hmp33b/tackler_accounting_tool_goes_from_scala_to_rust/","date":1735222233,"author":"/u/35VLG84","unread":true,"desc":"","content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/35VLG84\"> /u/35VLG84 </a> <br/> <span><a href=\"https://github.com/e257-fi/tackler-ng\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hmp33b/tackler_accounting_tool_goes_from_scala_to_rust/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"How to Choose the Right Database in a System Design Interview","url":"https://blog.algomaster.io/p/how-to-choose-the-right-database","date":1735219825,"author":"Ashish Pratap Singh","unread":true,"desc":"","content":"<p>In <strong>system design interviews</strong>, the quality of your design and its ability to scale depends heavily on the <strong>database</strong> you choose.</p><p>Choosing the wrong database can lead to high latency, data loss, or even system downtime.</p><p>In this article, we will cover the <strong>9 most common</strong> <strong>use cases</strong> that come up often in system design interviews and explore the best databases for each scenario.</p><div><hr></div><h2>&#128227; <a href=\"https://dub.sh/9sbIYqa\">Design, develop and manage distributed software better (Sponsored)</a></h2><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F48b92eee-14dd-4229-92a6-49b4b79776b8_1725x1080.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F48b92eee-14dd-4229-92a6-49b4b79776b8_1725x1080.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F48b92eee-14dd-4229-92a6-49b4b79776b8_1725x1080.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F48b92eee-14dd-4229-92a6-49b4b79776b8_1725x1080.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F48b92eee-14dd-4229-92a6-49b4b79776b8_1725x1080.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F48b92eee-14dd-4229-92a6-49b4b79776b8_1725x1080.png\" width=\"1456\" height=\"912\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/48b92eee-14dd-4229-92a6-49b4b79776b8_1725x1080.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:912,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:279257,&quot;alt&quot;:&quot;&quot;,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" title=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F48b92eee-14dd-4229-92a6-49b4b79776b8_1725x1080.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F48b92eee-14dd-4229-92a6-49b4b79776b8_1725x1080.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F48b92eee-14dd-4229-92a6-49b4b79776b8_1725x1080.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F48b92eee-14dd-4229-92a6-49b4b79776b8_1725x1080.png 1456w\" sizes=\"100vw\" fetchpriority=\"high\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a></figure></div><p><strong><a href=\"https://dub.sh/9sbIYqa\">Multiplayer's</a></strong> <strong>Platform Debugger</strong> provides deep session replays with every detail you need to find and fix a bug. From frontend screens to backend traces, metrics, and logs, all in one place. Debug faster and fix customer problems more easily, so you and your team can stay focused on building great software, not combing through APM data.</p><p class=\"button-wrapper\" data-attrs=\"{&quot;url&quot;:&quot;https://dub.sh/9sbIYqa&quot;,&quot;text&quot;:&quot;Get Started for FREE&quot;,&quot;action&quot;:null,&quot;class&quot;:null}\" data-component-name=\"ButtonCreateButton\"><a class=\"button primary\" href=\"https://dub.sh/9sbIYqa\"><span>Get Started for FREE</span></a></p><div><hr></div><h2>1. Structured Data Requiring ACID Compliance</h2><p>Consider a major online marketplace like <strong>Amazon</strong> or <strong>Flipkart</strong>, which processes millions of transactions daily. </p><p>Each order involves multiple interdependent operations:</p><ul><li><p>Selecting a product.</p></li><li><p>Updating inventory.</p></li><li><p>Deducting payment from the customer.</p></li><li><p>Recording the sale for accounting and analytics.</p></li></ul><p>These operations need <strong>strong consistency</strong> and <strong>ACID</strong> transactions to avoid any data anomalies or transaction failures.</p><ul><li><p><strong>Atomicity</strong> ensures that if you fail to charge the customer&#8217;s credit card, you won&#8217;t ship the item.</p></li><li><p><strong>Consistency</strong> guarantees that the product count never goes negative if the system runs out of stock.</p></li><li><p><strong>Isolation</strong> prevents two customers from purchasing the last item at the exact same time.</p></li><li><p><strong>Durability</strong> ensures that once a payment is processed, you can&#8217;t lose that record if the server crashes the next second.</p></li></ul><h4>Recommended Database - <strong>Relational Database</strong></h4><p>When you need strict data consistency and a well-defined schema, <strong>relational databases</strong> like <strong>MySQL</strong> or <strong>PostgreSQL</strong> are often the best choice.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2ad24c6e-7bf6-4824-843f-99f2b5158533_302x263.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2ad24c6e-7bf6-4824-843f-99f2b5158533_302x263.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2ad24c6e-7bf6-4824-843f-99f2b5158533_302x263.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2ad24c6e-7bf6-4824-843f-99f2b5158533_302x263.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2ad24c6e-7bf6-4824-843f-99f2b5158533_302x263.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2ad24c6e-7bf6-4824-843f-99f2b5158533_302x263.png\" width=\"302\" height=\"263\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/2ad24c6e-7bf6-4824-843f-99f2b5158533_302x263.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:263,&quot;width&quot;:302,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:4414,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2ad24c6e-7bf6-4824-843f-99f2b5158533_302x263.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2ad24c6e-7bf6-4824-843f-99f2b5158533_302x263.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2ad24c6e-7bf6-4824-843f-99f2b5158533_302x263.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2ad24c6e-7bf6-4824-843f-99f2b5158533_302x263.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/Fw9DLdZ\">Multiplayer</a></strong></figcaption></figure></div><p>These databases are specifically designed to enforce relationships, constraints, and transactional guarantees.</p><h2>2. Flexible Schema</h2><p>A <strong>flexible schema</strong> allows you to store and manage data without the strict requirements of predefined, rigid structures (as seen in relational databases). </p><p>In a flexible schema, each record or document can have unique fields, nested data, or variable field types, making it ideal for applications where data model is highly diverse or evolves frequently.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8e20d8a1-7f8b-46b4-a5f5-6d2d60df41a5_457x599.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8e20d8a1-7f8b-46b4-a5f5-6d2d60df41a5_457x599.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8e20d8a1-7f8b-46b4-a5f5-6d2d60df41a5_457x599.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8e20d8a1-7f8b-46b4-a5f5-6d2d60df41a5_457x599.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8e20d8a1-7f8b-46b4-a5f5-6d2d60df41a5_457x599.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8e20d8a1-7f8b-46b4-a5f5-6d2d60df41a5_457x599.png\" width=\"457\" height=\"599\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/8e20d8a1-7f8b-46b4-a5f5-6d2d60df41a5_457x599.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:599,&quot;width&quot;:457,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:53928,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8e20d8a1-7f8b-46b4-a5f5-6d2d60df41a5_457x599.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8e20d8a1-7f8b-46b4-a5f5-6d2d60df41a5_457x599.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8e20d8a1-7f8b-46b4-a5f5-6d2d60df41a5_457x599.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8e20d8a1-7f8b-46b4-a5f5-6d2d60df41a5_457x599.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a></figure></div><p>Consider a <strong>social networking app</strong> where user profiles can vary widely:</p><ul><li><p>One user may have: three hobbies, a short bio.</p></li><li><p>Another user may have: two hobbies, multiple addresses and favorite sports.</p></li></ul><p>If you try to represent these fields in a traditional relational database, you might need several tables and constant schema changes each time you add or modify a field.</p><p>With a flexible schema, you can simply update the document structure on the fly. To achieve this, you need a database that can adapt to changing fields quickly.</p><h4>Recommended Databases - <strong>Document Database</strong></h4><ul><li><p><strong>MongoDB: </strong>Stores data in JSON-like documents, making it highly flexible and intuitive for developers. Ideal for use cases like social networks, content management systems, and e-commerce platforms.</p></li><li><p><strong>Couchbase: </strong>Combines flexible JSON-based document storage with high-performance key-value operations. Provides strong support for offline-first applications, with built-in synchronization features.</p></li></ul><h2>3. Needs Caching</h2><p><strong>Caching</strong> is a powerful technique that improves application performance by storing frequently accessed data in a high-speed storage layer&#8212;typically in memory.</p><p>This allows future requests for the same data to be served much faster, bypassing the need for time-consuming queries to slower, disk-based databases or external systems..</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F816f8aa7-def5-4826-9102-ebe1f1ac8c03_672x399.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F816f8aa7-def5-4826-9102-ebe1f1ac8c03_672x399.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F816f8aa7-def5-4826-9102-ebe1f1ac8c03_672x399.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F816f8aa7-def5-4826-9102-ebe1f1ac8c03_672x399.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F816f8aa7-def5-4826-9102-ebe1f1ac8c03_672x399.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F816f8aa7-def5-4826-9102-ebe1f1ac8c03_672x399.png\" width=\"608\" height=\"361\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/816f8aa7-def5-4826-9102-ebe1f1ac8c03_672x399.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:399,&quot;width&quot;:672,&quot;resizeWidth&quot;:608,&quot;bytes&quot;:27975,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F816f8aa7-def5-4826-9102-ebe1f1ac8c03_672x399.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F816f8aa7-def5-4826-9102-ebe1f1ac8c03_672x399.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F816f8aa7-def5-4826-9102-ebe1f1ac8c03_672x399.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F816f8aa7-def5-4826-9102-ebe1f1ac8c03_672x399.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/Fw9DLdZ\">Multiplayer</a></strong></figcaption></figure></div><h4>Recommended Caching Solutions:</h4><ul><li><p><strong>Redis: </strong>A highly popular, in-memory key-value store known for its speed and versatility.</p><ul><li><p>Supports advanced data structures like lists, sets, hashes, and sorted sets.</p></li><li><p>Provides persistence options, allowing data to be saved to disk.</p></li><li><p>Ideal for use cases like leaderboards, real-time analytics, pub/sub messaging, and session storage.</p></li></ul></li><li><p><strong>Memcached</strong>: A lightweight, distributed, in-memory caching solution.</p><ul><li><p>Requires minimal setup and overhead.</p></li><li><p>Best suited for applications with straightforward caching requirements, such as storing session data or query results.</p></li></ul></li></ul><h2>4. Searching Through Large Textual Data</h2><p>Many applications require efficient searching through large volumes of text.</p><p>For Example:</p><ul><li><p><strong>Job Platforms</strong>: Users on platforms like LinkedIn search for specific roles or keywords.</p></li><li><p><strong>E-commerce</strong>: Shoppers search for products based on title, description, or category.</p></li><li><p><strong>Content Platforms</strong>: Users browse articles, blogs, or videos using keywords and phrases.</p></li></ul><p>These use cases demand robust text search capabilities, including support for ranking, relevance scoring, and <a href=\"https://cloud.google.com/discover/what-is-fuzzy-search\">fuzzy matching</a>.</p><p>For these use cases, traditional databases like relational or NoSQL systems often fall short in performance and features.</p><h4>Recommended Database - <strong>Text Search Engine</strong></h4><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F12460beb-892a-40db-b2f3-932e183b2acd_808x341.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F12460beb-892a-40db-b2f3-932e183b2acd_808x341.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F12460beb-892a-40db-b2f3-932e183b2acd_808x341.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F12460beb-892a-40db-b2f3-932e183b2acd_808x341.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F12460beb-892a-40db-b2f3-932e183b2acd_808x341.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F12460beb-892a-40db-b2f3-932e183b2acd_808x341.png\" width=\"808\" height=\"341\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/12460beb-892a-40db-b2f3-932e183b2acd_808x341.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:341,&quot;width&quot;:808,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F12460beb-892a-40db-b2f3-932e183b2acd_808x341.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F12460beb-892a-40db-b2f3-932e183b2acd_808x341.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F12460beb-892a-40db-b2f3-932e183b2acd_808x341.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F12460beb-892a-40db-b2f3-932e183b2acd_808x341.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/Fw9DLdZ\">Multiplayer</a></strong></figcaption></figure></div><p>Text search engines are built to handle complex text queries efficiently and provide features like ranking and fuzzy matching.</p><ul><li><p><strong>Elasticsearch: </strong>A distributed, open-source search and analytics engine built on top of Apache Lucene. Supports advanced features like: full-text search with relevance scoring, fuzzy matching for typo-tolerant searches and highlighting matched terms in results.</p></li><li><p><strong>Apache Solr: </strong>Another search engine built on Apache Lucene, known for its flexibility and scalability. Provides powerful text search capabilities, similar to Elasticsearch, but often preferred for more complex or customized use cases.</p></li></ul><h2>5. File Storage</h2><p>Many modern applications need to efficiently store and serve media files&#8212;such as images, videos, audio, or other large binary objects.</p><p>For Example:</p><ul><li><p><strong>Streaming Platforms</strong>: Services like YouTube or Netflix store and deliver massive amounts of video content.</p></li><li><p><strong>Social Media</strong>: Platforms like Instagram and Facebook manage billions of user-uploaded images and videos.</p></li><li><p><strong>Image Hosting Services</strong>: Smaller-scale platforms also require reliable storage and fast delivery for user-uploaded content.</p></li></ul><p>While traditional relational or NoSQL databases can store binary data as <strong>BLOBs (Binary Large Objects)</strong>, they are not optimized for such use cases due to:</p><ol><li><p><strong>Scalability</strong>: Storing large binary files in databases increases storage costs and complexity, especially as the data grows.</p></li><li><p><strong>Performance</strong>: Serving media files directly from a database introduces latency and slows down overall system performance.</p></li><li><p><strong>Cost</strong>: Databases often charge based on storage and throughput, making them less cost-effective for handling large files.</p></li></ol><p>For these reasons, dedicated <strong>object storage</strong> solutions, often combined with <strong>Content Delivery Networks (CDNs)</strong>, are the preferred approach.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa0e57a0f-4e11-49cb-b820-5ea92614cf1f_492x348.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa0e57a0f-4e11-49cb-b820-5ea92614cf1f_492x348.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa0e57a0f-4e11-49cb-b820-5ea92614cf1f_492x348.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa0e57a0f-4e11-49cb-b820-5ea92614cf1f_492x348.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa0e57a0f-4e11-49cb-b820-5ea92614cf1f_492x348.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa0e57a0f-4e11-49cb-b820-5ea92614cf1f_492x348.png\" width=\"400\" height=\"282.9268292682927\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/a0e57a0f-4e11-49cb-b820-5ea92614cf1f_492x348.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:348,&quot;width&quot;:492,&quot;resizeWidth&quot;:400,&quot;bytes&quot;:11308,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa0e57a0f-4e11-49cb-b820-5ea92614cf1f_492x348.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa0e57a0f-4e11-49cb-b820-5ea92614cf1f_492x348.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa0e57a0f-4e11-49cb-b820-5ea92614cf1f_492x348.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa0e57a0f-4e11-49cb-b820-5ea92614cf1f_492x348.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a></figure></div><h4>Recommended Storage Solutions:</h4><ul><li><p><strong>Object Storage (Primary Storage): </strong>Object storage is designed to store large amounts of unstructured data efficiently.<strong> </strong></p><ul><li><p><strong>Amazon S3</strong>: The most widely used object storage service, offering high durability (99.999999999% durability) and seamless integration with AWS services.</p></li><li><p><strong>Azure Blob Storage</strong>: A comparable solution from Microsoft Azure, ideal for applications running in the Azure ecosystem.</p></li><li><p><strong>Google Cloud Storage</strong>: Provides robust storage capabilities for applications hosted on Google Cloud.</p></li></ul></li><li><p><strong>Content Delivery Networks (Global Distribution): </strong>CDNs cache media files on servers distributed worldwide, ensuring fast and reliable delivery to users regardless of their location.</p><ul><li><p><strong>Amazon CloudFront</strong>: Integrated with Amazon S3, providing seamless delivery and support for dynamic and static content.</p></li><li><p><strong>Cloudflare</strong>: Known for its high performance and robust security features, often used for websites and media-heavy applications.</p></li></ul></li></ul><h2>6. Highly Connected Data</h2><p>In many systems, data isn&#8217;t just a collection of rows and columns&#8212;it&#8217;s a <strong>web of interconnected entities</strong>. </p><p>In such cases, the relationships between entities are as important as, or sometimes even more critical than, the entities themselves. This is what we call <strong>highly connected data</strong>.</p><p>For Example:</p><ul><li><p><strong>Social Networks</strong>: Platforms like Facebook analyze relationships to suggest friends, identify communities, and calculate mutual connections or shortest paths.</p></li><li><p><strong>Recommendation Systems</strong>: E-commerce platforms like Amazon recommend products based on user behavior and connections between users, items, and categories.</p></li><li><p><strong>Knowledge Graphs</strong>: Search engines or content platforms connect concepts to deliver enriched, contextual results.</p></li></ul><p>While traditional relational databases can model relationships using foreign keys and join operations, they fall short in handling highly connected data due to:</p><ol><li><p><strong>Complex Queries</strong>: Multi-hop queries, such as &#8220;friends of friends of friends,&#8221; become cumbersome and slow in an RDBMS.</p></li><li><p><strong>Performance Bottlenecks</strong>: Traversing deeply connected relationships often involves costly joins, which degrade performance as the dataset grows.</p></li><li><p><strong>Rigid Schema</strong>: Relational databases require a predefined schema, making it harder to adapt to dynamic or evolving relationships.</p></li></ol><h4>Recommended Database - <strong>Graph Database</strong></h4><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F311650d7-88b7-4b2a-8046-26febfc0975b_427x353.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F311650d7-88b7-4b2a-8046-26febfc0975b_427x353.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F311650d7-88b7-4b2a-8046-26febfc0975b_427x353.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F311650d7-88b7-4b2a-8046-26febfc0975b_427x353.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F311650d7-88b7-4b2a-8046-26febfc0975b_427x353.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F311650d7-88b7-4b2a-8046-26febfc0975b_427x353.png\" width=\"427\" height=\"353\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/311650d7-88b7-4b2a-8046-26febfc0975b_427x353.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:353,&quot;width&quot;:427,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:11648,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F311650d7-88b7-4b2a-8046-26febfc0975b_427x353.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F311650d7-88b7-4b2a-8046-26febfc0975b_427x353.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F311650d7-88b7-4b2a-8046-26febfc0975b_427x353.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F311650d7-88b7-4b2a-8046-26febfc0975b_427x353.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/Fw9DLdZ\">Multiplayer</a></strong></figcaption></figure></div><p>Graph databases are purpose-built for connected data, using a structure of nodes (entities) and edges (relationships) to store and traverse data efficiently.</p><ul><li><p><strong>Neo4j: </strong>A popular graph database optimized for storing and querying connected data. It supports Cypher, a powerful query language designed for graph traversal.</p></li><li><p><strong>Amazon Neptune</strong>: A fully managed graph database supporting multiple graph models, including property graphs and RDF.</p></li></ul><h2>7. Metrics Data and Time Series</h2><p><strong>Time series data</strong> consists of sequential data points, each associated with a timestamp, representing how a system, process, or metric evolves over time. </p><p>Examples include CPU usage, request latencies, error rates, stock prices, temperature readings, or user activity logs.</p><p>These datasets often arrive at high frequencies, requiring efficient ingestion, storage, and retrieval for both <strong>real-time monitoring</strong> and <strong>historical trend analysis.</strong></p><p>Although you can store time series data in relational databases or NoSQL solutions, it&#8217;s <strong>not always optimal</strong>.</p><h4>Recommended Databases:</h4><ul><li><p><strong>Time Series Databases (TSDBs): </strong>Purpose-built for time series data, these databases provide optimized storage, indexing, and query capabilities for time-based data.</p><ul><li><p><strong>InfluxDB</strong>: Designed explicitly for time series data and offers powerful query features.</p></li><li><p><strong>TimescaleDB</strong>: Built on top of PostgreSQL, TimescaleDB extends relational database capabilities with time series features.</p></li></ul></li><li><p><strong>Wide-Column Databases: </strong>For scenarios requiring distributed scalability and high write throughput, wide-column stores can also handle time series data effectively.</p><ul><li><p><strong>Apache Cassandra</strong>: Supports high-velocity writes and distributed architecture, making it suitable for time series workloads.</p></li></ul></li></ul><h2>8. Analytics on Ever-Growing Data</h2><p>In scenarios where you're tasked with analyzing massive and ever-growing datasets&#8212;often scaling to terabytes or even petabytes&#8212;you need databases optimized for high-performance analytics.</p><p>These use cases typically involve complex queries, large aggregations, reporting, or feeding data into machine learning pipelines.</p><p>For example:</p><ul><li><p><strong>E-commerce platforms</strong> analyzing user behavior, purchase trends, and inventory.</p></li><li><p><strong>Social media platforms</strong> deriving insights from billions of user interactions.</p></li><li><p><strong>IoT systems</strong> processing sensor data from millions of devices.</p></li></ul><p>Handling these workloads requires databases designed for fast reads and aggregations, even as data continues to grow exponentially.</p><h4>Recommended Databases:</h4><ul><li><p><strong>Columnar Databases</strong>: These databases store data in a columnar format, making them ideal for analytical queries that scan and aggregate large datasets.</p><ul><li><p><strong>Amazon Redshift</strong>: Fully managed and highly scalable, supports SQL-based analytics with seamless integration into the AWS ecosystem.</p></li><li><p><strong>Snowflake</strong>: A cloud-native, multi-cluster data warehouse offering separate compute and storage scaling for high flexibility and performance.</p></li><li><p><strong>Google BigQuery</strong>: Serverless and highly scalable, ideal for real-time analytics and ad hoc queries on massive datasets.</p></li></ul></li><li><p><strong>Wide-Column Stores</strong>: These databases are well-suited for analytical workloads that demand high write throughput.</p><ul><li><p><strong>Apache Cassandra</strong>: Designed for distributed scalability and high write performance, commonly used in real-time analytics pipelines.</p></li><li><p><strong>HBase</strong>: Built on top of Hadoop, ideal for low-latency random reads and writes, often used in conjunction with Hadoop ecosystems for big data analytics.</p></li></ul></li></ul><h2>9. Spatial Data</h2><p>Spatial data refers to any data that describes a location, shape, or boundary on Earth. This typically involves storing <strong>latitude and longitude</strong> coordinates (for points) or polygons (for areas).</p><p>If your application relies on <strong>where</strong> as much as <strong>what,</strong> you'll need a database that natively supports spatial data types and queries.</p><p>For example:</p><ul><li><p>A <strong>ride-sharing service</strong> like Uber needs to find nearby drivers and calculate distances in real time.</p></li><li><p>A <strong>food delivery service</strong> like Swiggy or Zomato must locate nearby restaurants and customers efficiently.</p></li></ul><p>Handling spatial data requires specialized indexing and query functions to perform geometric calculations like distance, overlap, and adjacency. </p><p>Traditional B-tree or hash indexes aren&#8217;t optimized for multi-dimensional data. Instead, spatial data structures like <strong>R-trees</strong>, <strong>Quadtrees</strong>, and <strong>Geohashes</strong> are used to narrow down search areas efficiently.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc724d440-c5f7-46a9-9554-0835cc70085f_1064x623.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc724d440-c5f7-46a9-9554-0835cc70085f_1064x623.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc724d440-c5f7-46a9-9554-0835cc70085f_1064x623.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc724d440-c5f7-46a9-9554-0835cc70085f_1064x623.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc724d440-c5f7-46a9-9554-0835cc70085f_1064x623.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc724d440-c5f7-46a9-9554-0835cc70085f_1064x623.png\" width=\"616\" height=\"360.6842105263158\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/c724d440-c5f7-46a9-9554-0835cc70085f_1064x623.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:623,&quot;width&quot;:1064,&quot;resizeWidth&quot;:616,&quot;bytes&quot;:49956,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc724d440-c5f7-46a9-9554-0835cc70085f_1064x623.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc724d440-c5f7-46a9-9554-0835cc70085f_1064x623.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc724d440-c5f7-46a9-9554-0835cc70085f_1064x623.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc724d440-c5f7-46a9-9554-0835cc70085f_1064x623.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a><figcaption class=\"image-caption\"><strong>Visualized using <a href=\"https://dub.sh/Fw9DLdZ\">Multiplayer</a></strong></figcaption></figure></div><h4><strong>Recommended Databases:</strong></h4><ul><li><p><strong>PostgreSQL with PostGIS</strong>: A popular choice for storing and querying spatial data.</p><ul><li><p>Allows you to run complex geospatial queries (e.g., <code>ST_Distance</code>, <code>ST_Within</code>, <code>ST_Intersects</code>).</p></li><li><p>Provides ACID compliance for transactional needs, making it ideal for applications requiring both spatial queries and data integrity.</p></li></ul></li><li><p><strong>MongoDB (Geospatial Indexing)</strong>: Offers geospatial indexing for radius or polygon-based searches.</p><ul><li><p>Supports <strong>2dsphere indexes</strong> for Earth-centric queries and <strong>2d indexes</strong> for flat (planar) data.</p></li><li><p>Enables fast location-based searches, such as finding points within a given distance (<code>$near</code> queries).</p></li><li><p>Great if you prefer a NoSQL approach with flexible schema.</p></li></ul></li></ul><div><hr></div><p>Hope you enjoyed reading this article.</p><p>If you found it valuable, hit a like &#10084;&#65039; and consider subscribing for more such content every week.</p><p>If you have any questions or suggestions, leave a comment.</p><div class=\"captioned-button-wrap\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/p/how-i-mastered-data-structures-and-algorithms?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share&amp;token=eyJ1c2VyX2lkIjo4MzYwMjc0MywicG9zdF9pZCI6MTQ1NjU1MjUyLCJpYXQiOjE3MjE1MjE3MzEsImV4cCI6MTcyNDExMzczMSwiaXNzIjoicHViLTIyMDIyNjgiLCJzdWIiOiJwb3N0LXJlYWN0aW9uIn0.2cNY811YEugd5iH9XJQhakBzyahGqF7PcATBlFj5J2w&quot;,&quot;text&quot;:&quot;Share&quot;}\" data-component-name=\"CaptionedButtonToDOM\"><div class=\"preamble\"><p class=\"cta-caption\">This post is public so feel free to share it.</p></div><p class=\"button-wrapper\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/p/how-to-choose-the-right-database?utm_source=substack&utm_medium=email&utm_content=share&action=share&quot;,&quot;text&quot;:&quot;Share&quot;}\" data-component-name=\"ButtonCreateButton\"><a class=\"button primary\" href=\"https://blog.algomaster.io/p/how-to-choose-the-right-database?utm_source=substack&utm_medium=email&utm_content=share&action=share\"><span>Share</span></a></p></div><div class=\"subscription-widget-wrap-editor\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/subscribe?&quot;,&quot;text&quot;:&quot;Subscribe&quot;,&quot;language&quot;:&quot;en&quot;}\" data-component-name=\"SubscribeWidgetToDOM\"><div class=\"subscription-widget show-subscribe\"><div class=\"preamble\"><p class=\"cta-caption\">Subscribe for free to receive new articles every week.</p></div><form class=\"subscription-widget-subscribe\"><input type=\"email\" class=\"email-input\" name=\"email\" placeholder=\"Type your email&#8230;\" tabindex=\"-1\"><input type=\"submit\" class=\"button primary\" value=\"Subscribe\"><div class=\"fake-input-wrapper\"><div class=\"fake-input\"></div><div class=\"fake-button\"></div></div></form></div></div><p>Checkout my <strong><a href=\"https://www.youtube.com/@ashishps_1/videos\">Youtube channel</a></strong> for more in-depth content.</p><p>Follow me on <strong><a href=\"https://www.linkedin.com/in/ashishps1/\">LinkedIn</a></strong> and <strong><a href=\"https://twitter.com/ashishps_1\">X</a></strong> to stay updated.</p><p>Checkout my <strong><a href=\"https://github.com/ashishps1\">GitHub repositories</a></strong> for free interview preparation resources.</p><p>I hope you have a lovely day!</p><p>See you soon,</p><p>Ashish</p>","flags":null,"enclosureUrl":"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc724d440-c5f7-46a9-9554-0835cc70085f_1064x623.png","enclosureMime":""},{"title":"The trap of \"I am not an extrovert\"","url":"https://orkohunter.net/blog/the-trap-of-introversion/","date":1735205388,"author":"orkohunter","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://orkohunter.net/blog/the-trap-of-introversion/\">https://orkohunter.net/blog/the-trap-of-introversion/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42514127\">https://news.ycombinator.com/item?id=42514127</a></p>\n<p>Points: 208</p>\n<p># Comments: 335</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: A singing synthesizer for the browser with automatic 3-part harmony","url":"https://pbat.ch/recurse/demos/trio/","date":1735190040,"author":"zebproj","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://pbat.ch/recurse/demos/trio/\">https://pbat.ch/recurse/demos/trio/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42513276\">https://news.ycombinator.com/item?id=42513276</a></p>\n<p>Points: 195</p>\n<p># Comments: 34</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Differential Growth Addon for Blender","url":"https://boris.okunskiy.name/posts/blender-differential-growth","date":1735188091,"author":"kelseyfrog","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://boris.okunskiy.name/posts/blender-differential-growth\">https://boris.okunskiy.name/posts/blender-differential-growth</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42513157\">https://news.ycombinator.com/item?id=42513157</a></p>\n<p>Points: 283</p>\n<p># Comments: 45</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"A Minecraft server written in COBOL","url":"https://github.com/meyfa/CobolCraft","date":1735185594,"author":"notamy","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://github.com/meyfa/CobolCraft\">https://github.com/meyfa/CobolCraft</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42513022\">https://news.ycombinator.com/item?id=42513022</a></p>\n<p>Points: 316</p>\n<p># Comments: 112</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Blackcandy: Self hosted music streaming server","url":"https://github.com/blackcandy-org/blackcandy","date":1735183054,"author":"nateb2022","unread":true,"desc":"","content":"\n<p>Article URL: <a href=\"https://github.com/blackcandy-org/blackcandy\">https://github.com/blackcandy-org/blackcandy</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42512896\">https://news.ycombinator.com/item?id=42512896</a></p>\n<p>Points: 640</p>\n<p># Comments: 280</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Map of YC Startups","url":"https://yc-map.vercel.app/","date":1735166251,"author":"yoouareperfect","unread":true,"desc":"","content":"\n<p>Hey Everybody! Hope you had a merry christmas<p>Today I had a bit of fun with Claude.<p>Started by scraping YC's startups list, then ran them through OpenAI's embedding service, then UMAP'd the embedding to reduce the dimension to just two coordinates and then just forced Claude to write React that would compile to visualize that.<p>I had fun and I think it's interesting, so take a look!<p>Also note that you won't be able to zoom on mobile (found about this Plotly limitation way too late). If there's interest I can fix this issue by changing plotting libs tomorrow :)<p>Merry christmas</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42511663\">https://news.ycombinator.com/item?id=42511663</a></p>\n<p>Points: 89</p>\n<p># Comments: 39</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Seconds Since the Epoch","url":"https://aphyr.com/posts/378-seconds-since-the-epoch","date":1735152381,"author":"Aphyr","unread":true,"desc":"","content":"<p>This is not at all news, but it comes up often enough that I think there should be a concise explanation of the problem. People, myself included, like to say that POSIX time, also known as Unix time, is the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\">number</a> <a href=\"https://www.gnu.org/software/coreutils/manual/html_node/Seconds-since-the-Epoch.html\">of</a> <a href=\"https://man7.org/linux/man-pages/man2/time.2.html\">seconds</a> <a href=\"https://pkg.go.dev/time#Unix\">since</a> <a href=\"https://dev.mysql.com/doc/refman/8.4/en/datetime.html\">the</a> <a href=\"https://ruby-doc.org/core-3.0.0/Time.html\">Unix</a> <a href=\"https://docs.datastax.com/en/cql-oss/3.x/cql/cql_reference/timestamp_type_r.html\">epoch</a>, which was 1970-01-01 at 00:00:00.</p>\n<p>This is not true. Or rather, it isn’t true in the sense most people think. For example, it is presently 2024-12-25 at 18:54:53 UTC. The POSIX time is 1735152686. It has been 1735152715 seconds since the POSIX epoch. The POSIX time number is twenty-nine seconds lower.</p>\n<p>This is because POSIX time is derived <a href=\"https://nvlpubs.nist.gov/nistpubs/Legacy/FIPS/fipspub151-1.pdf\">in IEEE 1003.1</a> from <a href=\"https://en.wikipedia.org/wiki/Coordinated_Universal_Time\">Coordinated Universal Time</a>. The standard assumes that every day is exactly 86,400 seconds long. Specifically:</p>\n<blockquote>\n<p>The <em>time()</em> function returns the value of time in <b>seconds since the Epoch</b>.</p>\n</blockquote>\n<p>Which is defined as:</p>\n<blockquote>\n<p><b>seconds since the Epoch.</b> A value to be interpreted as the number of seconds between a specified time and the Epoch. A Coordinated Universal Time name (specified in terms of seconds (<em>tm_sec</em>), minutes (<em>tm_min</em>), hours (<em>tm_hour</em>), days since January 1 of the year (<em>tm_yday</em>), and calendar year minus 1900\n(<em>tm_year</em>)) is related to a time represented as <em>seconds since the Epoch</em> according to the expression below.</p>\n<p>If year &lt; 1970 or the value is negative, the relationship is undefined. If year ≥ 1970 and the value is non-negative, the value is related to a Coordinated Universal Time name according to the expression:</p>\n<p><em>tm_sec</em> + <em>tm_min</em> * 60 + <em>tm_hour</em> * 3600 + <em>tm_yday</em> * 86400 +\n(<em>tm_year</em>-70) * 31536000 + ((<em>tm_year</em> - 69) / 4) * 86400</p>\n</blockquote>\n<p>The length of the day is not 86,400 seconds, and in fact changes over time. To keep UTC days from drifting too far from solar days, astronomers periodically declare a <a href=\"https://en.wikipedia.org/wiki/Leap_second\">leap second</a> in UTC. Consequently, every few years POSIX time jumps backwards, <a href=\"https://marc.info/?l=linux-kernel&amp;m=134113577921904\">wreaking</a> <a href=\"https://www.zdnet.com/article/qantas-suffers-delays-due-to-linux-leap-second-bug/\">utter</a> <a href=\"https://blog.cloudflare.com/how-and-why-the-leap-second-affected-cloudflare-dns/\">havoc</a>. Someday it might jump forward.</p>\n<h2><a href=\"#archaeology\" id=\"archaeology\">Archaeology</a></h2>\n<p>Appendix B of IEEE 1003 has a fascinating discussion of leap seconds:</p>\n<blockquote>\n<p>The concept of leap seconds is added for precision; at the time this standard was published, 14 leap seconds had been added since January 1, 1970. These 14 seconds are ignored to provide an easy and compatible method of computing time differences.</p>\n</blockquote>\n<p>I, too, love to ignore things to make my life easy. The standard authors knew “seconds since the epoch” were not, in fact, seconds since the epoch. And they admit as much:</p>\n<blockquote>\n<p>Most systems’ notion of “time” is that of a continuously-increasing value, so this value should increase even during leap seconds. However, not only do most systems not keep track of leap seconds, but most systems are probably not synchronized to any standard time reference. Therefore, it is inappropriate to require that a time represented as seconds since the Epoch precisely represent the number of seconds between the referenced time and the Epoch.</p>\n<p>It is sufficient to require that applications be allowed to treat this time as if it represented the number of seconds between the referenced time and the Epoch. It is the responsibility of the vendor of the system, and the administrator of the system, to ensure that this value represents the number of seconds between the referenced time and the Epoch as closely as necessary for the application being run on that system….</p>\n</blockquote>\n<p>I imagine there was some debate over this point. The appendix punts, saying that vendors and administrators must make time align “as closely as necessary”, and that “this value should increase even during leap seconds”. The latter is achievable, but the former is arguably impossible: the standard requires POSIX clocks be twenty-nine seconds off.</p>\n<blockquote>\n<p>Consistent interpretation of seconds since the Epoch can be critical to certain types of distributed applications that rely on such timestamps to synchronize events. The accrual of leap seconds in a time standard is not predictable. The number of leap seconds since the Epoch will likely increase. The standard is\nmore concerned about the synchronization of time between applications of astronomically short duration and the Working Group expects these concerns to become more critical in the future.</p>\n</blockquote>\n<p>In a sense, the opposite happened. Time synchronization is <em>always</em> off, so systems generally function (however incorrectly) when times drift a bit. But leap seconds are rare, and the linearity evoked by the phrase “seconds since the epoch” is so deeply baked in to our intuition, that software can accrue serious, unnoticed bugs. Until a few years later, one of those tiny little leap seconds takes down a big chunk of the internet.</p>\n<h2><a href=\"#what-to-do-instead\" id=\"what-to-do-instead\">What To Do Instead</a></h2>\n<p>If you just need to compute the duration between two events on one computer, use <a href=\"https://docs.redhat.com/en/documentation/red_hat_enterprise_linux_for_real_time/7/html/reference_guide/sect-posix_clocks#sect-POSIX_clocks\">CLOCK_MONOTONIC</a>. If you don’t need to exchange timestamps with other systems that assume POSIX time, use <a href=\"https://www.ipses.com/eng/in-depth-analysis/standard-of-time-definition/\">TAI, GPS, or maybe LORAN</a>. If you do need rough alignment with other POSIX-timestamp systems, <a href=\"https://developers.google.com/time/smear\">smear leap seconds</a> over a longer window of time. Libraries like <a href=\"https://github.com/qntm/t-a-i\">qntm’s t-a-i</a> can convert back and forth between POSIX and TAI.</p>\n<p>There’s an ongoing effort to <a href=\"https://www.timeanddate.com/news/astronomy/end-of-leap-seconds-2022\">end leap seconds</a>, hopefully <a href=\"https://www.bipm.org/documents/20126/64811223/Resolutions-2022.pdf/281f3160-fc56-3e63-dbf7-77b76500990f\">by 2035</a>. It’ll require additional work to build conversion tables into everything that relies on the “86,400 seconds per day” assumption, but it should also make it much simpler to ask questions like “how many seconds between these two times”. At least for times after 2035!</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Bret Taylor Urges Rethink of Software Development as AI Reshapes Industry","url":"https://developers.slashdot.org/story/24/12/25/1611229/bret-taylor-urges-rethink-of-software-development-as-ai-reshapes-industry?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1735143000,"author":"msmash","unread":true,"desc":"","content":"Software development is entering an \"autopilot era\" with AI coding assistants, but the industry needs to prepare for full autonomy, argues former Salesforce co-CEO Bret Taylor. Drawing parallels with self-driving cars, he suggests the role of software engineers will evolve from code authors to operators of code-generating machines. Taylor, a board member of OpenAI and who once rewrote Google Maps over a weekend, calls for new programming systems, languages, and verification methods to ensure AI-generated code remains robust and secure. From his post: In the Autonomous Era of software engineering, the role of a software engineer will likely transform from being the author of computer code to being the operator of a code generating machine. What is a computer programming system built natively for that workflow? \n\nIf generating code is no longer a limiting factor, what types of programming languages should we build? \n\nIf a computer is generating most code, how do we make it easy for a software engineer to verify it does what they intend? What is the role of programming language design (e.g., what Rust did for memory safety)? What is the role of formal verification? What is the role of tests, CI/CD, and development workflows? \n\nToday, a software engineer's primary desktop is their editor. What is the Mission Control for a software engineer in the era of autonomous development?<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status=Bret+Taylor+Urges+Rethink+of+Software+Development+as+AI+Reshapes+Industry%3A+https%3A%2F%2Fdevelopers.slashdot.org%2Fstory%2F24%2F12%2F25%2F1611229%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Fdevelopers.slashdot.org%2Fstory%2F24%2F12%2F25%2F1611229%2Fbret-taylor-urges-rethink-of-software-development-as-ai-reshapes-industry%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://developers.slashdot.org/story/24/12/25/1611229/bret-taylor-urges-rethink-of-software-development-as-ai-reshapes-industry?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p>","flags":null,"enclosureUrl":"","enclosureMime":""}]}