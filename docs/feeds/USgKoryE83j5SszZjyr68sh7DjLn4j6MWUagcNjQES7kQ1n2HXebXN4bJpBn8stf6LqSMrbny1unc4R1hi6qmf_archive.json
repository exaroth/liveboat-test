{
  "id": "USgKoryE83j5SszZjyr68sh7DjLn4j6MWUagcNjQES7kQ1n2HXebXN4bJpBn8stf6LqSMrbny1unc4R1hi6qmf",
  "title": "top scoring links : golang",
  "displayTitle": "Reddit - Go",
  "url": "https://www.reddit.com/r/golang/top/.rss?sort=top&t=day&limit=6",
  "feedLink": "https://www.reddit.com/r/golang/top/?sort=top&t=day&limit=6",
  "is_query": false,
  "items": [
    {
      "title": "DebugString(): a handy pseudo-standard for Go libraries",
      "url": "https://www.reddit.com/r/golang/comments/1ht1p57/debugstring_a_handy_pseudostandard_for_go/",
      "date": 1735950566,
      "author": "/u/zachm",
      "unread": true,
      "content": "<table> <tr><td> <a href=\"https://www.reddit.com/r/golang/comments/1ht1p57/debugstring_a_handy_pseudostandard_for_go/\"> <img src=\"https://external-preview.redd.it/-kvYNJ0Zscl6hxwC2XlykB5E6wvpjfXa1V8FSTLzfyc.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=7634cefae025130858f26bdb2db970c77461a533\" alt=\"DebugString(): a handy pseudo-standard for Go libraries\" title=\"DebugString(): a handy pseudo-standard for Go libraries\" /> </a> </td><td> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/zachm\"> /u/zachm </a> <br/> <span><a href=\"https://www.dolthub.com/blog/2025-01-03-gos-debug-string-pseudo-standard/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1ht1p57/debugstring_a_handy_pseudostandard_for_go/\">[comments]</a></span> </td></tr></table>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Top libraries for making TUI with Go?",
      "url": "https://www.reddit.com/r/golang/comments/1hswr8n/top_libraries_for_making_tui_with_go/",
      "date": 1735937644,
      "author": "/u/Efficient-Length4670",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>I&#39;m truly intrested in learning go by doing projects. So please guys if you can suggest on me any good libraries to make tuis with go</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Efficient-Length4670\"> /u/Efficient-Length4670 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hswr8n/top_libraries_for_making_tui_with_go/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hswr8n/top_libraries_for_making_tui_with_go/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "How do you manage config in your applications?",
      "url": "https://www.reddit.com/r/golang/comments/1hsr5ly/how_do_you_manage_config_in_your_applications/",
      "date": 1735923700,
      "author": "/u/Suitable_Meringue_56",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>So this has always been a pain point. I pull in config from environment variables, but never find a satisfying way to pass it through all parts of my application. Suppose I have the following folder structure: <code> myproject ├── cmd │ ├── app1 │ │ ├── main.go │ │ └── config.go │ └── app2 │ ├── main.go │ └── config.go └── internal └── postgres ├── config.go └── postgres.go </code></p> <p>Suppose each app uses <code>postgres</code> and needs to populate the following type: <code>go // internal/postgres/config.go type Config struct { Host string Port int Username string Password string Database string } </code></p> <p>Is the only option to modify <code>postgres</code> package and use struct tags with something like <code>caarlos0/env</code>? ``<code>go // internal/postgres/config.go type Config struct { Host string</code>env:&quot;DB_HOST&quot;<code> Port int</code>env:&quot;DB_PORT&quot;<code> Username string</code>env:&quot;DB_USERNAME&quot;<code> Password string</code>env:&quot;DB_PASSWORD&quot;<code> Database string</code>env:&quot;DB_NAME&quot;` }</p> <p>// cmd/app1/main.go func main() { var cfg postgres.Config err := env.Parse(&amp;cfg) } ```</p> <p>My issue with this is that now the <code>Config</code> struct is tightly coupled with the apps themselves; the apps need to know that the <code>Config</code> struct is decorated with the appropriate struct tags, which library it should use to pull it, what the exact env var names are for configuration, etc. Moreover, if an app needs to pull in the fields with a slightly different environment variable name, this approach does not work.</p> <p>It&#39;s not the end of the world doing it this way, and I am honestly not sure if there is even a need for a &quot;better&quot; way.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Suitable_Meringue_56\"> /u/Suitable_Meringue_56 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hsr5ly/how_do_you_manage_config_in_your_applications/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hsr5ly/how_do_you_manage_config_in_your_applications/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Generating strings matching complex regexes in Go, are there any complete solutions?",
      "url": "https://www.reddit.com/r/golang/comments/1hsn554/generating_strings_matching_complex_regexes_in_go/",
      "date": 1735913003,
      "author": "/u/NoLobster5685",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Need to generate valid strings that match complex Go regex patterns (RE2) for testing. Found a couple libraries on GitHub but they&#39;re incomplete or have limitations</p> <p>Anyone solved this problem before? Is it really that complex, or am I missing something obvious? Seems like a useful testing problem to solve - curious if it&#39;s more niche than I thought.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/NoLobster5685\"> /u/NoLobster5685 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hsn554/generating_strings_matching_complex_regexes_in_go/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hsn554/generating_strings_matching_complex_regexes_in_go/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Wrote UNIX's wc CLI tool in golang",
      "url": "https://www.reddit.com/r/golang/comments/1hsmr3b/wrote_unixs_wc_cli_tool_in_golang/",
      "date": 1735911822,
      "author": "/u/Kooky_Sound5039",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>After days of learning cobra, I decided to implement the wc tool for word, byte and newline count in a file.</p> <p>Wrote a pretty good bunch of feature implementations and supporting all avaliable flags.</p> <p>I&#39;d like some review and improvement pointers here: <a href=\"https://github.com/balagrivine/wc-cli\">https://github.com/balagrivine/wc-cli</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Kooky_Sound5039\"> /u/Kooky_Sound5039 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hsmr3b/wrote_unixs_wc_cli_tool_in_golang/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hsmr3b/wrote_unixs_wc_cli_tool_in_golang/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Don't communicate by sharing memory, instead share memory by communicating",
      "url": "https://www.reddit.com/r/golang/comments/1hsivd6/dont_communicate_by_sharing_memory_instead_share/",
      "date": 1735897265,
      "author": "/u/Kooky_Sound5039",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>In one of Rob Pike&#39;s talks where he brings up the major phrase, don&#39;t (let computations) communicate by sharing me, instead (let them) share memory by communicating. Here computations can viewed as gotoutines. </p> <p>My knowledge with concurrency let&#39;s me think that communicating by sharing memory refers to using traditional concurrency synchronization techniques like mutex lock to protect shared resources and prevent data races, whereas sharing memory by communicating is using channels for concurrency synchronization and communication between goroutines. </p> <p>Am I in any way wrong or right to take this line of thought? </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Kooky_Sound5039\"> /u/Kooky_Sound5039 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hsivd6/dont_communicate_by_sharing_memory_instead_share/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hsivd6/dont_communicate_by_sharing_memory_instead_share/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "What Go web framework to choose / learn?",
      "url": "https://www.reddit.com/r/golang/comments/1hsg387/what_go_web_framework_to_choose_learn/",
      "date": 1735885569,
      "author": "/u/Fit-Culture-2269",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>I&#39;m relatively a newbie and lately I&#39;ve been learning the fundamentals of web development in Go with its net/http package, and also learning some basics with &quot;Go Web Development Cookbook&quot; book. I&#39;ve learned that for multiplexing/routing net/http isn&#39;t sufficient enough, so everybody uses a web framework. I&#39;ve read that among most common ones are Gin, Chi, Fiber. I know that Gorilla Mux had been the most popular one, but I&#39;ve read it was archived over a year ago then revived by Red Hat, and the overall popularity has been declining. For educational purposes I&#39;ve made some simple Gin and Gorilla Mux server implementations, and I have a good impression so far. But, I would like to read your recommendations on which framework will bring most benefits to me as a future (I hope so) backend dev. And I&#39;m just curious to find out about your preferences of a Go web framework</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Fit-Culture-2269\"> /u/Fit-Culture-2269 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hsg387/what_go_web_framework_to_choose_learn/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hsg387/what_go_web_framework_to_choose_learn/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Leveraging Go generics for input validation",
      "url": "https://www.reddit.com/r/golang/comments/1hsccgm/leveraging_go_generics_for_input_validation/",
      "date": 1735872999,
      "author": "/u/notfunnyxd",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Hello gophers</p> <p>I wrote a quick <a href=\"https://ffss.dev/articles/generic-validation\">blog article</a> about how I use generics for input validation without any struct tag magic.</p> <p>I would love to know what you think about this approach. Thanks for reading!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/notfunnyxd\"> /u/notfunnyxd </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hsccgm/leveraging_go_generics_for_input_validation/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hsccgm/leveraging_go_generics_for_input_validation/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "DeepSeek AI integration in SwarmGo",
      "url": "https://www.reddit.com/r/golang/comments/1hsbhvo/deepseek_ai_integration_in_swarmgo/",
      "date": 1735870447,
      "author": "/u/Grand-Western-2130",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>With the rising popularity of DeepSeek&#39;s language models, Excited to share that SwarmGo now supports DeepSeek AI integration, offering a seamless experience for building robust AI agents!</p> <p>The incorporation of DeepSeek&#39;s language models enables the effortless creation of DeepSeek-powered AI Agents with minimal code. </p> <p>You can find the SwarmGo package here: [Link to SwarmGo on GitHub](<a href=\"https://github.com/prathyushnallamothu/swarmgo\">https://github.com/prathyushnallamothu/swarmgo</a>).</p> <p>For a practical illustration, explore the code for the following example here: [DeepSeek Agent Example](<a href=\"https://github.com/prathyushnallamothu/swarmgo/blob/master/examples/deepseekagent/main.go\">https://github.com/prathyushnallamothu/swarmgo/blob/master/examples/deepseekagent/main.go</a>). </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Grand-Western-2130\"> /u/Grand-Western-2130 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hsbhvo/deepseek_ai_integration_in_swarmgo/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hsbhvo/deepseek_ai_integration_in_swarmgo/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "My crazy idea, a headless browser in Go, reached a new milestone, interactive HTMX apps.",
      "url": "https://www.reddit.com/r/golang/comments/1hs8brn/my_crazy_idea_a_headless_browser_in_go_reached_a/",
      "date": 1735861760,
      "author": "/u/stroiman",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>It&#39;s been about two months since I wrote about go-dom, a headless browser written in Go, with JavaScript support by embedding a v8 engine, and I now reached the 2nd major milestone: </p> <p><strong>Go-dom now supports a very basic HTMX app with interactivity.</strong></p> <p>The project is still in development, and has yet to reach a level of usability. The API is not yet stable, but after a recent code restructure, I believe I am approaching a sensible structure, as well as public API.</p> <p>You can find it at <a href=\"https://github.com/stroiman/go-dom\">github.com/stroiman/go-dom</a></p> <h2>The interactive HTMX app</h2> <p>The application is as simple as it can be. A web page that shows a counter. When you click the counter, it increments, and the new value is shown instead.</p> <p>But as this is HTMX, there are quite a few things that needed to be implemented for this to work, including an <code>XmlHttpRequest</code> implementation, along with <code>FormData</code>, a basic event loop, CSS and XPath selectors (some parts implemented in JS), iterators, event bubbling, class lists, DOM parsing, <code>DocumentFragment</code>, and <code>&lt;template&gt;</code> elements support, just to name a few (phew).</p> <p>I also invested time in code generations, and parts of the implementation are now generated automatically based on IDL specifications from <a href=\"https://github.com/w3c/webref\">github.com/w4c/webref</a>. Older hand-coded implementations will over time be replaced with generated ones.</p> <h2>Goal of the project</h2> <p>The purpose is to have a library that can help test web applications written in Go, where the behaviour has more complexity than just serving server-side rendered HTML.</p> <p>It is specifically written with HTMX/Go in mind, a tech combination that seems to be gaining in popularity.</p> <p>The focus is driving the implementation of behaviour. For HTMX, the actual behaviour is the result of a choreography between HTML element attributes, JavaScript code, and the endpoints and responses generated by the Go web server.</p> <p>It is intended to support a TDD loop, where a fast feedback loop is the catalyst to an increase in productivity. It is the ability to specify application behaviour that is at focus here.</p> <p>While not there yet, a modularised design is desired. First, so the user can speed up the build time by only using the modules relevant for their specific project. But second, the user can customise, or provide their own implementations when relevant for testing a specific feature. See motivating example in the next section.</p> <p>One unique feature of this project is that you can operate directly on an <code>http.Handler</code> instance, bypassing the TCP layer entirely, and eliminating the latency of the TCP stack. Tests using go-dom can easily execute in sub-milliseconds.</p> <p>While it is a noble goal to have full spec compliance, usability is prioritised over compliance. For example, as this is intended to test <em>modern</em> web applications, I have no plans to support quirks-mode.</p> <h2>Why not use ... ?</h2> <p>For my last post, there was a few replies about alternate libraries. I knew about some of them, others I didn&#39;t. But they were all implemented using a <em>real</em> browser in headless mode, and as such has the overhead of launching a browser, as well as out-of-process communication with the browser.</p> <p>This is project is intended to provide the fastest possible feedback with the simplicity of just adding a Go library.</p> <p>A library also makes it easier to customise parts of the behaviour for what you need, by providing custom implementation for specific browser APIs. This could be</p> <ul> <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Geolocation\">Geolocation</a> to test applications that track the position of the user</li> <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API\">Authentication API</a> to test applications using e.g. biometric authentication.</li> </ul> <h3>Motivating example, GPS track</h3> <p>As an example for the usability of a library over an out-of process headless browser, imagine an application depends on the location API to track the location of the user over time. For testing purposes; you could have a GPX track of movements over a longer period of time. With a modularised headless browser as a native library, you could write a custom module for the location API that provides data from the GPX track, and replay that in your test.</p> <p>To get a fast running test, you have another option that wouldn&#39;t be easy with a real browser. You can fast forward time.</p> <p>Fast forwarding time is a planned feature, not yet implemented. (More precisely, real time isn&#39;t implemented. Currently there is no <code>setInterval</code>, and <code>setTimeout</code> ignores the timeout delay and executes the callback immediately)</p> <h2>Next Milestone</h2> <p>The next milestone will be handling of form interaction. This includes quite some behaviour on the browser side, as browsers exhibit quite a log of default behaviour, such as pressing enter in a form field will submit the form.</p> <p>This should also include sensible handling of browser history. As the user navigates the page, the browser history can be updated, allowing the user to have sensible behaviour going back and forth.</p> <h2>Appendix - Example code</h2> <p>Some examples showing code using go-dom. The tests are written using <a href=\"https://onsi.github.io/ginkgo/\">ginkgo</a> and <a href=\"https://onsi.github.io/gomega/\">gomega</a>.</p> <h3>Simple usage example</h3> <p>A very basic example, where the browser loads a simple page with embedded script, and verifies that the side effects of the scripts are visible.</p> <p><code>go server := http.NewServeMux() server.Handle( &quot;GET /index.html&quot;, http.HandlerFunc(func(res http.ResponseWriter, req *http.Request) { res.Write([]byte(`&lt;body&gt; &lt;div id=&#39;target&#39;&gt;&lt;/div&gt; &lt;script&gt; const target = document.getElementById(&#39;target&#39;); target.textContent = &quot;42&quot; &lt;/script&gt; &lt;/body&gt;`)) }), ) browser := NewBrowserFromHandler(server) DeferCleanup(func() { browser.Dispose() }) win, err := browser.Open(&quot;/index.html&quot;) Expect(err).ToNot(HaveOccurred()) target := win.Document().GetElementById(&quot;target&quot;) Expect(target).To(HaveOuterHTML(Equal(`&lt;div id=&quot;target&quot;&gt;42&lt;/div&gt;`))) </code></p> <h2>HTMX Example</h2> <p>This is the working HTMX example, mentioned. The behaviour being the result of HTML element tags, and specific HTTP handlers.</p> <p>The HTML has a simple element that instructs HTMX to issue a <code>POST /increment</code> request on click</p> <p><code>html &lt;html&gt; &lt;head&gt; &lt;script src=&quot;/public/htmx.js&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div hx-trigger=&quot;click&quot; hx-post=&quot;/increment&quot; id=&quot;counter&quot;&gt;Count: 1&lt;/div&gt; &lt;/body&gt; &lt;/html&gt; </code></p> <p>The simple test server serves the HTML file, as well as the POST handler, incrementing the contents.</p> <p><code>go func CreateServer() http.Handler { server := http.NewServeMux() count := 1 server.Handle(&quot;GET /&quot;, http.FileServer(http.FS(content.FS))) server.HandleFunc(&quot;POST /increment&quot;, func(res http.ResponseWriter, req *http.Request) { count++ res.Write([]byte(fmt.Sprintf(&quot;Count: %d&quot;, count))) }) return server } </code></p> <p>The tests issue a <code>click</code> on the element, and verifies that the count has been incremented.</p> <p><code>go var _ = Describe(&quot;Load from server&quot;, func() { It(&quot;Renders HTMX without errors&quot;, func() { browser := browser.NewBrowserFromHandler(app.CreateServer()) DeferCleanup(func() { browser.Dispose() }) win, err := browser.Open(&quot;/index.html&quot;) Expect(err).ToNot(HaveOccurred()) counter := win.Document().GetElementById(&quot;counter&quot;) Expect(counter).To(HaveInnerHTML(Equal(&quot;Count: 1&quot;))) // In principle, we should wait for an htmx:load event, currently `Open` // doesn&#39;t return until the window is fully loaded counter.Click() // Again, we should wait for an event, but in practice, the test doesn&#39;t // continue until the XHR request has been processed counter = win.Document().GetElementById(&quot;counter&quot;) Expect(counter).To(HaveInnerHTML(Equal(&quot;Count: 2&quot;))) }) }) </code></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/stroiman\"> /u/stroiman </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hs8brn/my_crazy_idea_a_headless_browser_in_go_reached_a/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hs8brn/my_crazy_idea_a_headless_browser_in_go_reached_a/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Mockery v3 is released for alpha testing",
      "url": "https://www.reddit.com/r/golang/comments/1hs2rfx/mockery_v3_is_released_for_alpha_testing/",
      "date": 1735847820,
      "author": "/u/LandonClipp",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p><a href=\"https://vektra.github.io/mockery/v3.0/\">https://vektra.github.io/mockery/v3.0/</a></p> <p>Mockery v3 has been released and contains a number of high-profile benefits:</p> <ol> <li> Allows generation of <a href=\"https://vektra.github.io/mockery/v3.0/template-moq/\"><code>moq</code></a>-style templates. The <a href=\"https://github.com/matryer/moq\">https://github.com/matryer/moq</a> project is being folded into mockery to combine the speed and configuration flexibility of mockery with the simplicity of moq-style mocks.</li> <li>Changes the generation scheme to be entirely driven off of Go templates. This means that the data provided to templates is considered as part of the public API.</li> <li>Mockery now allows users to specify their own templates to make code generation far easier. Mockery handles the problem of parsing source code and enables you to focus on creating <a href=\"https://vektra.github.io/mockery/v3.0/templates/#template-file\">your own interface implementations</a>.</li> </ol> <p>Give v3 a try and let me know your thoughts! Thanks.</p> <p>Links:</p> <ul> <li><a href=\"https://github.com/vektra/mockery/tree/v3\">Github</a></li> <li><a href=\"https://vektra.github.io/mockery/v3.0/templates/\">Template Options</a></li> <li><a href=\"https://vektra.github.io/mockery/v3.0/template-mockery/\">Mockery Templates</a></li> <li><a href=\"https://vektra.github.io/mockery/v3.0/template-moq/\">Moq Templates</a></li> <li><a href=\"https://vektra.github.io/mockery/v3.0/templates/#template-file\">User Defined Templates</a></li> </ul> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/LandonClipp\"> /u/LandonClipp </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hs2rfx/mockery_v3_is_released_for_alpha_testing/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hs2rfx/mockery_v3_is_released_for_alpha_testing/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "What are Go's \"values?\"",
      "url": "https://www.reddit.com/r/golang/comments/1hs1yx3/what_are_gos_values/",
      "date": 1735845894,
      "author": "/u/jonwolski",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>I&#39;m trying to make a good faith effort to like Go, since so many of my colleagues (whose opinions I hold in high regard) seem to love it.</p> <p>In light of <a href=\"https://youtu.be/2wZ1pCpJUIM?si=gIw-rdNzE68ihC2R&amp;t=130\">https://youtu.be/2wZ1pCpJUIM?si=gIw-rdNzE68ihC2R&amp;t=130</a>, I think maybe I just value different things, and Go IS a good language for people who value what it values.</p> <p>What would you say are Go&#39;s values? i.e. What do you value in a programming language (or language implementation) that seems to align with what others in the Go community seem to also value?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/jonwolski\"> /u/jonwolski </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hs1yx3/what_are_gos_values/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hs1yx3/what_are_gos_values/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "GoProxy: create your custom net/http-compatible proxy server (6k+ stars)",
      "url": "https://www.reddit.com/r/golang/comments/1hs1vhm/goproxy_create_your_custom_nethttpcompatible/",
      "date": 1735845665,
      "author": "/u/SuccessfulAbies8471",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Hi everybody, I&#39;m the current maintainer of GoProxy library, an open source library to create proxy servers directly using Go. <a href=\"https://github.com/elazarl/goproxy\">https://github.com/elazarl/goproxy</a></p> <p>The project was created <strong>10 years</strong> ago, it has reached 6k stars on GitHub, and it&#39;s currently used in production by multiple companies.</p> <p>Long story short, here is a brief description extracted from the README:</p> <blockquote> <p>GoProxy is a library to create a <code>customized</code> HTTP/HTTPS <code>proxy server</code> using Go, with several configurable settings available. The target of this project is to offer an <code>optimized</code> proxy server, usable with reasonable amount of traffic, yet <code>customizable</code> and <code>programmable</code>.</p> <p>The proxy itself is simply a <code>net/http</code> handler, so you can add multiple middlewares (panic recover, logging, compression, etc.) over it. It can be easily integrated with any other HTTP network library.</p> </blockquote> <p>Have fun if you decide to try it, and let me know what you think! We are open to improvement proposals :)</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/SuccessfulAbies8471\"> /u/SuccessfulAbies8471 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hs1vhm/goproxy_create_your_custom_nethttpcompatible/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hs1vhm/goproxy_create_your_custom_nethttpcompatible/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Introducing grpcmd-gui: A modern desktop app for gRPC API development and testing",
      "url": "https://www.reddit.com/r/golang/comments/1hry0cd/introducing_grpcmdgui_a_modern_desktop_app_for/",
      "date": 1735836260,
      "author": "/u/AkshayKalose",
      "unread": true,
      "content": "<table> <tr><td> <a href=\"https://www.reddit.com/r/golang/comments/1hry0cd/introducing_grpcmdgui_a_modern_desktop_app_for/\"> <img src=\"https://external-preview.redd.it/Fu_9-bT4V1SySfG6RW1QMtGSWPQKLlqJKfuTIPSR5DQ.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=50eb2537edfbe1877cddfe9b46f6827ce6af9c51\" alt=\"Introducing grpcmd-gui: A modern desktop app for gRPC API development and testing\" title=\"Introducing grpcmd-gui: A modern desktop app for gRPC API development and testing\" /> </a> </td><td> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/AkshayKalose\"> /u/AkshayKalose </a> <br/> <span><a href=\"https://grpc.md/blog/intro-grpcmd-gui/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hry0cd/introducing_grpcmdgui_a_modern_desktop_app_for/\">[comments]</a></span> </td></tr></table>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "connet: A p2p reverse proxy with NAT traversal, written in Go",
      "url": "https://www.reddit.com/r/golang/comments/1hrvedx/connet_a_p2p_reverse_proxy_with_nat_traversal/",
      "date": 1735829519,
      "author": "/u/ingonev",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Over the past couple of months I&#39;ve been working on connet - <a href=\"https://github.com/connet-dev/connet\">https://github.com/connet-dev/connet</a></p> <p>It lets you connect devices on separate networks. Because it uses UDP (e.g. QUIC), it enables direct device-to-device communication. I haven&#39;t run any benchmarks (yet!), but it has been working pretty well for my needs, so I think its time to share it.</p> <p>Would love to hear your thoughts about my little project!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ingonev\"> /u/ingonev </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hrvedx/connet_a_p2p_reverse_proxy_with_nat_traversal/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hrvedx/connet_a_p2p_reverse_proxy_with_nat_traversal/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Can you really go fullstack with Go?",
      "url": "https://www.reddit.com/r/golang/comments/1hrtkih/can_you_really_go_fullstack_with_go/",
      "date": 1735824132,
      "author": "/u/originalfaskforce",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>I&#39;ve always been impressed by the developer experience on platforms like Render, Cyclic, and Vercel. They make deploying web apps so much easier! But managing deployments on my own VPS was a nightmare – constantly SSH&#39;ing in, pulling changes, and restarting the app. It was incredibly repetitive and tedious.</p> <p>Then I discovered GitHub Actions, which helped a lot. But it&#39;s missing features like real-time event streaming, alerts, and proper monitoring – crucial when you&#39;re actively developing. </p> <p>So, I&#39;m building my own version of <a href=\"http://Render.com\">Render.com</a> (a simpler version)! I&#39;m using Go, and I&#39;ll be documenting the entire process here. I&#39;ll share updates, challenges, and solutions along the way. Anyone else tackled a similar project? What were your biggest challenges/wins? </p> <p>* Project Goal: Simplified and feature-rich deployment workflow</p> <p>* Technology: Go</p> <p>* Focus: Event streaming, alerts, comprehensive monitoring</p> <p>* Progress updates to follow! </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/originalfaskforce\"> /u/originalfaskforce </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hrtkih/can_you_really_go_fullstack_with_go/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hrtkih/can_you_really_go_fullstack_with_go/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Essential Linux Topics for Go Developers?",
      "url": "https://www.reddit.com/r/golang/comments/1hroml2/essential_linux_topics_for_go_developers/",
      "date": 1735803823,
      "author": "/u/Necessary-Finish2188",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>I&#39;m a beginner golang developer using Ubuntu, and I&#39;m trying to better understand what Linux-related topics are essential for backend development. Are there any good courses or resources you would recommend? I&#39;ve heard that containers and virtualization can be useful, but it&#39;s all still fuzzy to me. Are there other important topics I should explore that I might not be aware of yet? Any advice would be greatly appreciated!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Necessary-Finish2188\"> /u/Necessary-Finish2188 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hroml2/essential_linux_topics_for_go_developers/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hroml2/essential_linux_topics_for_go_developers/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Zasper: A Modern and Efficient Alternative to JupyterLab, built in Go",
      "url": "https://www.reddit.com/r/golang/comments/1hrkv4o/zasper_a_modern_and_efficient_alternative_to/",
      "date": 1735789645,
      "author": "/u/Salt-Syllabub9030",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>I have built <strong>Zasper</strong>, a modern and efficient Jupyterlab alternative in Go. <a href=\"https://github.com/zasper-io/zasper\">https://github.com/zasper-io/zasper</a></p> <p>Every Jupyter Notebook runs with a Jupyter kernel (e.g. IPython kernel, IJulia kernel). The JupyterLab Server is responsible for managing the Jupyter kernels and serves as a broker between Jupyter Notebook running in LabApp(frontend) and Jupyter Kernel. Zasper replaces Jupterlab by reimplementing most of the Jupyterlab internals to run a kernel and the communication layer, etc. </p> <p>Initial benchmarks : <strong>Zasper uses one fourth of RAM and one fourth of CPU used by Jupterlab.</strong> While Jupyterlab uses around 104.8 MB of RAM and 0.8 CPUs, Zasper uses 26.7 MB of RAM and 0.2 CPUs. </p> <p>Blog: <a href=\"https://zasper.io/blog/zasper-intro.html\">https://zasper.io/blog/zasper-intro.html</a> </p> <p>Let me know what you think about the project.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Salt-Syllabub9030\"> /u/Salt-Syllabub9030 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hrkv4o/zasper_a_modern_and_efficient_alternative_to/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hrkv4o/zasper_a_modern_and_efficient_alternative_to/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "race condition example from dave cheney",
      "url": "https://www.reddit.com/r/golang/comments/1hrcurt/race_condition_example_from_dave_cheney/",
      "date": 1735766478,
      "author": "/u/hakijun",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>ran into this post <a href=\"https://dave.cheney.net/2015/11/18/wednesday-pop-quiz-spot-the-race\">https://dave.cheney.net/2015/11/18/wednesday-pop-quiz-spot-the-race</a> , is there an explanation to this somewhere?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/hakijun\"> /u/hakijun </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hrcurt/race_condition_example_from_dave_cheney/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hrcurt/race_condition_example_from_dave_cheney/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "I’ve made a playground to let people try Gonfique v2 in browser",
      "url": "https://www.reddit.com/r/golang/comments/1hr9f87/ive_made_a_playground_to_let_people_try_gonfique/",
      "date": 1735757328,
      "author": "/u/ufukty",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>I&#39;ve made significant progress in developing the second iteration of Gonfique. </p> <p>For people never heard it, Gonfique is a special kind of YAML-to-Go and JSON-to-Go that provides customization options developers need when they need to get a mapping type for config files and also works offline to integrate build pipelines better.</p> <p>I also want to get some feedback on the design of features and documentation.</p> <p>Documentation for v2 is in dev branch: <a href=\"https://github.com/ufukty/gonfique/tree/dev\">https://github.com/ufukty/gonfique/tree/dev</a></p> <p>For the playground; it is also in alpha phase, there are many features need to be added. </p> <p>Gonfique Playground: <a href=\"https://gonfique-playground.pages.dev\">https://gonfique-playground.pages.dev</a></p> <p>New version brings 6 different directives that can be applied on resolved and declared types. Like creating named type declaration either with auto generated name, or custom typename; replacing the resolved type with a custom type either from stdlib or custom package; using a map for a dictionary instead of struct; implementing iterators on dictionaries’ types and accessors on selected fields. </p> <p>Type declaration is useful when you want to use one type for many keys in same or different dicts.</p> <p>Gonfique Playground contains many alternative Gonfique config rule sets to show how flexible Gonfique can be. Toggle each to see their effect in real time. </p> <p>You can also use your file to get its mapping type with Gonfique. </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ufukty\"> /u/ufukty </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hr9f87/ive_made_a_playground_to_let_people_try_gonfique/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hr9f87/ive_made_a_playground_to_let_people_try_gonfique/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Map performance question -- a tree of maps or one large map -- which is faster?",
      "url": "https://www.reddit.com/r/golang/comments/1hr7ze8/map_performance_question_a_tree_of_maps_or_one/",
      "date": 1735753544,
      "author": "/u/Rich-Engineer2670",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Let&#39;s say I have 256 map entries just to keep things simple. They are keyed by uint64s.</p> <p>Which is faster to run, a single map of 256 entries or a 16-item map that points to 16-maps? I know at this size it doesn&#39;t really matter, but it would if we were talking about 16 million entries. It depends on how Golang implements the map logic.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Rich-Engineer2670\"> /u/Rich-Engineer2670 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hr7ze8/map_performance_question_a_tree_of_maps_or_one/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hr7ze8/map_performance_question_a_tree_of_maps_or_one/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Who's Hiring - January 2025",
      "url": "https://www.reddit.com/r/golang/comments/1hr58s3/whos_hiring_january_2025/",
      "date": 1735745870,
      "author": "/u/jerf",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>This post will be stickied at the top of until the last week of January (more or less).</p> <p>Please adhere to the following rules when posting:</p> <p><strong>Rules for individuals:</strong></p> <ul> <li>Don&#39;t create top-level comments; those are for employers.</li> <li>Feel free to reply to top-level comments with on-topic questions.</li> <li>Meta-discussion should be reserved for the distinguished mod comment.</li> </ul> <p><strong>Rules for employers:</strong></p> <ul> <li>To make a top-level comment you must be hiring directly, or a focused third party recruiter with <strong>specific jobs with named companies</strong> in hand. No recruiter fishing for contacts please.</li> <li>The job must involve working with Go on a regular basis, even if not 100% of the time.</li> <li>One top-level comment per employer. If you have multiple job openings, please consolidate their descriptions or mention them in replies to your own top-level comment.</li> <li>Please base your comment on the following template:</li> </ul> <p><strong>COMPANY:</strong> <em>[Company name; ideally link to your company&#39;s website or careers page.]</em></p> <p><strong>TYPE:</strong> <em>[Full time, part time, internship, contract, etc.]</em></p> <p><strong>DESCRIPTION:</strong> <em>[What does your team/company do, and what are you using Go for? How much experience are you seeking and what seniority levels are you hiring for? The more details the better.]</em></p> <p><strong>LOCATION:</strong> <em>[Where are your office or offices located? If your workplace language isn&#39;t English-speaking, please specify it.]</em></p> <p><strong>ESTIMATED COMPENSATION:</strong> <em>[Please attempt to provide at least a rough expectation of wages/salary.If you can&#39;t state a number for compensation, omit this field. Do not just say &quot;competitive&quot;. Everyone says their compensation is &quot;competitive&quot;.If you are listing several positions in the &quot;Description&quot; field above, then feel free to include this information inline above, and put &quot;See above&quot; in this field.If compensation is expected to be offset by other benefits, then please include that information here as well.]</em></p> <p><strong>REMOTE:</strong> <em>[Do you offer the option of working remotely? If so, do you require employees to live in certain areas or time zones?]</em></p> <p><strong>VISA:</strong> <em>[Does your company sponsor visas?]</em></p> <p><strong>CONTACT:</strong> <em>[How can someone get in touch with you?]</em></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/jerf\"> /u/jerf </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hr58s3/whos_hiring_january_2025/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hr58s3/whos_hiring_january_2025/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Go's Exciting Future | 1.24 | json/v2 | unions...",
      "url": "https://www.reddit.com/r/golang/comments/1hr4qd4/gos_exciting_future_124_jsonv2_unions/",
      "date": 1735744264,
      "author": "/u/Kac3npochhar",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>I made a short video about what&#39;s ahead for Go. First, what&#39;s in 1.24 and later some changes that might or might not happen. I hope you like it.</p> <p><a href=\"https://youtu.be/dRzAAMXm5Wk\">https://youtu.be/dRzAAMXm5Wk</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Kac3npochhar\"> /u/Kac3npochhar </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hr4qd4/gos_exciting_future_124_jsonv2_unions/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hr4qd4/gos_exciting_future_124_jsonv2_unions/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Whatever happened to \"Golang Dojo\"- a Youtube channel on learning Go?",
      "url": "https://www.reddit.com/r/golang/comments/1hr3pq5/whatever_happened_to_golang_dojo_a_youtube/",
      "date": 1735740923,
      "author": "/u/teabagsOnFire",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>I see he pulled all the content now</p> <p><a href=\"https://www.youtube.com/@GolangDojo\">https://www.youtube.com/@GolangDojo</a> </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/teabagsOnFire\"> /u/teabagsOnFire </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hr3pq5/whatever_happened_to_golang_dojo_a_youtube/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hr3pq5/whatever_happened_to_golang_dojo_a_youtube/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Feedback on a newbie project",
      "url": "https://www.reddit.com/r/golang/comments/1hr1fgl/feedback_on_a_newbie_project/",
      "date": 1735731937,
      "author": "/u/Every_Pudding_4466",
      "unread": true,
      "content": "<table> <tr><td> <a href=\"https://www.reddit.com/r/golang/comments/1hr1fgl/feedback_on_a_newbie_project/\"> <img src=\"https://external-preview.redd.it/h80F32wLeIiQkVgXgxdypINvjjxlLoDQN8DOnasMvSU.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=043f7bfd41daaf0d631c8121e5859d13421f5934\" alt=\"Feedback on a newbie project\" title=\"Feedback on a newbie project\" /> </a> </td><td> <!-- SC_OFF --><div class=\"md\"><p>Hey there,</p> <p>Been trying out Go by making a small tool to converting csv files. Quite niched, but useful for me.</p> <p>There’s probably more complexity than needed, but I wanted to get a bit more learning done. </p> <p>Would love some feedback on overall structure and how it could be refactored to better suite Go standards.</p> <p>Thanks in advance!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Every_Pudding_4466\"> /u/Every_Pudding_4466 </a> <br/> <span><a href=\"https://github.com/HampB/csv2excel\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hr1fgl/feedback_on_a_newbie_project/\">[comments]</a></span> </td></tr></table>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Vgo - A simple project scaffolding tool for go",
      "url": "https://www.reddit.com/r/golang/comments/1hqx8ay/vgo_a_simple_project_scaffolding_tool_for_go/",
      "date": 1735712460,
      "author": "/u/Extra-Weekend-9561",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p><strong>Hello everyone,</strong> </p> <p>I&#39;m Vijay Ganesh, an engineering undergrad from India and a newcomer to the Go community. This is my first post on Reddit, where I want to share my experience with my first open-source contribution, <a href=\"https://github.com/vg006/vgo\">Vgo</a>. It&#39;s a simple project scaffolding tool with a variety of options to kickstart a Go backend project. </p> <p><strong>Who am I? Why did I choose Go?</strong></p> <p>I’m a frontend developer with a strong understanding of frontend technologies and frameworks like React.js, Svelte, and Solid.js (still learning). Yes, I recently transitioned from the JavaScript ecosystem. </p> <p>While JavaScript offers numerous ways to build amazing things, I realized that not everything can—or should—be done with it. As developers, we often say, &quot;Use the right tool for the task.&quot; This curiosity drove me to explore backend development, and I started learning Go last month. </p> <p>After grasping the basics and core concepts of Go, I researched backend development practices and encountered challenges with Go project structuring. </p> <p><strong>Why I developed this?</strong></p> <p>I developed this tool primarily to enhance my Go programming skills and showcase my progress through a practical project. In mid-December 2024, I discovered a tool called <a href=\"https://github.com/Melkeydev/go-blueprint/tree/main\">go-blueprint</a> by an amazing developer <a href=\"https://github.com/Melkeydev\">Melkeydev</a>, which inspired me immensely. Go-blueprint is a great tool for scaffolding Go projects, especially for developers like me transitioning from the JavaScript ecosystem. </p> <p>Tools like npm, Vite, and others have made it effortless to scaffold frontend projects, and I wanted a similar experience for Go projects. So, I decided to build my own CLI tool with a project structure I feel comfortable with, along with a few additional features. </p> <p><strong>Conclusion</strong></p> <p>I know the template my tool uses for scaffolding projects is not perfect. However, my goal is to attract the attention of the community and seek guidance to improve it further. </p> <p>This is just the beginning of my journey into open-source, and I’d love to hear your valuable insights, suggestions, and contributions to make this project better. </p> <p>Thank you all for taking the time to read this, and I eagerly await your responses!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Extra-Weekend-9561\"> /u/Extra-Weekend-9561 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hqx8ay/vgo_a_simple_project_scaffolding_tool_for_go/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hqx8ay/vgo_a_simple_project_scaffolding_tool_for_go/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "How to make 3d games in go",
      "url": "https://www.reddit.com/r/golang/comments/1hqwz6w/how_to_make_3d_games_in_go/",
      "date": 1735711357,
      "author": "/u/PerformanceBulky9245",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>which is not a pain and hassle free</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/PerformanceBulky9245\"> /u/PerformanceBulky9245 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hqwz6w/how_to_make_3d_games_in_go/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hqwz6w/how_to_make_3d_games_in_go/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "My backend template with authentication for golang using gin and sqlite3",
      "url": "https://www.reddit.com/r/golang/comments/1hqqcga/my_backend_template_with_authentication_for/",
      "date": 1735686503,
      "author": "/u/FailNo7141",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p><a href=\"https://github.com/wisamidris77/template-backend\">https://github.com/wisamidris77/template-backend</a></p> <p>Just my first app I made in golang using gin and sqlite3 and with authentication jwt</p> <p>This is a simple app I started to be a template for authentication, database and api management easier</p> <p>And I&#39;m beginner at golang so if there anything wrong I made just tell me and thanks :)</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/FailNo7141\"> /u/FailNo7141 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hqqcga/my_backend_template_with_authentication_for/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hqqcga/my_backend_template_with_authentication_for/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Happy New Year fellow Gophers!",
      "url": "https://www.reddit.com/r/golang/comments/1hqm9pw/happy_new_year_fellow_gophers/",
      "date": 1735673862,
      "author": "/u/der_gopher",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Just wanted to say Happy New Year to my most loved one tech community out there!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/der_gopher\"> /u/der_gopher </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hqm9pw/happy_new_year_fellow_gophers/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hqm9pw/happy_new_year_fellow_gophers/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Ravel: An open-source containers-as-microVMs orchestrator.",
      "url": "https://www.reddit.com/r/golang/comments/1hqj9vi/ravel_an_opensource_containersasmicrovms/",
      "date": 1735665372,
      "author": "/u/SoftwareCitadel",
      "unread": true,
      "content": "<table> <tr><td> <a href=\"https://www.reddit.com/r/golang/comments/1hqj9vi/ravel_an_opensource_containersasmicrovms/\"> <img src=\"https://external-preview.redd.it/HFs-gJ8o3fA0dI_dYrWS-SZAfgLqDgNeNtu679pf3iI.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=40111717bdd44c0318c3be229338f937746092ff\" alt=\"Ravel: An open-source containers-as-microVMs orchestrator.\" title=\"Ravel: An open-source containers-as-microVMs orchestrator.\" /> </a> </td><td> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/SoftwareCitadel\"> /u/SoftwareCitadel </a> <br/> <span><a href=\"https://github.com/valyentdev/ravel\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hqj9vi/ravel_an_opensource_containersasmicrovms/\">[comments]</a></span> </td></tr></table>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Resources for Network Programming and Creating Binary Protocols?",
      "url": "https://www.reddit.com/r/golang/comments/1hqeni8/resources_for_network_programming_and_creating/",
      "date": 1735651591,
      "author": "/u/hastyyyy",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Hi all,</p> <p>I&#39;m looking for resources about techniques and best practices when trying to roll our own binary protocol. Specifically, I&#39;m trying to create my own binary protocol over TCP.</p> <p>This is just a fun project in order to challenge myself. All nodes are symmetrical in the sense that each one is both a server and a client. I&#39;m struggling with things like keeping only one socket on each side for bi-directional communication, e.g.:<br/> - node1 connects to node2 and establishes a connection (which is bi-directional);<br/> - now I&#39;d like to know how node2 can use the info in `net.Conn` so it doesn&#39;t open a new tcp connection to node1 as a client and uses the existing connection instead to also push packets.</p> <p>Made a simple example to illustrate what I mean:</p> <pre><code>package main import ( &quot;bufio&quot; &quot;fmt&quot; &quot;math/rand&quot; &quot;net&quot; &quot;os&quot; &quot;sync&quot; &quot;time&quot; ) type ConnectionManager struct { mu sync.Mutex connections map[net.Conn]struct{} } // Checks if a connection to the given address already exists func (cm *ConnectionManager) Exists(address string) bool { cm.mu.Lock() defer cm.mu.Unlock() for conn := range cm.connections { if conn.RemoteAddr().String() == address { return true } } return false } func (cm *ConnectionManager) Add(address string, conn net.Conn) { cm.mu.Lock() defer cm.mu.Unlock() cm.connections[conn] = struct{}{} } func (cm *ConnectionManager) Remove(address string) { cm.mu.Lock() defer cm.mu.Unlock() for conn := range cm.connections { if conn.RemoteAddr().String() == address { delete(cm.connections, conn) return } } } func (cm *ConnectionManager) Print() { cm.mu.Lock() defer cm.mu.Unlock() fmt.Println(&quot;Active connections:&quot;) for conn := range cm.connections { fmt.Println(&quot; -&quot;, conn.RemoteAddr().String()) } } func main() { if len(os.Args) != 3 { fmt.Println(&quot;Usage: go run server.go &lt;listen_port&gt; &lt;connect_port&gt;&quot;) return } listenPort := os.Args[1] connectPort := os.Args[2] connectionManager := &amp;ConnectionManager{ connections: make(map[net.Conn]struct{}), } // Start the server in a separate goroutine go startServer(listenPort, connectionManager) // Wait a random time between 10 and 20 seconds delay := time.Duration(rand.Intn(10)+10) * time.Second fmt.Printf(&quot;Waiting %v before attempting to connect...\\n&quot;, delay) time.Sleep(delay) // Attempt to connect to another server host := fmt.Sprintf(&quot;127.0.0.1:%s&quot;, connectPort) // Prevent duplicate connections if connectionManager.Exists(host) { fmt.Println(&quot;Already connected to&quot;, host) return } fmt.Println(&quot;Attempting to connect to&quot;, host) conn, err := net.Dial(&quot;tcp&quot;, host) if err != nil { fmt.Println(&quot;Connection failed:&quot;, err) return } fmt.Println(&quot;Connected to&quot;, host) connectionManager.Add(host, conn) // Start a goroutine to send &quot;Hello&quot; every 3 seconds go func(c net.Conn) { for { _, err := fmt.Fprintln(c, &quot;Hello&quot;) if err != nil { fmt.Println(&quot;Error sending message:&quot;, err) connectionManager.Remove(c.RemoteAddr().String()) return } time.Sleep(3 * time.Second) } }(conn) // Print the active connections every 5 seconds for { connectionManager.Print() time.Sleep(5 * time.Second) } } func startServer(port string, cm *ConnectionManager) { listener, err := net.Listen(&quot;tcp&quot;, fmt.Sprintf(&quot;127.0.0.1:%s&quot;, port)) if err != nil { fmt.Println(&quot;Error starting server:&quot;, err) return } defer listener.Close() fmt.Println(&quot;Server listening on port&quot;, port) for { conn, err := listener.Accept() if err != nil { fmt.Println(&quot;Error accepting connection:&quot;, err) continue } fmt.Println(&quot;Accepted connection from&quot;, conn.RemoteAddr()) cm.Add(conn.RemoteAddr().String(), conn) // Handle the connection in a new goroutine go handleConnection(conn, cm) } } func handleConnection(conn net.Conn, cm *ConnectionManager) { defer func() { fmt.Println(&quot;Closing connection from&quot;, conn.RemoteAddr()) cm.Remove(conn.RemoteAddr().String()) conn.Close() }() scanner := bufio.NewScanner(conn) for scanner.Scan() { fmt.Printf(&quot;Received from %s: %s\\n&quot;, conn.RemoteAddr(), scanner.Text()) } if err := scanner.Err(); err != nil { fmt.Println(&quot;Connection error:&quot;, err) } } </code></pre> <p>Output</p> <pre><code>Server1 Waiting 16s before attempting to connect... Server listening on port 8080 Attempting to connect to Connected to Active connections: - Active connections: - Accepted connection from Received from 127.0.0.1:64997: Hello Received from 127.0.0.1:64997: Hello Active connections: - - Received from 127.0.0.1:64997: Hello Received from 127.0.0.1:64997: Hello Active connections: - - Received from 127.0.0.1:64997: Hello Active connections: - - Received from 127.0.0.1:64997: Hello Received from 127.0.0.1:64997: Hello Active connections: - - Received from 127.0.0.1:64997: Hello ^Csignal: interrupt Server2 Waiting 15s before attempting to connect... Server listening on port 9090 Accepted connection from Received from 127.0.0.1:64996: Hello Received from 127.0.0.1:64996: Hello Attempting to connect to Connected to Active connections: - - Received from 127.0.0.1:64996: Hello Received from 127.0.0.1:64996: Hello Active connections: - - Received from 127.0.0.1:64996: Hello Received from 127.0.0.1:64996: Hello Active connections: - - Received from 127.0.0.1:64996: Hello Active connections: - - Received from 127.0.0.1:64996: Hello Received from 127.0.0.1:64996: Hello Active connections: - - Received from 127.0.0.1:64996: Hello Closing connection from Active connections: - ^Csignal: interrupt </code></pre> <p>I&#39;d expect/like to have a way that each servers reports only one active connection, each being the other end of the same bi-directional tcp connection.</p> <p>Thinking of going through some gossip protocol and overlay network examples to see if there&#39;s anything useful there.</p> <p>Anyway, that&#39;s pretty much it. Happy new year!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/hastyyyy\"> /u/hastyyyy </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hqeni8/resources_for_network_programming_and_creating/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hqeni8/resources_for_network_programming_and_creating/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "A lightweight server for adding full content to RSS/Atom/JSON feeds",
      "url": "https://www.reddit.com/r/golang/comments/1hqdrk4/a_lightweight_server_for_adding_full_content_to/",
      "date": 1735648269,
      "author": "/u/Traut",
      "unread": true,
      "content": "<table> <tr><td> <a href=\"https://www.reddit.com/r/golang/comments/1hqdrk4/a_lightweight_server_for_adding_full_content_to/\"> <img src=\"https://external-preview.redd.it/e6gY57VUlPmLaRsagQtHm0kjCHIdSE9bh5f5Wdem-iE.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=33de335b6da93163d5787cf1cd928c56e38671d9\" alt=\"A lightweight server for adding full content to RSS/Atom/JSON feeds\" title=\"A lightweight server for adding full content to RSS/Atom/JSON feeds\" /> </a> </td><td> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Traut\"> /u/Traut </a> <br/> <span><a href=\"https://github.com/traut/go-morss\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hqdrk4/a_lightweight_server_for_adding_full_content_to/\">[comments]</a></span> </td></tr></table>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "script: Making it easy to write shell-like scripts in Go",
      "url": "https://www.reddit.com/r/golang/comments/1hqbumy/script_making_it_easy_to_write_shelllike_scripts/",
      "date": 1735640049,
      "author": "/u/AlexandraLinnea",
      "unread": true,
      "content": "<table> <tr><td> <a href=\"https://www.reddit.com/r/golang/comments/1hqbumy/script_making_it_easy_to_write_shelllike_scripts/\"> <img src=\"https://external-preview.redd.it/TawLkWXmQneEfUWopoWbtLppErRHSOWgoLi6tlmnlTw.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=12fb01fb9179f20eb8f059315f612f2c758ee68b\" alt=\"script: Making it easy to write shell-like scripts in Go\" title=\"script: Making it easy to write shell-like scripts in Go\" /> </a> </td><td> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/AlexandraLinnea\"> /u/AlexandraLinnea </a> <br/> <span><a href=\"https://github.com/bitfield/script\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hqbumy/script_making_it_easy_to_write_shelllike_scripts/\">[comments]</a></span> </td></tr></table>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Is there any way to write files to an embedded file system in Go?",
      "url": "https://www.reddit.com/r/golang/comments/1hq4vs1/is_there_any_way_to_write_files_to_an_embedded/",
      "date": 1735613337,
      "author": "",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>I&#39;m trying to build a web server in Go that accepts images from the user. I&#39;m currently using the embed package to store all static files, including images, in an embedded file system. As a result, whenever I upload an image to the server&#39;s static directory, it doesn&#39;t show up, but whenever I restart the server, the new image shows up. I tried looking at the docs and it doesn&#39;t seem like there&#39;s any way to write a file to the embedded file system using the embed package, I just didn&#39;t know if there was any other way using any of the other standard library&#39;s packages.</p> </div><!-- SC_ON --> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hq4vs1/is_there_any_way_to_write_files_to_an_embedded/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hq4vs1/is_there_any_way_to_write_files_to_an_embedded/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Easy Auto-Reload with Server-Sent Events in Go",
      "url": "https://www.reddit.com/r/golang/comments/1hq0okx/easy_autoreload_with_serversent_events_in_go/",
      "date": 1735601139,
      "author": "/u/notfunnyxd",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Hey all,</p> <p>I decided to share how I implement auto-reloading for web pages using Server-Sent Events in Go as my first article. English is not my native language so I&#39;m sorry for any mistakes. Feedback is appreciated.</p> <p><a href=\"https://ffss.dev/articles/reloading-pages-sse\">Article</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/notfunnyxd\"> /u/notfunnyxd </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hq0okx/easy_autoreload_with_serversent_events_in_go/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hq0okx/easy_autoreload_with_serversent_events_in_go/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Smaller Interfaces for dependency injection",
      "url": "https://www.reddit.com/r/golang/comments/1hpzwvu/smaller_interfaces_for_dependency_injection/",
      "date": 1735599101,
      "author": "/u/wampey",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Was just thinking that I may be doing something a bit wrong when it comes to dependency injections, interfaces, and unit testing. Was hoping to verify.</p> <p>Say I have an interface with 20 defined methods on it, I have a different function that needs to use 2 methods of that interface along with some attributes of the underlying struct. should I build a new interface just for that function for the very specific use of those two methods? It seems doing so could make testing easier than mocking a 20 method function. Am I missing something?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/wampey\"> /u/wampey </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hpzwvu/smaller_interfaces_for_dependency_injection/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hpzwvu/smaller_interfaces_for_dependency_injection/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Why CGO is Dangerous",
      "url": "https://www.reddit.com/r/golang/comments/1hpyk6g/why_cgo_is_dangerous/",
      "date": 1735595549,
      "author": "/u/Ambitious_Nobody2467",
      "unread": true,
      "content": "<table> <tr><td> <a href=\"https://www.reddit.com/r/golang/comments/1hpyk6g/why_cgo_is_dangerous/\"> <img src=\"https://external-preview.redd.it/CTUvYf8K19NaRJspvHoe_INq9JEWcPLpRhEoMdmToas.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=97ec715d7548c86aa6cdfa594194f480e649211b\" alt=\"Why CGO is Dangerous\" title=\"Why CGO is Dangerous\" /> </a> </td><td> <!-- SC_OFF --><div class=\"md\"><p>Feel free to discuss!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Ambitious_Nobody2467\"> /u/Ambitious_Nobody2467 </a> <br/> <span><a href=\"https://youtu.be/8mU7KIF6l-k?si=xEfcV7U6gTRJYJXy\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hpyk6g/why_cgo_is_dangerous/\">[comments]</a></span> </td></tr></table>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Building a Scalable Bidding System in Go - Looking for Contributors!",
      "url": "https://www.reddit.com/r/golang/comments/1hptmta/building_a_scalable_bidding_system_in_go_looking/",
      "date": 1735582863,
      "author": "/u/saigenix",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Hi everyone!</p> <p>I’m a beginner in Go and currently learning by building a scalable bidding system as a personal project. The idea is to create a platform where users can place bids on items in real time, with features like auction management, bid validation, and notifications. I also want to explore scalability by integrating tools like Redis, PostgreSQL, and WebSockets.</p> <p>While I’m learning as I go, I believe collaboration can make this journey even more exciting and educational. If you’re:</p> <p>Interested in backend development with Go</p> <p>Passionate about learning and contributing to a real-world project</p> <p>Curious about systems design, concurrency, or cloud-native apps</p> <p>…I’d love for you to join me!</p> <p>This project is perfect for fellow beginners or intermediate devs looking to gain experience in Go, scalable architectures, or collaborative coding.</p> <p>If you’re interested, reply here or DM me. Let’s connect, brainstorm, and build something awesome together!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/saigenix\"> /u/saigenix </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hptmta/building_a_scalable_bidding_system_in_go_looking/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hptmta/building_a_scalable_bidding_system_in_go_looking/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "🚀 Introducing DiffDeck: A Go-powered Tool for Streamlined Code Reviews and Analysis",
      "url": "https://www.reddit.com/r/golang/comments/1hpr4rg/introducing_diffdeck_a_gopowered_tool_for/",
      "date": 1735576472,
      "author": "/u/KledMainSG",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Hey Gophers! 👋</p> <p>I wanted to share DiffDeck, a Go-based tool I&#39;ve been working on that makes handling code diffs and reviews significantly more efficient. A tool to make working with code differences much easier. Whether you’re reviewing pull requests, comparing branches, or even auditing a repository, DiffDeck has you covered.</p> <p>Here’s how it works: you can compare branches, commits, or even specific files and generate detailed outputs in Markdown, XML, or plain text. It’s super customizable—you can include or exclude specific files, add instructions, and even run security checks for sensitive data or vulnerabilities. DiffDeck also packs in features like directory structures, file summaries, and line-numbered diffs, all tailored to fit your workflow.</p> <p>This started as a way to simplify code reviews, but it’s become something that can help with automation, collaboration, and keeping your codebase secure. If you’re tired of juggling multiple tools for these tasks, give DiffDeck a try!</p> <p>You can check it out here: <a href=\"https://github.com/KnockOutEZ/diffdeck\">https://github.com/KnockOutEZ/diffdeck</a>. If it helps you, a star on GitHub would mean a lot. 🌟 Thanks for taking a look, and happy coding! 🚀</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/KledMainSG\"> /u/KledMainSG </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hpr4rg/introducing_diffdeck_a_gopowered_tool_for/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hpr4rg/introducing_diffdeck_a_gopowered_tool_for/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Just an(other) async task library",
      "url": "https://www.reddit.com/r/golang/comments/1hpq5fq/just_another_async_task_library/",
      "date": 1735573938,
      "author": "/u/svaloumas",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>iocast is a zero-dependency Go library designed to provide a simple API for running async tasks right in your code. It is intentionally kept minimal to ensure ease of use and integration.</p> <p>I&#39;ve only started working on it a couple of days ago as an Xmas holiday project, so please don&#39;t consider it bulletproof yet :) Any suggestions or feedback is more than welcome.</p> <p>Currently, it supports:</p> <ul> <li>Using custom structs as arguments in your tasks, leveraging generics.</li> <li>Selecting your preferred return types for your task results.</li> <li>Task context awareness.</li> <li>Retry attempts for each task.</li> <li>Running tasks as a pipeline.</li> <li>A database interface for optionally storing task results.</li> <li>Scheduling tasks to run at specific times.</li> </ul> <p>The database interface includes a single method, making it easy to integrate with the backend of your choice.</p> <p>This project was inspired by my earlier experience with <a href=\"https://github.com/svaloumas/valet\">valet</a>, which is quite similar in terms of semantics, but it aims to offer a lighter and more integrated solution.</p> <p>Thank you in advance for checking it out.</p> <p>GitHub: <a href=\"https://github.com/svaloumas/iocast\">iocast</a></p> <p>Examples: <a href=\"https://github.com/svaloumas/iocast/tree/main/_example\">Usage Examples</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/svaloumas\"> /u/svaloumas </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hpq5fq/just_another_async_task_library/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hpq5fq/just_another_async_task_library/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "what go frame recommended in IOT cloud platform",
      "url": "https://www.reddit.com/r/golang/comments/1hpox4g/what_go_frame_recommended_in_iot_cloud_platform/",
      "date": 1735570565,
      "author": "/u/ApprehensiveDig8645",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>i m a china student with little English, in china it has little resource about golang now i m going to develop a platform for my graduation project which could let hardwares data trans to the software platform. what go frame is easy to do this such thing? i m hoping find a frame like javas springboot </p> <p>i ve learned about java and c , know mybatis springboot and vue . so what s can i use? thank u of all</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ApprehensiveDig8645\"> /u/ApprehensiveDig8645 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hpox4g/what_go_frame_recommended_in_iot_cloud_platform/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hpox4g/what_go_frame_recommended_in_iot_cloud_platform/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "What are some good open source Golang websites?",
      "url": "https://www.reddit.com/r/golang/comments/1hpnpja/what_are_some_good_open_source_golang_websites/",
      "date": 1735566937,
      "author": "/u/GrandAd5084",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>I&#39;m a beginner in web development and first I did some web development with javascript as backend language but now I am switching to go for backend.</p> <p>I want to know some industry standards to follow while writing go code in web development.</p> <p>Can anyone suggest me some good open source Golang websites code, so I can understand how it is used in web development.</p> <p>Any help is appreciated🙌</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/GrandAd5084\"> /u/GrandAd5084 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hpnpja/what_are_some_good_open_source_golang_websites/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hpnpja/what_are_some_good_open_source_golang_websites/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "My implementation of Redis in Golang",
      "url": "https://www.reddit.com/r/golang/comments/1hpnp9p/my_implementation_of_redis_in_golang/",
      "date": 1735566914,
      "author": "/u/KingBig9811",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>I am made my own Redis server in Golang including my own RESP and RDB parser. It supports features like replication, persistence. I am still new to backend and Golang so i want feedback about anything that comes to your mind, be it code structuring or optimizations. <a href=\"https://github.com/vansh845\">https://github.com/vansh845</a></p> <p>Thank you.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/KingBig9811\"> /u/KingBig9811 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hpnp9p/my_implementation_of_redis_in_golang/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hpnp9p/my_implementation_of_redis_in_golang/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "What to expect from Go 1.24 - Part 1",
      "url": "https://www.reddit.com/r/golang/comments/1hpl65g/what_to_expect_from_go_124_part_1/",
      "date": 1735557619,
      "author": "/u/ByteVoyagerX",
      "unread": true,
      "content": "<table> <tr><td> <a href=\"https://www.reddit.com/r/golang/comments/1hpl65g/what_to_expect_from_go_124_part_1/\"> <img src=\"https://external-preview.redd.it/yrzVGKSr3TTZHEGj9EQwywT7t_WxsbNLK1NbqQBGqoY.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=940ad608ba263b9081c040d6f5b267f3d60b03de\" alt=\"What to expect from Go 1.24 - Part 1\" title=\"What to expect from Go 1.24 - Part 1\" /> </a> </td><td> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ByteVoyagerX\"> /u/ByteVoyagerX </a> <br/> <span><a href=\"https://golangnugget.com/p/what-to-expect-from-go-1-24-part-1\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hpl65g/what_to_expect_from_go_124_part_1/\">[comments]</a></span> </td></tr></table>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Lightweight blogging package?",
      "url": "https://www.reddit.com/r/golang/comments/1hpa218/lightweight_blogging_package/",
      "date": 1735517799,
      "author": "/u/bio_risk",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Has anyone written (or come across) a lightweight blogging platform written in Go? Desired features (descending priority order):</p> <ul> <li><p>renders markdown files</p></li> <li><p>provides simple navigation</p></li> <li><p>uses LetsEncrypt</p></li> </ul> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/bio_risk\"> /u/bio_risk </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hpa218/lightweight_blogging_package/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hpa218/lightweight_blogging_package/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "How I used sqlc to manage a persistent game world database for my MMO tutorial series",
      "url": "https://www.reddit.com/r/golang/comments/1hp553o/how_i_used_sqlc_to_manage_a_persistent_game_world/",
      "date": 1735504522,
      "author": "/u/Saltytaro_",
      "unread": true,
      "content": "<table> <tr><td> <a href=\"https://www.reddit.com/r/golang/comments/1hp553o/how_i_used_sqlc_to_manage_a_persistent_game_world/\"> <img src=\"https://external-preview.redd.it/Q8ilY9i8bG4uowqfFVk5WqQ8UlR62dYS1tLc-k5gU6M.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=72e45b590f58007ecd5fb022ca913606345eb3e1\" alt=\"How I used sqlc to manage a persistent game world database for my MMO tutorial series\" title=\"How I used sqlc to manage a persistent game world database for my MMO tutorial series\" /> </a> </td><td> <!-- SC_OFF --><div class=\"md\"><p>This is part #5 of my tutorial series showing how to make an MMO from scratch using Go and the Godot game engine. This one is particularly interesting because it goes through how to set up a database using sqlc and handwritten queries. This lesson, along with all the others, also comes in a written format on my website: <a href=\"https://www.tbat.me/projects/godot-golang-mmo-tutorial-series\">https://www.tbat.me/projects/godot-golang-mmo-tutorial-series</a></p> <p>Hope this is interesting or useful to some people!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Saltytaro_\"> /u/Saltytaro_ </a> <br/> <span><a href=\"https://youtu.be/M__viodzggc?si=vVqgZoYakqBYGQZQ\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hp553o/how_i_used_sqlc_to_manage_a_persistent_game_world/\">[comments]</a></span> </td></tr></table>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Building git in golang",
      "url": "https://www.reddit.com/r/golang/comments/1hp11ua/building_git_in_golang/",
      "date": 1735493717,
      "author": "/u/Zealousideal_Law7447",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>I am currently a PHP developer trying to take my first steps into Golang. After spening a couple of days solving some easy problems to get used to the go syntax I felt that I needed to build some sort of project to dig deeper into the language and to face the problems that algorithtm related coding exercises were not providing me.</p> <p>Something that I always wanted to do is to build my own version of git (yep, I am aware that this is quite a common project and that there is lots of implementations on the internet that I could check), in a couple of hours I was able to assemble a quite basic version of the project, some of the basic data structures, branches, checkout... Initially I was trying to mimic the architecture that I use in my php projects (something in the lines of src/service, src/entity) so basically I creted a service package and an entity package to start, but giving it a second look I was quite unhappy about my architecture, as every time that i needed an entity i would need to import the whole entity package, which did not feel nice.</p> <p>I dediced to stop coding an to take some time to research what are the architectural standards for git projects and how devs structure their code. I am well aware after my read that there is no standard in golang, but again, the aim of my project is to get a good grasp of how things should work when building a more complex project.</p> <p>My next attempt was to follow the coding standards recommended at <a href=\"https://github.com/golang-standards\">https://github.com/golang-standards</a> -- so i went from trying to do something like this:</p> <p>.<br/> .<br/> └── gogit/<br/> ├── bin<br/> ├── cmd<br/> ├── internal/<br/> │ ├── entity/<br/> │ │ ├── BranchEntity<br/> │ │ ├── CommitEntity<br/> │ │ └── RepositoryEntity<br/> │ └── factory/<br/> │ ├── BranchFactory<br/> │ ├── RepositoryFactory<br/> │ └── CommitFactory<br/> └── tests/<br/> └── whatever_my_tests_are</p> <p>to something in the lines of this:</p> <p>.<br/> └── gogit/<br/> ├── bin<br/> ├── cmd<br/> ├── internal/<br/> │ ├── branch/<br/> │ │ ├── BranchEntity<br/> │ │ └── BranchFactory<br/> │ ├── commit/<br/> │ │ ├── CommitEntity<br/> │ │ └── CommitFactory<br/> │ └── repository/<br/> │ ├── RepositoryEntity<br/> │ └── RepositoryFactory<br/> └── tests/<br/> └── whatever_my_tests_are</p> <p>I think I am kind of missing out on something in the golang paradigm, not sure whether i should be creating factories anymore as this not OOP nor whether i should have separate classes for my &quot;entities&quot; trying to emulate what would happen in OOP in PHP. On top of that, this architecture has some cyclic dependency problems as, for instance, the CommitFactory in the commit package needs to have access to the branch package, while the branchService neeeds to have access to the commit entity to add a commit to the branch. What is my architectural problem?</p> <p>I would appreciate some guidance in this new adventure from some fellow golang devs :)</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Zealousideal_Law7447\"> /u/Zealousideal_Law7447 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hp11ua/building_git_in_golang/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hp11ua/building_git_in_golang/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Struggling on understanding error type in golang",
      "url": "https://www.reddit.com/r/golang/comments/1hox5p0/struggling_on_understanding_error_type_in_golang/",
      "date": 1735482757,
      "author": "/u/Retsu_Alp",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Hi;</p> <p>I was learning go from tour of go in website and I am currently having trouble on understanding on returning error. <a href=\"https://go.dev/tour/methods/20\">https://go.dev/tour/methods/20</a></p> <p>```go package main</p> <p>import ( &quot;fmt&quot; )</p> <p>type ErrNegativeSqrt float64</p> <p>func (e ErrNegativeSqrt) Error() string { return fmt.Sprintf(&quot;cannot Sqrt negative number: %v&quot;, float64(e)) }</p> <p>func Sqrt(x float64) (float64, error) { if x &lt; 0 { return 0, ErrNegativeSqrt(x) } z := 1.0 for i := 0; i &lt; 10; i++ { z -= (z*z - x) / (2 * z) }</p> <pre><code>return z, nil </code></pre> <p>}</p> <p>func main() { fmt.Println(Sqrt(2)) fmt.Println(Sqrt(-2)) }</p> <p>```</p> <p>My question is how does ErrNegativeSqrt(x) returns an error. I tried to get help from chatGPT but it is still unclear for me. Thanks in advance.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Retsu_Alp\"> /u/Retsu_Alp </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hox5p0/struggling_on_understanding_error_type_in_golang/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hox5p0/struggling_on_understanding_error_type_in_golang/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Local log aggregation - all within your terminal",
      "url": "https://www.reddit.com/r/golang/comments/1hox3ag/local_log_aggregation_all_within_your_terminal/",
      "date": 1735482545,
      "author": "/u/karnerth",
      "unread": true,
      "content": "<table> <tr><td> <a href=\"https://www.reddit.com/r/golang/comments/1hox3ag/local_log_aggregation_all_within_your_terminal/\"> <img src=\"https://external-preview.redd.it/i4AyAdhryvDP7XjQ6u-druCEbArXQ4EYKG1Ib4UBVgY.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=733a666e209afc93f95d244a65d443a185cdebff\" alt=\"Local log aggregation - all within your terminal\" title=\"Local log aggregation - all within your terminal\" /> </a> </td><td> <!-- SC_OFF --><div class=\"md\"><p>Created a cli application with go to enhance the way you work with local logs. This first version supports a variety of formats/parsers and simple filtering - appreciate any feedback!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/karnerth\"> /u/karnerth </a> <br/> <span><a href=\"https://github.com/KarnerTh/xogs\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hox3ag/local_log_aggregation_all_within_your_terminal/\">[comments]</a></span> </td></tr></table>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Go room schedule - Feb 1st and 2nd, Brussels, FOSDEM (free Open Source conference)",
      "url": "https://www.reddit.com/r/golang/comments/1hovgpt/go_room_schedule_feb_1st_and_2nd_brussels_fosdem/",
      "date": 1735476917,
      "author": "/u/1Gijs",
      "unread": true,
      "content": "<table> <tr><td> <a href=\"https://www.reddit.com/r/golang/comments/1hovgpt/go_room_schedule_feb_1st_and_2nd_brussels_fosdem/\"> <img src=\"https://external-preview.redd.it/P3lyfhnClpqOXoYr5hnW1nzsKvn-H05FYkcfYIDxqrU.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e20724b837a14c3dc4539c2b1e94263a68911e9d\" alt=\"Go room schedule - Feb 1st and 2nd, Brussels, FOSDEM (free Open Source conference)\" title=\"Go room schedule - Feb 1st and 2nd, Brussels, FOSDEM (free Open Source conference)\" /> </a> </td><td> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/1Gijs\"> /u/1Gijs </a> <br/> <span><a href=\"https://fosdem.org/2025/schedule/track/go/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hovgpt/go_room_schedule_feb_1st_and_2nd_brussels_fosdem/\">[comments]</a></span> </td></tr></table>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Simple web chat app built using React and Go",
      "url": "https://www.reddit.com/r/golang/comments/1hotdez/simple_web_chat_app_built_using_react_and_go/",
      "date": 1735468211,
      "author": "/u/DixGee",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Hi I built a web chat app using go where people can chat anonymously. This is my 1st app in go. I would like to know your thoughts.</p> <p><a href=\"https://github.com/shaon72/golang-chat-app\">https://github.com/shaon72/golang-chat-app</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/DixGee\"> /u/DixGee </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hotdez/simple_web_chat_app_built_using_react_and_go/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hotdez/simple_web_chat_app_built_using_react_and_go/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Has anyone ever written Dynamic CORS using Gin and Golang?",
      "url": "https://www.reddit.com/r/golang/comments/1hot16u/has_anyone_ever_written_dynamic_cors_using_gin/",
      "date": 1735466683,
      "author": "/u/vvarun203",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Share if you have a design, code, documents anything which can give me any lead.</p> <p>I have written one but I want to enhance the performance and also patch more and more domains when required. </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/vvarun203\"> /u/vvarun203 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hot16u/has_anyone_ever_written_dynamic_cors_using_gin/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hot16u/has_anyone_ever_written_dynamic_cors_using_gin/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Learning CS with go rather than python, java, c, etc. Recommend?",
      "url": "https://www.reddit.com/r/golang/comments/1hosyew/learning_cs_with_go_rather_than_python_java_c_etc/",
      "date": 1735466358,
      "author": "/u/WynActTroph",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Really enjoy golang’s simplicity. It feels as if I get to use more of the concepts usually under the hood compared to most high level languages. </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/WynActTroph\"> /u/WynActTroph </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hosyew/learning_cs_with_go_rather_than_python_java_c_etc/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hosyew/learning_cs_with_go_rather_than_python_java_c_etc/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Simple system monitoring with Go and Svelte",
      "url": "https://www.reddit.com/r/golang/comments/1hor4g0/simple_system_monitoring_with_go_and_svelte/",
      "date": 1735458157,
      "author": "/u/mishokthearchitect",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Hi everyone!</p> <p>Wanted to share simple app that I created for my home server to monitor it CPU/RAM usage and uptime. I used Go for backed and SvelteKit for frontend</p> <p>It may be useful for you to take a look if you need an example of how to:</p> <ul> <li>Structure project with frontend and backend in the same repo</li> <li>Build such project</li> <li>Create Docker image</li> <li>Configure CI/CD with GitHub Actions</li> </ul> <p>Please take a look if you are interested: <a href=\"https://github.com/mishankov/simple-system-monitor\">https://github.com/mishankov/simple-system-monitor</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/mishokthearchitect\"> /u/mishokthearchitect </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hor4g0/simple_system_monitoring_with_go_and_svelte/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hor4g0/simple_system_monitoring_with_go_and_svelte/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Order of writing to an HTTP server response in \"net/http\"?",
      "url": "https://www.reddit.com/r/golang/comments/1honb3w/order_of_writing_to_an_http_server_response_in/",
      "date": 1735443877,
      "author": "/u/AgreeableServe965",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Hi all,</p> <p>Question about the order of operations when dealing with the standard Go <code>http</code> server. Everything I am doing is working thus far, so I don&#39;t have an exact problem, but I feel like I don&#39;t have a good mental model of how to handle HTTP responses (this is all from the server&#39;s perspective btw). I&#39;ve done a lot of googling and looking for Github examples/best practices but haven&#39;t found the specifics I&#39;m looking for.</p> <p>Some example questions I have:</p> <ul> <li>When and how do you write whatever headers you need to add to the <code>ResponseWriter</code>? I&#39;ve found for websocket upgrades, I need to set them and then call <code>WriteHeader</code>, which seems to actually send the response to the client immediately? For normal HTTP I set headers using <code>Header().Set()</code> and not <code>WriteHeader</code>, but I sort of accidentally came across this, as I don&#39;t have a good mental model</li> <li>Can any headers be added <em>after</em> you&#39;re written to the body of the response?</li> <li>What is the best way to write to the body itself? I&#39;m currently using <code>fmt.Fprintf</code>, as the <code>ResponseWriter.Write()</code> method does some stuff (like <em>&quot;If [ResponseWriter.WriteHeader] has not yet been called, Write calls WriteHeader(http.StatusOK) before writing the data.&quot;</em>) that I don&#39;t fully understand.</li> <li>Is the standard practice to create a new response object and return it, or just modify the <code>ResponseWriter</code>? (I modify it)</li> <li>Are there any gotchas I should know about? I know there&#39;s something about not being able to read from the request after you&#39;ve read once. Another is <code>Header().Set()</code> vs. <code>Header().Add()</code></li> <li>Is it good practice to set all your headers as soon as possible, then do your processing and write to the response body, then return?</li> </ul> <p>Summed up, I&#39;m trying to improve my mental model of the request lifetime, the proper order of writing parts of the response, and best practices.</p> <p>Thanks!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/AgreeableServe965\"> /u/AgreeableServe965 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1honb3w/order_of_writing_to_an_http_server_response_in/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1honb3w/order_of_writing_to_an_http_server_response_in/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "First Project with backend in Go. Would love feedback",
      "url": "https://www.reddit.com/r/golang/comments/1homj7o/first_project_with_backend_in_go_would_love/",
      "date": 1735441272,
      "author": "/u/Time_Departure_2393",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Hello all! Recently I took on a full stack personal project and decided to write the backend in go with no prior experience in the language. It is now fully complete and functional, however I feel as if I did not follow all the right symantics that come with golang. Would love feedback, no matter how brutal I am still new to programming and especially golang but loved it and want to improve!</p> <p>Github: <a href=\"https://github.com/aiden-lee11/NUFood\">https://github.com/aiden-lee11/NUFood</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Time_Departure_2393\"> /u/Time_Departure_2393 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1homj7o/first_project_with_backend_in_go_would_love/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1homj7o/first_project_with_backend_in_go_would_love/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "YT Shorts to Learn Go Programming Concepts Quickly!",
      "url": "https://www.reddit.com/r/golang/comments/1hoj798/yt_shorts_to_learn_go_programming_concepts_quickly/",
      "date": 1735430981,
      "author": "/u/mr_geek012",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Here’s a playlist of YouTube Shorts covering essential Go topics like GRPC, concurrency, custom middleware, input validation, encryption, decryption, and hashing. Each video is brief, straight to the point, and designed for quick learning.</p> <p>Check it out: <a href=\"https://www.youtube.com/watch?v=QAc_FEKFc7A&amp;list=PLdKU4cv6BbKIugkN9EstI69HPnr_jplHv\">https://www.youtube.com/watch?v=QAc_FEKFc7A&amp;list=PLdKU4cv6BbKIugkN9EstI69HPnr_jplHv</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/mr_geek012\"> /u/mr_geek012 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hoj798/yt_shorts_to_learn_go_programming_concepts_quickly/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hoj798/yt_shorts_to_learn_go_programming_concepts_quickly/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Wendy: A CLI built with climate",
      "url": "https://www.reddit.com/r/golang/comments/1hofbaa/wendy_a_cli_built_with_climate/",
      "date": 1735419961,
      "author": "/u/rahul_de",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Hey again fellow gophers,</p> <p>Following up from my last <a href=\"https://www.reddit.com/r/golang/comments/1he1uks\">post</a> on climate and tooling around OpenAPI specs, here is a proper example of a CLI built with that idea: <a href=\"https://github.com/bob-cd/wendy\">https://github.com/bob-cd/wendy</a></p> <p>The server side for this also is built on similar philosophies of being spec-first (not in Go though) and the CLI side is what gave the inspiration to build climate. I think I am able to capture the ideas I wanted to express in Wendy and would love to know what you all think!</p> <p>It&#39;s still a work in progress but is usable and has all the aspects of a CLI tooling that one would expect. Some of the methods I used doesn&#39;t seem to be used much elsewhere and hence hoping it also piques someone interest and they have some feedback!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/rahul_de\"> /u/rahul_de </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hofbaa/wendy_a_cli_built_with_climate/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hofbaa/wendy_a_cli_built_with_climate/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "First Golang App: Sourus a CLI Monitoring with Color Theme Support, incorporates CPU and GPU Information.",
      "url": "https://www.reddit.com/r/golang/comments/1hoben9/first_golang_app_sourus_a_cli_monitoring_with/",
      "date": 1735409341,
      "author": "/u/Capital-Menu517",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>I picked up Go in a few days and I wrote this CLI app. I feel in love with the language on how quickly you can build things and just incorporate dependencies. Let me know what y&#39;all think! </p> <p><a href=\"https://github.com/nikpocuca/sourus\">https://github.com/nikpocuca/sourus</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Capital-Menu517\"> /u/Capital-Menu517 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hoben9/first_golang_app_sourus_a_cli_monitoring_with/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hoben9/first_golang_app_sourus_a_cli_monitoring_with/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "What are some linters that you use and are not in golangci-lint (or in gerenal tools)?",
      "url": "https://www.reddit.com/r/golang/comments/1ho690z/what_are_some_linters_that_you_use_and_are_not_in/",
      "date": 1735394546,
      "author": "/u/10xNinjaProdigy",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>The question above. I am getting into linters but i have also found some uber tools and fieldalignment tools. SO I am looking for hidden diamonds or anything tbh</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/10xNinjaProdigy\"> /u/10xNinjaProdigy </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1ho690z/what_are_some_linters_that_you_use_and_are_not_in/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1ho690z/what_are_some_linters_that_you_use_and_are_not_in/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Crazy to use Go in a CRUD App?",
      "url": "https://www.reddit.com/r/golang/comments/1ho5zn1/crazy_to_use_go_in_a_crud_app/",
      "date": 1735393673,
      "author": "/u/fakebizholdings",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>I own a freight brokerage that specializes in automation by making our own automation software. The “OS” of a freight brokerage is a Transportation Management System, these share many of the same objects as a CRM and generally are bundled with one. I made our first TMS on top of Salesforce with APEX because I had to spin something up on the fly.</p> <p>As I prepare for the development of the second version of this TMS+CRM that we will be hosting on-prem, I’ve sampled many languages and open-source software. I’m very impressed by the speed and efficiency of just about everything that is written in Go, yet I haven’t found one CRM or any notable CRUD apps that are using it on the backend.</p> <p>Having never programmed in Go before, I have to ask, is it feasible to consider creating our TMS+CRM in Go with something as simple as HTMX &amp; “Vanilla” JS on the front end?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/fakebizholdings\"> /u/fakebizholdings </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1ho5zn1/crazy_to_use_go_in_a_crud_app/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1ho5zn1/crazy_to_use_go_in_a_crud_app/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Caching library designed to make applications resilient and highly performant",
      "url": "https://www.reddit.com/r/golang/comments/1ho5ntj/caching_library_designed_to_make_applications/",
      "date": 1735392513,
      "author": "/u/creativecreaturedev",
      "unread": true,
      "content": "<table> <tr><td> <a href=\"https://www.reddit.com/r/golang/comments/1ho5ntj/caching_library_designed_to_make_applications/\"> <img src=\"https://external-preview.redd.it/u5sECMxrAez6noPtvy27Or4lSOz5Vl62ExM07b2xMEY.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=880577e38ebcf73fab8b19339693e1664b88d72e\" alt=\"Caching library designed to make applications resilient and highly performant\" title=\"Caching library designed to make applications resilient and highly performant\" /> </a> </td><td> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/creativecreaturedev\"> /u/creativecreaturedev </a> <br/> <span><a href=\"https://github.com/viccon/sturdyc\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1ho5ntj/caching_library_designed_to_make_applications/\">[comments]</a></span> </td></tr></table>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Building a Database from Scratch in Go (part 02) - Memory Management Principles",
      "url": "https://www.reddit.com/r/golang/comments/1ho44am/building_a_database_from_scratch_in_go_part_02/",
      "date": 1735386438,
      "author": "/u/inelp",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Hello folks, I published part 2 of my Building a DB from scratch series and this video is a bit theoretical.</p> <p>I try to explain the main principles of database memory management and how they drive the design and the implementation of more-or-less the entire database engine, and the two principles I cover are:</p> <p>- Minimize Disk Access</p> <p>- Don&#39;t Rely on OS Virtual Memory</p> <p>In case you&#39;re interested in learning more about this, here is the link to the video: <a href=\"https://youtu.be/TYBwOLlMLnI\">https://youtu.be/TYBwOLlMLnI</a></p> <p>I will appreciate all the feedback. Thanks</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/inelp\"> /u/inelp </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1ho44am/building_a_database_from_scratch_in_go_part_02/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1ho44am/building_a_database_from_scratch_in_go_part_02/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Evil-Go: A PoC of a go compile chain with less IAT that bypass GoReSym",
      "url": "https://www.reddit.com/r/golang/comments/1hntmvw/evilgo_a_poc_of_a_go_compile_chain_with_less_iat/",
      "date": 1735346576,
      "author": "/u/h4r0r",
      "unread": true,
      "content": "<table> <tr><td> <a href=\"https://www.reddit.com/r/golang/comments/1hntmvw/evilgo_a_poc_of_a_go_compile_chain_with_less_iat/\"> <img src=\"https://external-preview.redd.it/IPsOXDoz4LZTmQyqBd6jSqJtxZFGrxeGrStkRI4fQgI.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=0ea650a4dd98a6879f5ed07ce334151bcb133a46\" alt=\"Evil-Go: A PoC of a go compile chain with less IAT that bypass GoReSym\" title=\"Evil-Go: A PoC of a go compile chain with less IAT that bypass GoReSym\" /> </a> </td><td> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/h4r0r\"> /u/h4r0r </a> <br/> <span><a href=\"https://github.com/almounah/evil-go/tree/release-branch.go1.23\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hntmvw/evilgo_a_poc_of_a_go_compile_chain_with_less_iat/\">[comments]</a></span> </td></tr></table>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "concur - A replacement for the parts of GNU Parallel that I like.",
      "url": "https://www.reddit.com/r/golang/comments/1hnrvpa/concur_a_replacement_for_the_parts_of_gnu/",
      "date": 1735341480,
      "author": "/u/EricWOsborne",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p><a href=\"https://github.com/ewosborne/concur\">https://github.com/ewosborne/concur</a></p> <p>I like what <code>parallel</code> can do. As a network guy, over the years I&#39;ve had to do things like copy a firmware update file to a tens or low hundreds of routers, or ping a bunch of hosts to see which ones were up, and <code>parallel</code> made those jobs really easy.</p> <p>You know what I don&#39;t like about <code>parallel</code>? It&#39;s got defaults that don&#39;t work for me (one job per core when I&#39;m blocking on network I/O is hugely inefficient). Its CLI is convoluted (yes, it&#39;s a hard problem to solve in general, but still). It&#39;s got a 120-page manual or a 20-minute training video to teach you how to use it. It&#39;s written in Perl. It has this weird thing where it can&#39;t do CSV right out of the box and you have to do manual CPAN stuff. Ain&#39;t nobody got time for any of that. </p> <p>And worst of all, it has that weird gold-digging &#39;I agree under penalty of death to cite parallel in any academic work&#39; clause. I understand that it&#39;s reasonable to ask for credit for writing free software, but if everyone did it the way <code>parallel</code> does then the whole open source industry would drown itself in a pool of compliance paperwork.</p> <p>Plus it&#39;s always cool to learn a new language by using it to solve a problem rather than grinding on leetcode.</p> <p>So I give you <code>concur</code>. I&#39;m never going to claim it&#39;s as fully featured as <code>parallel</code> but it does the bits I need, it&#39;s a few hundred lines of go, it has sensible defaults for things which aren&#39;t compute-bound, it has easy to read json output. It can flag jobs which exit with a return code other than zero. It can run all your jobs, or it can stop when the first one teminates. It&#39;s got an easy syntax for subbing in the thing you&#39;re iterating over (each entry in a list of hosts, for example).</p> <p>It does what I want and it does it well, all using <code>go&#39;s</code> built-in concurrency. Thus, <code>concur</code> (which as a verb is a <a href=\"https://www.thesaurus.com/browse/parallel\">synonym</a> for parallel).</p> <p>This project is very much under active development so the screen scrapes here may not match what&#39;s in the latest code but it&#39;ll be close.</p> <p>I also do not write code for a living so this started out clean and idiomatic and turned into a bit of a spaghetti mess. I&#39;ll clean it up eventually, once the feature set stabilizes. It has also almost no testing other than me running stuff by hand after every build. Testing is hard. </p> <p>Comments and PRs welcome.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/EricWOsborne\"> /u/EricWOsborne </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hnrvpa/concur_a_replacement_for_the_parts_of_gnu/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hnrvpa/concur_a_replacement_for_the_parts_of_gnu/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "I just released version 1.2.0 of my package \"aarol/reload\", which enables easy hot-reloading of web server assets",
      "url": "https://www.reddit.com/r/golang/comments/1hnpl3b/i_just_released_version_120_of_my_package/",
      "date": 1735335260,
      "author": "/u/despacit0_",
      "unread": true,
      "content": "<table> <tr><td> <a href=\"https://www.reddit.com/r/golang/comments/1hnpl3b/i_just_released_version_120_of_my_package/\"> <img src=\"https://external-preview.redd.it/cXib0KD6i7Q1IyOfQnLa4r5DTBRCLg7k2nziWzUsJCE.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=031900adf2bb1fb44191deef6c039f8ad8111012\" alt=\"I just released version 1.2.0 of my package &quot;aarol/reload&quot;, which enables easy hot-reloading of web server assets\" title=\"I just released version 1.2.0 of my package &quot;aarol/reload&quot;, which enables easy hot-reloading of web server assets\" /> </a> </td><td> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/despacit0_\"> /u/despacit0_ </a> <br/> <span><a href=\"https://github.com/aarol/reload/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hnpl3b/i_just_released_version_120_of_my_package/\">[comments]</a></span> </td></tr></table>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Is this a thing people do in Go?",
      "url": "https://www.reddit.com/r/golang/comments/1hniqb1/is_this_a_thing_people_do_in_go/",
      "date": 1735317236,
      "author": "/u/RedProGamingTV",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Edit 2 electric boogaloo: I&#39;ve mostly figured this out, thanks to the advice over at Discord Gophers! An explanation for why the &quot;import order correction&quot; code works and 2 general routes of how to write this code, as per suggestions on the Discord server and in the replies, are at the bottom of the post. However, despite this, feel free to add potential solutions if you have any ideas! </p> <p>Hello everyone!<br/> So, a little bit of context:</p> <p>I&#39;m writing a piece of software, which is using a websocket server. I have some packet handler code in the <code>handlers</code> package, and all of my packets are in the <code>packets</code> package. The packets initialize themselves using <code>init()</code> functions such that they&#39;re a little easier to manage. I&#39;ve written this code generally just to work, but is this good practice? I don&#39;t want for the packet filenames to blend in with non-packet filenames.</p> <p>Unfortunately, I&#39;m not allowed to post images, therefore I will paste the piece of code in a codeblock.</p> <pre><code>import ( // ... // Import order correction &quot;main/handlers&quot; _ &quot;main/packets&quot; // ^ This is needed such that handlers (and the registry) are loaded first, // and we do not get runtime issues because the registry doesn&#39;t exist yet. // It&#39;s best to keep handlers and packets separate for clearer project structure. // Bit of a hack, but it works. // ... ) </code></pre> <p>So, I guess my question is, is this a widely done practice (to correct import order when using <code>init()</code>functions), and are there any better ways of achieving this while keeping the directory structure intact (the packet registry goes into the <code>handlers</code> package, the packets go into the <code>packets</code> package)?</p> <p>––––––––––––––––––––</p> <p>Edit for clarification: The packets import themselves via calling the <code>Register</code> function on the <code>Registry</code> variable inside <code>handlers</code>. For example:</p> <pre><code>// packets/ping.go // ... func init() { handlers.Registry.Register(&quot;ping&quot;, &amp;HandlerPing{}) } // handlers/packets.go // ... var Registry = NewPacketRegistry() // handlers/registry.go // ... func (r *PacketRegistry) Register(packetType string, handler PacketHandler) { r.handlers[packetType] = handler fmt.Printf(`Packet %s has been registered!` + &quot;\\r\\n&quot;, packetType) } // ... </code></pre> <p>Because the registry needs to be made before the packets get initialized, the handlers package has to be made before the packets package, if I were to use this method.<br/> ––––––––––––––––––––</p> <h1>Explanation:</h1> <p>Fundamentally, the execution of <code>init()</code> functions does not depend on import order (apparently ever since around go 1.19 or 1.20, thanks zephyrtronium), meaning the import order does not have any effect on how it is initialized. The compiler topologically sorts initializers, meaning if a certain expression depends on another, the latter is initialized first. Therefore, the actual import order doesn&#39;t matter.</p> <p>What does matter, however, is that the package is imported. If the package is not imported, the <code>init()</code> function does NOT get called. More on this: <a href=\"https://go.dev/ref/spec#Program_initialization\">https://go.dev/ref/spec#Program_initialization</a></p> <h1>Route 1 (current code):</h1> <p>Keep the import as is, but the order of the import doesn&#39;t actually matter. The <code>_ &quot;main/packets&quot;</code> declaration only calls the <code>init()</code> function depending on how exactly does the code depend on the other code, and does not really do anything beyond that.<br/> However, as some of you have noted, generally the use of <code>init()</code> should be avoided.</p> <h1>Route 2 (register manually):</h1> <p>Instead of using <code>init()</code>, switch to registering all packets manually (calling the Register function for each packet inside one file). However, this can be a bit messy at times, if you have a lot of packets, but it&#39;s probably the most obvious alternative.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/RedProGamingTV\"> /u/RedProGamingTV </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hniqb1/is_this_a_thing_people_do_in_go/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hniqb1/is_this_a_thing_people_do_in_go/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Open source ERP written in Go",
      "url": "https://www.reddit.com/r/golang/comments/1hnf6nx/open_source_erp_written_in_go/",
      "date": 1735307137,
      "author": "/u/diyor28s",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Hi reddit, me &amp; my team at <a href=\"https://www.iota.uz/\">IOTA</a> are developing an Odoo alternative with Go, Alpine.js, Templ and HTMX. For now the project is called IOTA-SDK.<br/> It&#39;s completely open source and hosted on <a href=\"https://github.com/iota-agency/iota-sdk\">Github</a>. You&#39;re welcome to use it for your own purposes.<br/> The project is still in it&#39;s early stages and being actively developed.</p> <p>The end goal is to turn it into a full featured SDK where you can create and customize an ERP for your goals relatively easily. Also in the works is an integration of a general purpose scripting language like Javascript or Python to allow advanced users or community to write custom workflows and plugins</p> <p>[UPDATE]: Was not expecting so much interest from the community, thank you everyone a lot! Answering your questions as fast as possible &amp; actively working on contribution guidelines &amp; roadmap.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/diyor28s\"> /u/diyor28s </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hnf6nx/open_source_erp_written_in_go/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hnf6nx/open_source_erp_written_in_go/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "How to Implement Server-Sent Events in Go",
      "url": "https://www.reddit.com/r/golang/comments/1hnf3hq/how_to_implement_serversent_events_in_go/",
      "date": 1735306852,
      "author": "/u/der_gopher",
      "unread": true,
      "content": "<table> <tr><td> <a href=\"https://www.reddit.com/r/golang/comments/1hnf3hq/how_to_implement_serversent_events_in_go/\"> <img src=\"https://external-preview.redd.it/NbGnGVqcqkxRFPDqiyLPkVPmG1Zn2q5m5cTGNKhvwVM.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=44ed4a9b3b283a0e6968dc060bc12fc91f1e5965\" alt=\"How to Implement Server-Sent Events in Go\" title=\"How to Implement Server-Sent Events in Go\" /> </a> </td><td> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/der_gopher\"> /u/der_gopher </a> <br/> <span><a href=\"https://www.youtube.com/watch?v=nvijc5J-JAQ\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hnf3hq/how_to_implement_serversent_events_in_go/\">[comments]</a></span> </td></tr></table>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "native WebP encoder for Go",
      "url": "https://www.reddit.com/r/golang/comments/1hnc57a/native_webp_encoder_for_go/",
      "date": 1735295372,
      "author": "/u/Pretend-Ad1926",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Hey everyone! 👋</p> <p>I just released nativewebp, a native WebP encoder written entirely in Go. Unlike most WebP encoders, this one has no dependencies on libwebp or other external libraries, making it perfect for Go projects that value simplicity and portability.</p> <p>Currently, the encoder supports only WebP lossless images (VP8L). It’s about ~40% faster than Go&#39;s native PNG encoder, while producing similar or smaller files!</p> <p>It’s still in early development, so feedback, ideas, or contributions are more than welcome! 🚀</p> <p>Check it out here: <a href=\"https://github.com/HugoSmits86/nativewebp\">https://github.com/HugoSmits86/nativewebp</a></p> <p>Looking forward to hearing what you think!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Pretend-Ad1926\"> /u/Pretend-Ad1926 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hnc57a/native_webp_encoder_for_go/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hnc57a/native_webp_encoder_for_go/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Naked returns \"considered harmful\"?",
      "url": "https://www.reddit.com/r/golang/comments/1hnbcd4/naked_returns_considered_harmful/",
      "date": 1735291824,
      "author": "/u/AlexandraLinnea",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>In <a href=\"https://bitfieldconsulting.com/posts/defer\">Demystifying defer</a> it says:</p> <blockquote> <p>The Go specification actually allows us to omit the names from the return statement in this case, and this would implicitly return whatever the values of latitude and longitude happen to be at this point. But even though that’s legal syntax, it’s not good practice.</p> <p>It’s always clearer to specify the exact values or variables you’re returning, and there’s no benefit to omitting them. So you should avoid writing these so-called naked returns, even though you’ll sometimes see them in other people’s code.</p> <p>In particular, you should be aware that just because a function has named result parameters, that doesn’t mean you must write a naked return. You can, and should, make your return values explicit.</p> </blockquote> <p>Is it actually harmful to write naked returns? If so, why does anyone do it?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/AlexandraLinnea\"> /u/AlexandraLinnea </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hnbcd4/naked_returns_considered_harmful/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hnbcd4/naked_returns_considered_harmful/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Why Go For System Programming",
      "url": "https://www.reddit.com/r/golang/comments/1hn97pr/why_go_for_system_programming/",
      "date": 1735282410,
      "author": "/u/Best-Gas-2203",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>A beginner&#39;s question here as I dive deeper into the language. But upon reading the specification of the language, it mentions being a good tools for system programming. How should I understanding this statement, as in, the language is wellsuited for writing applications within the service/business logic layer, and not interacting with the UI layer? Or is it something else like operating system? </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Best-Gas-2203\"> /u/Best-Gas-2203 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hn97pr/why_go_for_system_programming/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hn97pr/why_go_for_system_programming/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "What’s your favorite program that you’ve ever written in go?",
      "url": "https://www.reddit.com/r/golang/comments/1hn0zl1/whats_your_favorite_program_that_youve_ever/",
      "date": 1735255359,
      "author": "",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Do you have any cool programs that you have written or enjoyed writing over the years?</p> </div><!-- SC_ON --> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hn0zl1/whats_your_favorite_program_that_youve_ever/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hn0zl1/whats_your_favorite_program_that_youve_ever/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "How to Make Go Structs More Efficient",
      "url": "https://www.reddit.com/r/golang/comments/1hmwmeq/how_to_make_go_structs_more_efficient/",
      "date": 1735243322,
      "author": "/u/GolangProject",
      "unread": true,
      "content": "<table> <tr><td> <a href=\"https://www.reddit.com/r/golang/comments/1hmwmeq/how_to_make_go_structs_more_efficient/\"> <img src=\"https://external-preview.redd.it/iNQ-UqFqCarQzIUyZbEs4N8eRP3qJR_0el4tyeZTk_Y.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=6b1e8640f3dbb03796dcfaa61e9f27c909301ea5\" alt=\"How to Make Go Structs More Efficient\" title=\"How to Make Go Structs More Efficient\" /> </a> </td><td> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/GolangProject\"> /u/GolangProject </a> <br/> <span><a href=\"https://golangprojectstructure.com/how-to-make-go-structs-more-efficient/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hmwmeq/how_to_make_go_structs_more_efficient/\">[comments]</a></span> </td></tr></table>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "How would you handle authentication and sessions within CLIs?",
      "url": "https://www.reddit.com/r/golang/comments/1hmtmx6/how_would_you_handle_authentication_and_sessions/",
      "date": 1735235271,
      "author": "/u/soupgasm",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Hey guys, so I&#39;m currently building a CLI and for the API to work the user has to generate a personal access token. I&#39;m currently just getting the token before each API call and passing it to the HTTP client. This needs to be done. But I want a simple way to check that the user is logged in. Would I then wrap the whole CLI in the authentication wrapper and check the session? How would you do this? </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/soupgasm\"> /u/soupgasm </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hmtmx6/how_would_you_handle_authentication_and_sessions/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hmtmx6/how_would_you_handle_authentication_and_sessions/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Single method interface pattern discussion",
      "url": "https://www.reddit.com/r/golang/comments/1hmtiuf/single_method_interface_pattern_discussion/",
      "date": 1735234961,
      "author": "/u/TryRestartingItAgain",
      "unread": true,
      "content": "<!-- SC_OFF --><div class=\"md\"><p>Hey. As has been discussed many times the Golang standard library has many single method interfaces, e.g.</p> <pre><code>package io type Reader interface { Read(p []byte) (int, error) } </code></pre> <p>These interfaces are easy to implement and create mocks/fakes for.</p> <p>_But_ in web development we often have services, handlers, and store constructs that usually have multiple methods such as <code>SaveUser</code>, <code>GetUser</code>. A very simple User service spec:</p> <pre><code>type userStore interface { GetByID(context.Context, string) (User, error) Save(context.Context, user User) error } type UserService struct { store userStore } func (s UserService) GetUser(ctx context.Context, ID string) (User, error) { ... user, err := s.store.GetByID(ctx, ID) ... } </code></pre> <p>The problem I see with this is that we have a single interface for all of <code>userStore</code> functionality, so I generally create an interface on the producing side that the consumer can use and stub which goes against &quot;define interfaces on consumer side&quot;. The biggest issue I have with this approach is that any fakes must implement the full interface.</p> <p>I was playing around with something like this instead:</p> <pre><code>type userGetter interface { GetByID(context.Context, string) (User, error) } func (s UserService) GetUser(ctx context.Context, ID string) (User, error) { ... user, err := s.userGetter.GetByID(ctx, ID) ... } </code></pre> <p>The original <code>userStore</code> can still be used to implement the interface. It makes the coupling between store and service very relaxed, it&#39;s easy to move functionality and refactor.<br/> And it&#39;s very easy to fake in tests:</p> <pre><code>type UserGetterFn func(context.Context, string) (User, error) func (f UserGetterFn) GetByID(ctx context.Context, ID string) (User, error) { return f(ctx, ID) } svc := UserService{UserGetter: func(ctx context.Context, string) (User, error) { return User{}, fmt.Errorf(&quot;not found&quot;) }) </code></pre> <p>The downside is that it&#39;s a bit tedious to write these, but it&#39;s mostly in the test code so I think it&#39;s fine for it to be more verbose.</p> <p>I can&#39;t quite tell if I like it or not, currently just playing around with it so get a feeling.</p> <p>I&#39;ve never seen anyone use this, so I wonder if anyone has tried this more extreme style?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/TryRestartingItAgain\"> /u/TryRestartingItAgain </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hmtiuf/single_method_interface_pattern_discussion/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hmtiuf/single_method_interface_pattern_discussion/\">[comments]</a></span>",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    }
  ]
}