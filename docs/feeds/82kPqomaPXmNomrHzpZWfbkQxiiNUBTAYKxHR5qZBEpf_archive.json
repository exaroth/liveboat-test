{
  "id": "82kPqomaPXmNomrHzpZWfbkQxiiNUBTAYKxHR5qZBEpf",
  "title": "Hacker News: Show HN",
  "displayTitle": "HN Show",
  "url": "https://hnrss.org/show?points=60",
  "feedLink": "https://news.ycombinator.com/shownew",
  "is_query": false,
  "items": [
    {
      "title": "Show HN: I completed shipping my desktop app",
      "url": "https://pimosa.app/",
      "date": 1735906827,
      "author": "anshrathodfr",
      "unread": true,
      "content": "\n<p>Hi, I'm a developer and first time i shipped the real product after observing the startups and indie hackers community for years.<p>I had made so many useless apps [you should check my website <a href=\"https://ansh.life\" rel=\"nofollow\">https://ansh.life</a>], but this time I built a very useful product that has a number of super easy-to-use tools in one app for video, music, and photo files. Users can compress, convert, resize, and do so much more with easy-to-use tools.<p>Background: I developed a frame-by-frame video cropper to upload cropped landscape videos to Instagram Reels. However, it required FFmpeg, and as a noob video editor, I decided to incorporate more user-friendly video tools. I then introduced image and audio tools to maximize the capabilities of FFmpeg. I use my app daily, and it has surprisingly generated a few thousand dollars for me.</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42585009\">https://news.ycombinator.com/item?id=42585009</a></p>\n<p>Points: 87</p>\n<p># Comments: 26</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: connet – A P2P reverse proxy with NAT traversal",
      "url": "https://github.com/connet-dev/connet",
      "date": 1735835228,
      "author": "Ingon",
      "unread": true,
      "content": "\n<p>Over the past couple of months, I've been working on connet. At this point, it is working pretty smoothly (in what I use it for), so I wanted to share it with more people and see what they think.<p>I know many other similar/reverse proxy solutions exist - like <a href=\"https://github.com/fatedier/frp\">https://github.com/fatedier/frp</a>, <a href=\"https://github.com/rapiz1/rathole\">https://github.com/rapiz1/rathole</a>, and a bunch more you can find at <a href=\"https://github.com/anderspitman/awesome-tunneling\">https://github.com/anderspitman/awesome-tunneling</a>. However, I wanted to try and put my own little peer-to-peer twist on it.<p>Thanks for checking it out, and sharing any feedback you might have!</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42575841\">https://news.ycombinator.com/item?id=42575841</a></p>\n<p>Points: 117</p>\n<p># Comments: 27</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: API Parrot – Automatically Reverse Engineer HTTP APIs",
      "url": "https://apiparrot.com/",
      "date": 1735737303,
      "author": "pvarghav",
      "unread": true,
      "content": "\n<p>When automating business processes at work, I found it difficult and time-consuming to reverse engineer business systems' APIs. I often had to manually reverse engineer APIs using developer tools or settle for less optimal technologies such as Robotic Process Automation (RPA).<p>Often, the issue is that it can be hard to resolve all the cookies, access tokens, and other elements required to successfully execute the requests. Manually trying to resolve these dependencies using developer tools is especially challenging with multiple requests where data is stored in JavaScript objects or HTML elements.<p>To try to solve this issue, I built a tool called API Parrot that automatically identifies the data correlations between requests and builds a graphical representation of the flow to give users a better understanding. To streamline the process, I also included functionality to record requests, define your own inputs and outputs, and export the entire flow—or parts of it—as JavaScript code.<p>The application is Electron-based and currently compiled for Windows and Linux. Please try it out and give feedback!<p>Online Tutorial: A simple example of reverse engineering the USPS API is available at <a href=\"https://docs.apiparrot.com/docs/category/tutorial---reverse-engineering-the-usps-api\" rel=\"nofollow\">https://docs.apiparrot.com/docs/category/tutorial---reverse-...</a></p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42565821\">https://news.ycombinator.com/item?id=42565821</a></p>\n<p>Points: 443</p>\n<p># Comments: 107</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: Watch 3 AIs compete in real-time stock trading",
      "url": "https://trading.snagra.com/",
      "date": 1735662778,
      "author": "sunnynagra",
      "unread": true,
      "content": "\n<p>A live dashboard where you can watch GPT-4, Claude 3, and Gemini analyze market data and make daily stock trades with real money. Each AI explains its reasoning, and you can compare their different approaches to the same data.<p>Link: <a href=\"https://trading.snagra.com?utm_source=hn\" rel=\"nofollow\">https://trading.snagra.com?utm_source=hn</a> (no signup required)<p>What you can try right now:\n- Watch live trades from GPT-4, Claude 3, and Gemini\n- Read each AI's full analysis and reasoning\n- Compare their different interpretations of the same market data\n- Track their real-time performance and win rates\n- View historical trades and performance metrics<p>Built this over the holidays to study how different AI models approach financial decisions. Each morning at 9:30 AM EST, the AIs analyze market data and make real trades with $5 stakes.<p>Technical Implementation:\n- Next.js frontend with real-time updates\n- Node.js/Lambda backend for AI processing\n- PostgreSQL for trade tracking\n- Alpaca API for automated trading\n- Consistent prompts for all models<p>Data Flow:\n1. Daily market analysis (9:30 AM EST)\n2. Each AI gets identical inputs:\n   - Financial headlines\n   - Market summaries\n   - Technical indicators\n   - Earnings reports\n3. AIs provide:\n   - Stock picks with reasoning\n   - Entry/exit conditions\n   - Risk assessment\n4. Automated trade execution<p>Note: This is an experiment in AI behavior, not investment advice. The goal is to study how different LLMs interpret financial data and make decisions with real consequences.<p>I'll be around to answer questions about the implementation.</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42559744\">https://news.ycombinator.com/item?id=42559744</a></p>\n<p>Points: 266</p>\n<p># Comments: 198</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: Execute SQL against Bluesky firehose",
      "url": "https://github.com/turbolytics/sql-flow",
      "date": 1735650800,
      "author": "dm03514",
      "unread": true,
      "content": "\n<p>Article URL: <a href=\"https://github.com/turbolytics/sql-flow\">https://github.com/turbolytics/sql-flow</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42558496\">https://news.ycombinator.com/item?id=42558496</a></p>\n<p>Points: 68</p>\n<p># Comments: 2</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: Org-Supertag",
      "url": "https://github.com/yibie/org-supertag",
      "date": 1735645454,
      "author": "oliverchan2024",
      "unread": true,
      "content": "\n<p>Enhance org-mode tag system, borrow idea from tana.</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42558143\">https://news.ycombinator.com/item?id=42558143</a></p>\n<p>Points: 83</p>\n<p># Comments: 45</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: A remake of my 2004 PDA video game",
      "url": "https://nicollet.net/blog/darklaga/remake.html",
      "date": 1735642556,
      "author": "victorNicollet",
      "unread": true,
      "content": "\n<p>My background project for the last two years has been re-implementing my 2004 C++ shoot'em up game in TypeScript + WebGL, and it's finally done (just in time for the 20th anniversary!)<p>Play the game online: <a href=\"https://nicollet.net/blog/darklaga/darklaga.html\" rel=\"nofollow\">https://nicollet.net/blog/darklaga/darklaga.html</a><p>Technical article about the remake: <a href=\"https://nicollet.net/blog/darklaga/remake.html\" rel=\"nofollow\">https://nicollet.net/blog/darklaga/remake.html</a><p>I have tested Firefox, Chrome and Edge on desktop and mobile (no access to a device capable of running Safari).<p>It's amazing how much difference 20 years makes: the hardware is so much more powerful, the web as a deployment platform is so much easier than side-loading onto a PDA through a serial cable or sharing .exe files through e-mail, and my experience as a professional developer makes almost everything so much easier... but at the same, it didn't feel that the language, editor or debugger (TypeScript on Visual Studio Code) were significantly better than good old Visual C++ 6.<p>Repository with the code of the remake: <a href=\"https://github.com/VictorNicollet/Darklaga\">https://github.com/VictorNicollet/Darklaga</a> (sadly, I cannot provide the video and audio assets themselves under any open license).</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42557920\">https://news.ycombinator.com/item?id=42557920</a></p>\n<p>Points: 74</p>\n<p># Comments: 14</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: I built open source file sharing solution using AWS S3",
      "url": "https://s3-file-share-for-free-35n2u.kinsta.app/",
      "date": 1735562267,
      "author": "rohitghumare",
      "unread": true,
      "content": "\n<p>I created a 100% Open source Company-wide Self-hosted File Sharing Solution for Teams<p>Recently, I wanted to share HD images and video files with my graphic designer. She’s exceptional at her craft but isn’t familiar with AWS S3<p>So, I got an idea and built this.<p>Github Repo: <a href=\"https://github.com/rohitg00/s3-file-share-for-free\">https://github.com/rohitg00/s3-file-share-for-free</a><p>Detailed Guide: <a href=\"https://ghumare64.medium.com/i-built-a-company-wide-self-hosted-file-sharing-solution-for-teams-186dbf688de5\" rel=\"nofollow\">https://ghumare64.medium.com/i-built-a-company-wide-self-hos...</a></p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42548763\">https://news.ycombinator.com/item?id=42548763</a></p>\n<p>Points: 61</p>\n<p># Comments: 36</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: Onramp Can Compile Doom",
      "url": "https://ludocode.com/blog/onramp-can-compile-doom",
      "date": 1735540805,
      "author": "ludocode",
      "unread": true,
      "content": "\n<p>Article URL: <a href=\"https://ludocode.com/blog/onramp-can-compile-doom\">https://ludocode.com/blog/onramp-can-compile-doom</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42547086\">https://news.ycombinator.com/item?id=42547086</a></p>\n<p>Points: 78</p>\n<p># Comments: 24</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: Chorus, a Mac app that lets you chat with a bunch of AIs at once",
      "url": "https://melty.sh/chorus",
      "date": 1735508842,
      "author": "Charlieholtz",
      "unread": true,
      "content": "\n<p>There's so many cool models to try but they're all in different places. In Chorus you can chat with a bunch of models all at once, and add your own system prompts.<p>Like 4o with a CBT overview, or a succinct Claude. Excited to hear your thoughts!</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42543601\">https://news.ycombinator.com/item?id=42543601</a></p>\n<p>Points: 137</p>\n<p># Comments: 70</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: Anki AI Utils",
      "url": "https://github.com/thiswillbeyourgithub/AnkiAIUtils",
      "date": 1735421434,
      "author": "Ey7NFZ3P0nzAe",
      "unread": true,
      "content": "\n<p>Hi hn, I am nearly at the end of medical school so it is time I publish and \"advertise\" my open source scripts/apps for anki! Here's the pitch:<p><i>Anki AI Utils</i> is a suite of AI-powered tools designed to automatically improve cards you find challenging. Whether you're studying medicine, languages, or any complex subject, these tools can:<p>- <i>Explain</i> difficult concepts with clear, ChatGPT-generated explanations.<p>- <i>Illustrate</i> key ideas using Dall-E or Stable Diffusion-generated images.<p>- <i>Create mnemonics</i> tailored to your memory style, including support for the Major System.<p>- <i>Reformulate</i> poorly worded cards for clarity and better retention.<p><i>Key Features:</i><p>- <i>Adaptive Learning:</i> Uses semantic similarity to match cards with relevant examples.<p>- <i>Personalized Memory Hooks:</i> Builds on your existing mnemonics for stronger recall.<p>- <i>Automation Ready:</i> Run scripts daily to enhance cards you struggled with.<p>- <i>Universal Compatibility:</i> Works across all Anki clients (Windows, Mac, Linux, Android, iOS).<p><i>Example:</i><p>For a flashcard about febrile seizures, Anki AI Utils can:<p>- Generate a <i>Dall-E illustration</i> of a toddler holding a teacup next to a fireplace.<p>- Create <i>mnemonics</i> like \"A child stumbles near the fire, dances symmetrically, has one strike, and fewer than three fires.\"<p>- Provide an <i>explanation</i> of why febrile seizures occur and their diagnostic criteria.<p><i>Call for Contributors:</i><p>This project is battle-tested but needs help to become a polished Anki addon. If you’re a developer or enthusiast, join us to make these tools more accessible!<p><i>Check out my other projects on GitHub:</i> [Anki AI Utils](<a href=\"https://github.com/thiswillbeyourgithub\">https://github.com/thiswillbeyourgithub</a>)<p>Transform your Anki experience with AI—because learning should be smarter, not harder.</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42534931\">https://news.ycombinator.com/item?id=42534931</a></p>\n<p>Points: 253</p>\n<p># Comments: 41</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: Handwritten Christmas Card for Hacker News",
      "url": "https://handwritten-card.vercel.app/show-hn",
      "date": 1735378585,
      "author": "muc-martin",
      "unread": true,
      "content": "\n<p>Hi HN,<p>I’ve been working on a small project that transforms handwritten notes into animated, shareable cards. While the create functionality isn’t live yet, I wanted to share a sneak peek by creating a handwritten Christmas card specifically for the HN community.<p>I started thinking about this after seeing too many AI-generated cards, cookie-cutter email templates, and overly polished designs that lack any personal touch. A friend recently sent me a handwritten card in the mail, and I found it nice that he took his time to write a handwritten note. I wanted to capture that same feeling without the overhead of snail mail.</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42529771\">https://news.ycombinator.com/item?id=42529771</a></p>\n<p>Points: 66</p>\n<p># Comments: 15</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: Minimal, self-hosted exercise tracker",
      "url": "https://github.com/bmtwl/exerciseminimilism",
      "date": 1735339542,
      "author": "DrPhish",
      "unread": true,
      "content": "\n<p>After decades of tracking my exercise programs in progressively more complex spreadsheets I eventually burned out on metrics and complicated periodization programs to the point where I had almost stopped exercising.<p>I am now at a place where I simply want the minimal amount of structure and tracking to make sure I can maintain my fitness, so I boiled the entire concept down to what I felt was its essence: enough information and structure to remind you of what is needed today, and how it went on the same exercises last week.<p>To reduce friction, the interface is kept as simple as possible. Simple to the point where all setup is done by editing the html source file and there is only one freeform \"weight\" textbox per exercise to manipulate. Data is autosaved as it is entered. It never nags or judges you except by showing the last date you entered data in for that day-of-the-week's exercises. The only quality-of-life feature is a super-simple rest period timer in the footer.<p>It has no external dependencies and only uses browser local storage. There is no possibility of monetizing it.<p>I was on the fence about sharing since it is such a small and simple project, but decided I would share here in case anyone is looking to make a fresh start in the new year and finds the philosophy appealing.</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42526769\">https://news.ycombinator.com/item?id=42526769</a></p>\n<p>Points: 127</p>\n<p># Comments: 39</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: Kando – A cross-platform pie menu for your desktop",
      "url": "https://kando.menu/",
      "date": 1735327957,
      "author": "schneegans",
      "unread": true,
      "content": "\n<p>Kando is a cross-platform open source pie menu which I am currently developing! It offers an unconventional, fast, highly efficient, and fun way of interacting with your computer! You can use it to launch applications, simulate keyboard shortcuts, open files, and much more. Let me know what you think about it!</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42525290\">https://news.ycombinator.com/item?id=42525290</a></p>\n<p>Points: 101</p>\n<p># Comments: 53</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: I made a web app to bring children's drawings to life",
      "url": "https://doodledreams.cc/",
      "date": 1735325415,
      "author": "vikmex",
      "unread": true,
      "content": "\n<p>Hey HN!<p>I used to spend hours drawing all kind of things as a kid. Sadly though, those drawings are long gone.<p>Inspired by this, I created DoodleDreams. A webapp that brings drawings to life using AI and stores them as memories. You can always look back at the drawings, see who made them, and even know the age they were drawn at.<p>I thought it was a fun way to preserve those memories. What do you think?<p>Viktor</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42524848\">https://news.ycombinator.com/item?id=42524848</a></p>\n<p>Points: 240</p>\n<p># Comments: 78</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: I send myself automated emails to practice Dutch",
      "url": "https://github.com/ThReinecke/dutch_vocabulary",
      "date": 1735304738,
      "author": "tr97",
      "unread": true,
      "content": "\n<p>Article URL: <a href=\"https://github.com/ThReinecke/dutch_vocabulary\">https://github.com/ThReinecke/dutch_vocabulary</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42521773\">https://news.ycombinator.com/item?id=42521773</a></p>\n<p>Points: 157</p>\n<p># Comments: 104</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: Instantly visualize any codebase as an interactive diagram",
      "url": "https://gitdiagram.com/",
      "date": 1735304657,
      "author": "ahmedkhaleel",
      "unread": true,
      "content": "\n<p>GitDiagram is an open-source micro dev-tool that I made this past week<p>Given any public GitHub repository it generates diagrams in Mermaid.js with Claude 3.5 Sonnet<p>I extract information from the file tree and README for details and interactivity (you can click components to be taken to relevant files and directories)<p>Also, you can replace \"hub\" with \"diagram\" in any repository URL  to access its diagram<p>I created this because I wanted to contribute to open-source projects but quickly realized their codebases are too massive for me to dig through manually, so this helps me get started<p>I do still plan on adding other features like private repository access if that becomes a thing people want<p>This project was heavily inspired by <a href=\"https://gitingest.com/\" rel=\"nofollow\">https://gitingest.com/</a> so make sure to check that out as well!<p>Hopefully this tool can help you and feedback is always welcome!</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42521769\">https://news.ycombinator.com/item?id=42521769</a></p>\n<p>Points: 220</p>\n<p># Comments: 62</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: Map with an LLM",
      "url": "https://godview.ai/",
      "date": 1735267856,
      "author": "ata_aman",
      "unread": true,
      "content": "\n<p>Christmas project from a personal need to find ideal locations.</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42519562\">https://news.ycombinator.com/item?id=42519562</a></p>\n<p>Points: 76</p>\n<p># Comments: 58</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: I've made a Monte-Carlo raytracer for glTF scenes in WebGPU",
      "url": "https://github.com/lisyarus/webgpu-raytracer",
      "date": 1735233868,
      "author": "lisyarus",
      "unread": true,
      "content": "\n<p>This is a GPU \"software\" raytracer (i.e. using manual ray-scene intersections and not RTX) written using the WebGPU API that renders glTF scenes. It supports many materials, textures, material & normal mapping, and heavily relies on multiple importance sampling to speed up convergence.</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42516433\">https://news.ycombinator.com/item?id=42516433</a></p>\n<p>Points: 130</p>\n<p># Comments: 37</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: A singing synthesizer for the browser with automatic 3-part harmony",
      "url": "https://pbat.ch/recurse/demos/trio/",
      "date": 1735190040,
      "author": "zebproj",
      "unread": true,
      "content": "\n<p>Article URL: <a href=\"https://pbat.ch/recurse/demos/trio/\">https://pbat.ch/recurse/demos/trio/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42513276\">https://news.ycombinator.com/item?id=42513276</a></p>\n<p>Points: 207</p>\n<p># Comments: 34</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: Map of YC Startups",
      "url": "https://yc-map.vercel.app/",
      "date": 1735166251,
      "author": "yoouareperfect",
      "unread": true,
      "content": "\n<p>Hey Everybody! Hope you had a merry christmas<p>Today I had a bit of fun with Claude.<p>Started by scraping YC's startups list, then ran them through OpenAI's embedding service, then UMAP'd the embedding to reduce the dimension to just two coordinates and then just forced Claude to write React that would compile to visualize that.<p>I had fun and I think it's interesting, so take a look!<p>Also note that you won't be able to zoom on mobile (found about this Plotly limitation way too late). If there's interest I can fix this issue by changing plotting libs tomorrow :)<p>Merry christmas</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42511663\">https://news.ycombinator.com/item?id=42511663</a></p>\n<p>Points: 104</p>\n<p># Comments: 45</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: I made a website to semantically search ArXiv papers",
      "url": "https://papermatch.mitanshu.tech/",
      "date": 1735105452,
      "author": "Quizzical4230",
      "unread": true,
      "content": "\n<p>As a grad student (and an ADHDer), I had trouble doing literature review systematically. To combat this, I made a website that finds similar papers using the meaning of the thing I am looking for.<p>I used MixedBread's [^1] embedding model to generate vectors from the abstracts. I store and search similar vectors using Milvus [^2] and finally use Gradio [^3] to serve the frontend. I update the vector database weekly by pulling the metadata dataset from Kaggle [^4].<p>To speed up the search process on my free oracle instance, I binarise the embeddings and use Hamming distance as a metric.<p>I would love your feedback on the site :)\nHappy Holidays!<p>[1]: <a href=\"https://www.mixedbread.ai/docs/embeddings/mxbai-embed-large-v1\" rel=\"nofollow\">https://www.mixedbread.ai/docs/embeddings/mxbai-embed-large-...</a>\n[2]: <a href=\"https://milvus.io/\" rel=\"nofollow\">https://milvus.io/</a>\n[3]: <a href=\"https://www.gradio.app/\" rel=\"nofollow\">https://www.gradio.app/</a>\n[4]: <a href=\"https://www.kaggle.com/datasets/Cornell-University/arxiv\" rel=\"nofollow\">https://www.kaggle.com/datasets/Cornell-University/arxiv</a></p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42507116\">https://news.ycombinator.com/item?id=42507116</a></p>\n<p>Points: 324</p>\n<p># Comments: 104</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: FixBrowser – a lightweight web browser created from scratch",
      "url": "https://www.fixbrowser.org/",
      "date": 1735096093,
      "author": "jezek2",
      "unread": true,
      "content": "\n<p>Hello, I'm working on a web browser that focuses on being truly lightweight and designed for privacy.<p>At some point I've realized that much of the complexity and resource requirements of web browsers comes from JavaScript. This is because every part needs to be dynamic and optimized for speed.<p>So a few years ago I've started to work on a web browser that intentionally doesn't implement JavaScript, instead it contains an updated set of scripts that fix and improve various websites.<p>I've been using this approach using a proxy server for a few years as my primary way of web browsing with good results. It uses a whitelist approach where no resources are loaded from different domains by default (the fix scripts can override it to load images from CDNs, etc.). This avoids any trackers by default.<p>You can find more details on the homepage of the project:<p><a href=\"https://www.fixbrowser.org/\" rel=\"nofollow\">https://www.fixbrowser.org/</a><p>I'm currently running a fundraiser to get it really going. All the foundation blocks are there it just needs some more work. Any support is welcome.</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42506569\">https://news.ycombinator.com/item?id=42506569</a></p>\n<p>Points: 318</p>\n<p># Comments: 147</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: Complete decompilation of Lego Island",
      "url": "https://github.com/isledecomp/isle",
      "date": 1734984217,
      "author": "foxtacles",
      "unread": true,
      "content": "\n<p>Article URL: <a href=\"https://github.com/isledecomp/isle\">https://github.com/isledecomp/isle</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42497173\">https://news.ycombinator.com/item?id=42497173</a></p>\n<p>Points: 251</p>\n<p># Comments: 32</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: Llama 3.3 70B Sparse Autoencoders with API access",
      "url": "https://www.goodfire.ai/papers/mapping-latent-spaces-llama/",
      "date": 1734974297,
      "author": "trq_",
      "unread": true,
      "content": "\n<p>Article URL: <a href=\"https://www.goodfire.ai/papers/mapping-latent-spaces-llama/\">https://www.goodfire.ai/papers/mapping-latent-spaces-llama/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42495936\">https://news.ycombinator.com/item?id=42495936</a></p>\n<p>Points: 201</p>\n<p># Comments: 50</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: Keypub.sh – OAuth for the terminal using SSH keys",
      "url": "https://keypub.sh/",
      "date": 1734967148,
      "author": "messh",
      "unread": true,
      "content": "\n<p>Hi HN! I built KeyPub.sh to solve the problem of user verification for CLI applications. It's essentially OAuth for the terminal, but using SSH keys that developers and users already have.<p>- No installation needed - works with existing SSH setup\n- Privacy-focused: users control what email info is shared\n- Simple email verification process\n- Free public service\n- Perfect for CLI app developers who don't want to build user verification<p>Try it with:\n`$ ssh keypub.sh about`<p>Source code: <a href=\"https://github.com/skariel/keypub\">https://github.com/skariel/keypub</a></p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42494997\">https://news.ycombinator.com/item?id=42494997</a></p>\n<p>Points: 221</p>\n<p># Comments: 69</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: Super Snowflake Maker",
      "url": "https://supersnowflakemaker.com/",
      "date": 1734955768,
      "author": "shalanah",
      "unread": true,
      "content": "\n<p>Hi all! Just released Super Snowflake Maker!<p>Draw on the pie with freeform or polygon tools, change the number of sections, click on the large snowflake to see fold, and.... download!<p>Enjoy + Happy Holidays!<p>(tech: threejs/r3f, react, ts, useSpring, tailwind, canvas, svg, offscreen canvas, paperjs)</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42493832\">https://news.ycombinator.com/item?id=42493832</a></p>\n<p>Points: 227</p>\n<p># Comments: 48</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: NoSQL, but it's SQLite",
      "url": "https://gist.github.com/vedantroy/df6b18fa89bc24acfe89fc8493743378",
      "date": 1734862840,
      "author": "vsroy",
      "unread": true,
      "content": "\n<p>Manipulate your SQLite database like a giant Javascript object. Built with o1.</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42485499\">https://news.ycombinator.com/item?id=42485499</a></p>\n<p>Points: 98</p>\n<p># Comments: 39</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: Demo of my web game about social persuasion",
      "url": "https://talktomehuman.com/demo",
      "date": 1734805378,
      "author": "mbforbes",
      "unread": true,
      "content": "\n<p>I just released a free demo (no login!) for \"Talk to Me Human\", a game about social persuasion. You speak out loud to play a variety of conversational challenges, and the NPCs talk back.<p>I hope you enjoy, and would love to get your feedback!</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42481249\">https://news.ycombinator.com/item?id=42481249</a></p>\n<p>Points: 144</p>\n<p># Comments: 53</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: Eonfall – A new third-person co-op action game built for the web",
      "url": "https://eonfall.com/",
      "date": 1734799536,
      "author": "jonkuze",
      "unread": true,
      "content": "\n<p>Hi all, I'm excited to share Eonfall with Hacker News Community!<p>It's been 2-years in the making built by a 2 man team. Eonfall, is a new third-person co-op action game with rogue-lite elements built exclusively for the web! We've finally reached a release candidate state and set our official public release date for Jan 15th! The game's current version 5.0.0-beta is live and available to test play today!<p>Unity game engine was used to develop the game along with other services to handle the backend, and Nuxt 3 + Nuxt UI to handle the front-end.<p>We welcome any and all questions, feedback & suggestions!<p>Thanks all, Jon</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42480624\">https://news.ycombinator.com/item?id=42480624</a></p>\n<p>Points: 222</p>\n<p># Comments: 134</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: Rivet Actors – Durable Objects build with Rust, FoundationDB, Isolates",
      "url": "https://github.com/rivet-gg/rivet",
      "date": 1734712593,
      "author": "NathanFlurry",
      "unread": true,
      "content": "\n<p>Hello! We posted a Show HN for Rivet last year for our container orchestration project (<a href=\"https://news.ycombinator.com/item?id=37188659\">https://news.ycombinator.com/item?id=37188659</a>). In that time, a lot has changed that I think HN will find interesting.<p>Rivet is open-source actor infrastructure similar to Cloudflare's Durable Objects. Rivet itself already serves millions of MAU in production using our current container runtime – primarily for multiplayer games – and Rivet Actors are a new extension to support actor-like workloads. Rivet Actor's core primitives are RPC, state, and events.<p>Actors are powered by Rust, V8 isolates (supports Deno), and FoundationDB. An architecture diagram is available here for [1]. If you're not familiar with FoundationDB, you're overdue to watch Dave Rosenthal's talk [3]. (I firmly believe it's by far the best permissively licensed database; if only it had a well maintained SQL layer.)<p>Here's where Rivet's architecture gets fun – we don't rely on a traditional orchestrator like Kubernetes or Nomad for our runtime. Instead, our orchestrator is powered by an in-house actor-like workflow engine – similar to how FoundationDB is powered by their own actor library (Flow [4]) internally. It lets us reliably & efficiently build complex logic – like our orchestrator – that would normally be incredibly difficult to build correctly. For example, here's the logic that powers Rivet Actors themselves with complex mechanisms like retry upgrades, retry backoffs, and draining [2].<p>One of the reasons we built Rivet Actors is because we tried to replace most of our Redis-based realtime infrastructure with Durable Objects. The architecture allowed us to build realtime features much faster & efficiently, but the platform & APIs were needlessly rigid and difficult to use. Our goal is to build an actor-like platform that includes the bells and whistles required for developers to benefit from the actor model without the learning curve of tools like Erlang/OTP, Akka, or Orleans.<p>Rivet Actors provides a few key benefits in flexibility over Durable Objects:<p>- Open-source (Apache 2.0) – built to be self-hosted and deployed on-prem<p>- Provides observability out of the box, no Logpush required<p>- Rivet Actors support the Deno runtime, so NPM & JSR just works<p>- @rivet-gg/actor [5] framework provides RPC, state, and events out of the box for faster bootstrapping; you can modify and deploy it yourself<p>- Supports both V8 isolates & Docker-compatible containers so you can run any software you'd like, like Godot/Unity servers or video transcoding<p>- Also supports TCP & UDP (we run games!)<p>- Provides vanilla HTTP API for easy use with existing apps<p>- Full control over regions<p>There's plenty more that I don't have space to talk about. Give our docs a read if you'd like to learn more [6] or read about internal design decisions [7]. I'll be in the comments answering questions!<p>Cheers,\nNathan<p>[1] <a href=\"https://github.com/rivet-gg/rivet?tab=readme-ov-file#diagram\">https://github.com/rivet-gg/rivet?tab=readme-ov-file#diagram</a><p>[2] <a href=\"https://github.com/rivet-gg/rivet/blob/a3db31f3b5c351061d665003a6a8dfbf3372690b/packages/services/ds/src/workflows/server/pegboard/mod.rs#L49\">https://github.com/rivet-gg/rivet/blob/a3db31f3b5c351061d665...</a><p>[3] <a href=\"https://www.youtube.com/watch?v=9g84y_60VGM\" rel=\"nofollow\">https://www.youtube.com/watch?v=9g84y_60VGM</a><p>[4] <a href=\"https://apple.github.io/foundationdb/flow.html\" rel=\"nofollow\">https://apple.github.io/foundationdb/flow.html</a><p>[5] <a href=\"https://jsr.io/@rivet-gg/actor/doc\" rel=\"nofollow\">https://jsr.io/@rivet-gg/actor/doc</a><p>[6] <a href=\"https://rivet.gg/docs\">https://rivet.gg/docs</a><p>[7] <a href=\"https://rivet.gg/docs/internals/design-decisions\">https://rivet.gg/docs/internals/design-decisions</a></p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42472519\">https://news.ycombinator.com/item?id=42472519</a></p>\n<p>Points: 132</p>\n<p># Comments: 26</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: Artemis, a Calm Web Reader",
      "url": "https://artemis.jamesg.blog/",
      "date": 1734708530,
      "author": "zerojames",
      "unread": true,
      "content": "\n<p>Earlier this year, I made a web reader that only showed a list of post titles, author domains, and links. The reader only updated once per day, so I wouldn't feel compelled to keep checking for new posts.<p>I have been using the tool, which I called Artemis, for several months. Every morning, I looked forward to my \"morning paper\" of blogs I love reading.<p>There are no notifications, read vs. unread states, counts of posts, etc. Only the last seven days of posts are available. The colour scheme is changeable. Dark mode is supported. All popular feed formats are supported.<p>There is no reading interface to read blog posts; rather, the links take you to the authors' websites. Many of my favourite bloggers put a lot of effort into the design of their blogs and like to change things up; I wanted an experience that embraced that.<p>The reader is now available for anyone to use (with invite code \"hn\").</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42471913\">https://news.ycombinator.com/item?id=42471913</a></p>\n<p>Points: 311</p>\n<p># Comments: 67</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: Ephemeral VMs in 1 Microsecond",
      "url": "https://github.com/libriscv/multi_tenant_drogon",
      "date": 1734691416,
      "author": "fwsgonzo",
      "unread": true,
      "content": "\n<p>Article URL: <a href=\"https://github.com/libriscv/multi_tenant_drogon\">https://github.com/libriscv/multi_tenant_drogon</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42469945\">https://news.ycombinator.com/item?id=42469945</a></p>\n<p>Points: 84</p>\n<p># Comments: 47</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: Interactive graphs in Rerun with a Rust port of D3-force",
      "url": "https://rerun.io/blog/graphs",
      "date": 1734687767,
      "author": "nikonp",
      "unread": true,
      "content": "\n<p>Rerun 0.21 comes with a new graph viewer that's written in Rust and runs in the browser via wasm. It's powered by a new force based layout engine that is a port of much of d3-force to Rust. (The release also contains some other cool stuff like undo/redo implemented on top of a timeseries DB.)<p>We built this with applications in robotics and spatial computing in mind but would love to hear feedback from folks that would see this as useful in other domains as well.</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42469560\">https://news.ycombinator.com/item?id=42469560</a></p>\n<p>Points: 64</p>\n<p># Comments: 13</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: Gribstream.com – Historical Weather Forecast API",
      "url": "https://gribstream.com/",
      "date": 1734658062,
      "author": "ElPeque",
      "unread": true,
      "content": "\n<p>Hello! I'd like share about my sideproject <a href=\"https://gribstream.com\" rel=\"nofollow\">https://gribstream.com</a><p>It is an API to extract weather forecasting data from the National Blend of Models (NBM) <a href=\"https://vlab.noaa.gov/web/mdl/nbm\" rel=\"nofollow\">https://vlab.noaa.gov/web/mdl/nbm</a> and the Global Forecast System (GFS) <a href=\"https://www.ncei.noaa.gov/products/weather-climate-models/global-forecast\" rel=\"nofollow\">https://www.ncei.noaa.gov/products/weather-climate-models/gl...</a> . The data is freely available from AWS S3 in grib2 format which can be great but also really hard (and resource intensive) to work with, especially if you want to extract timeseries over long periods of time based on a few coordinates. Being able to query and extract only what you want out of terabytes of data in just an http request is really nice.<p>What is cool about this dataset is that it has hourly data with full forecast history so you can use the dataset to train and forecast other parameters and have proper backtesting because you can see the weather \"as of\" points in time in the past. It has a free tier so you can play with it. There is a long list of upcoming features I intend to implement and I would very much appreciate both feedback on what is currently available and on what features you would be most interested in seeing. Like... I'm not sure if it would be better to support a few other datasets or focus on supporting aggregations.<p>Features include:<p>- A free tier to help you get started\n- Full history of weather forecasts\n- Extract timeseries for thousands of coordinates, for months at a time, at hourly resolution in a single http request taking only seconds.\n- Supports as-of/time-travel, indispensable for proper backtesting of derivative models\n- Automatic gap filling of any missing data with the next best (most recent) forecast.<p>Please try it out and let me know what you think :)</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42467449\">https://news.ycombinator.com/item?id=42467449</a></p>\n<p>Points: 70</p>\n<p># Comments: 34</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: Mizu.js – Lightweight HTML templating library for any-side rendering",
      "url": "https://mizu.sh/",
      "date": 1734632755,
      "author": "lowlighter",
      "unread": true,
      "content": "\n<p>Hey HN,<p>I'd like to share a fun project I've been working on: mizu.js.<p>It's a js library that add functional attributes support into your html, designed to be a simple and flexible alternative to fully-fledged web frameworks (such as Vue, React, and Angular), while offering more capabilities than other lightweight options (like Alpine.js and htmx).<p>As it's written using modern ES features and due to its isomorphic nature, it can be run in both browsers and runtimes (Node, Deno, Bun) without any changes.\nThis makes it ideal for client-side and server-side rendering, as well as static site generation, whichever environment you prefer.<p>Just include the script in any web page (or backend) to get started. \nYou can template content, bind attributes, add interactivity, handle HTTP interactions, create custom components, and much more — all out of the box, without any configuration, transpilation steps, or builds.<p>I hope you'll find mizu.js as exciting and useful as I do and I'd love to get your feedback!\nYou can learn more about it at <a href=\"https://mizu.sh\" rel=\"nofollow\">https://mizu.sh</a>!<p>Online playground: <a href=\"https://mizu.sh/playground\" rel=\"nofollow\">https://mizu.sh/playground</a> \nCustom builder: <a href=\"https://mizu.sh/build\" rel=\"nofollow\">https://mizu.sh/build</a>\nCode coverage: <a href=\"https://mizu.sh/coverage\" rel=\"nofollow\">https://mizu.sh/coverage</a>\nGitHub: <a href=\"https://github.com/lowlighter/mizu\">https://github.com/lowlighter/mizu</a><p>## Motivation ##<p>Nowadays, setting up a complete environment and installing thousands of packages is often required just to create a simple \"Hello World\" page. \nYet, with the current ECMAScript standard, vanilla JS has never been more powerful. \nIt offers built-in custom HTML components, proxies for changes tracking, weak references for better memory management, and many new data structures and methods.<p>So why is web development still insanely complex?<p>mizu.js aims to avoid adding bloat on top of native features, and instead focus on providing convenience helpers. \nIt's basically \"glue\" around all these native features with added sugar, a recipe for a lightweight yet powerful utility.<p>All evaluated expressions are interpreted as vanilla JavaScript, and you add your instructions directly into your HTML. \nSo if you know already know about JS/HTML, then you're already 80% know of how to use mizu.js (add an extra 10% if you've used Vue, Alpine.js or htmx in the past as some syntax and concepts are inspired by it), the rest is basically just remembering the directive names. \nThe learning curve is that small.<p>Also, you may have heard of <a href=\"https://matcha.mizu.sh\" rel=\"nofollow\">https://matcha.mizu.sh</a>, a CSS stylesheet to instantly make your web page stylized. \nWell, it's a great companion to mizu.js. With both of them, you can create MVPs for your projects super fast!</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42464310\">https://news.ycombinator.com/item?id=42464310</a></p>\n<p>Points: 224</p>\n<p># Comments: 86</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    },
    {
      "title": "Show HN: WebGPU Tech Demo",
      "url": "https://gnikoloff.github.io/webgpu-sponza-demo/",
      "date": 1734628442,
      "author": "georginikolov",
      "unread": true,
      "content": "\n<p>WebGPU tech demo running in modern browsers showcasing various rendering techniques like deferred rendering with 400+ dynamic lights, Hi-Z screen space reflections and cascaded shadow mapping.</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42463525\">https://news.ycombinator.com/item?id=42463525</a></p>\n<p>Points: 140</p>\n<p># Comments: 79</p>\n",
      "flags": null,
      "enclosureUrl": "",
      "enclosureMime": ""
    }
  ]
}